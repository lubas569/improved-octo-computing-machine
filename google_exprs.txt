((255 - int32(v0)) == int32(((uint8)255 - v0)))
((256 - int32(int16(v0))) == int32(((int16)256 - int16(v0))))
((256 - int32(v0)) == int32(((int16)256 - v0)))
(-8388736 <= max(max((v0*v0), (v1*v0)), (v1*v1)))
(float32(int32((v0*3024.000000f))) != 0.000000f)
(float32(int32((v0*4032.000000f))) != 0.000000f)
(float32(max(v0, 1)) != 0.000000f)
(float32(v0) != 0.000000f)
(float32((v0 + -1)) != 0.000000f)
((float32(((v0/2) + -1))/float32((v1 + -1))) != 0.000000f)
((float32(v0)/float32(v1)) != 0.000000f)
(int32(int16(v0)) != 0)
((int32((v0*(uint32)64)) + int32(v1)) == int32(((v0*(uint32)64) + v1)))
(let v0 = (0 <= (256/(v1/2))) in (let v2 = (select(v0, -32768, 32767)*(256/(v1/2))) in (let v3 = (select(v0, 32767, -32768)*(256/(v1/2))) in (0 <= max(max((min(v2, v3)*-32768), (v2*32767)), (v3*32767))))))
(let v0 = (0 <= (256/(v1/2))) in (let v2 = (select(v0, -32768, 32767)*(256/(v1/2))) in (let v3 = (select(v0, 32767, -32768)*(256/(v1/2))) in (0 <= min(min((max(v2, v3)*-32768), (v2*32767)), (v3*32767))))))
(let v0 = (0 <= v1) in (let v2 = select(v0, (0 - v1), v1) in (let v3 = select(v0, v1, (0 - v1)) in (67106816 <= max((min(v2, v3)*-134217728), ((max(v2, v3)*134213632) + 134215680))))))
(let v0 = (0 <= (v1 + v2)) in (let v3 = ((v1 + v2) < v4) in (float32(((((0 <= (v5 + v6)) && ((v7 + v6) < (v8 + 1))) && v0) && v3)) == float32(((((1 <= (v7 + v6)) && ((v5 + v6) < v8)) && v0) && v3)))))
(let v0 = int16(bitwise_and(v1, -16)) in (int32(v0) == (int32((v0 + (int16)63)) + -63)))
(let v0 = int16(round_f32((v1*256.000000f))) in (0 <= select((int32(v0) < 0), 0, (((int32(v0)*8378) + 128)/256))))
(let v0 = int32(ceil_f32((256.000000f/v1))) in (let v2 = min(max(v3, 1), (1 - min(v4, 1))) in (min(max(v3, 1), (v0 - v4)) <= v2)))
(let v0 = int32(ceil_f32((float32(v1)/float32(v2)))) in (let v3 = min(max(v4, 1), (1 - min(v5, 1))) in (min(max(v4, 1), (v0 - v5)) <= v3)))
(let v0 = int32(ceil_f32((float32(v1)/float32(v2)))) in (let v3 = min((((v4 - v5) + 7)/8), (max(((0 - v5)/8), -1) + 1)) in ((min(min(min(min((v4 - v5), ((v0 - v5) + 7)), (min(v4, v0) - v5)), ((v0 - v5) + 1)), ((v4 - v5) + 7))/8) <= v3)))
(let v0 = (int32(((max(min(v1, (int16)31), (int16)0)*(int16)2) + (int16)1)) + int32(((int16)0 - max(min(v1, (int16)31), (int16)0)))) in (((min(min((int32(((int16)0 - max(min(v1, (int16)31), (int16)0)))*int32(((int16)0 - max(min(v1, (int16)31), (int16)0)))), ((v0 + -1)*int32(((int16)0 - max(min(v1, (int16)31), (int16)0))))), ((v0 + -1)*(v0 + -1)))*256) + -128) <= max((int32(uint16((max(min(v1, (int16)31), (int16)0)*(int16)16)))*int32(uint16((max(min(v1, (int16)31), (int16)0)*(int16)16)))), 0)))
(let v0 = int32(round_f32((v1*32768.000000f))) in (let v2 = (v0 < 0) in (let v3 = (((v4 + 32768)/65536) - ((v5 + -32768)/65536)) in ((((min((select(v2, (((v6 + v7)*2) + -1), ((v7*2) + 1))*v0), v5) + 425984)/65536) + ((v3/8)*8)) <= max((((select(v2, ((v7*2) + 1), (((v6 + v7)*2) + -1))*v0) + 32768)/65536), (((v5 + 425984)/65536) + ((v3/8)*8)))))))
(let v0 = int32(round_f32((v1*32768.000000f))) in (let v2 = (v0 < 0) in (let v3 = (((v4 + 32768)/65536) - ((v5 + -32768)/65536)) in ((((min((select(v2, (((v6 + v7)*2) + -1), ((v7*2) + 1))*v0), v5) + 950272)/65536) + ((v3/16)*16)) <= max((((select(v2, ((v7*2) + 1), (((v6 + v7)*2) + -1))*v0) + 32768)/65536), (((v5 + 950272)/65536) + ((v3/16)*16)))))))
(let v0 = int32(round_f32((v1*32768.000000f))) in (((min((select((v0 < 0), (((v2 + v3)*2) + -1), ((v3*2) + 1))*v0), v4) + -32768)/65536) <= ((v4 + -32768)/65536)))
(let v0 = max(max((v1*v1), (v2*v1)), (v2*v2)) in ((int32((v3*v3)) + int32(v0)) == int32(((v3*v3) + v0))))
(let v0 = ((max(min(((v1 + -32768)/65536), v2), v3)*v4) + (v5 - v6)) in (((max(min(((v7*64) + 63), v8), v9) + v0)/32) < (((max(min((v7*64), v8), v9) + v0)/32) + 8)))
(let v0 = ((max(min(((v1 + 32768)/65536), v2), v3)*v4) + (v5 - v6)) in (((max(min(((v7*64) + 63), v8), v9) + v0)/32) < (((max(min((v7*64), v8), v9) + v0)/32) + 8)))
(let v0 = max((v1*(uint32)65535), (v2*(uint32)65535)) in (int32(v0) == (int32((v0 + (uint32)16)) + -16)))
(let v0 = min(max(((0 - v1)/2), (((v2/128)*128) - ((((v3*16) + v4) + v5)*v1))), (((0 - v1)/2) + v6)) in (min((((((v2/128) + ((v2/128) + (v7/128)))*128) - ((((v3*16) + v4) + v5)*v1)) + -1), (((0 - v1)/2) + v6)) <= v0))
(let v0 = min(max(((0 - v1)/2), (((v2/128)*128) - ((((v3*8) + v4) + v5)*v1))), (((0 - v1)/2) + v6)) in (min((((((v2/128) + ((v2/128) + (v7/128)))*128) - ((((v3*8) + v4) + v5)*v1)) + -1), (((0 - v1)/2) + v6)) <= v0))
(let v0 = min(max(max(max(max(v1, v2), v3), v4), 0), v5) in (min(min(min(min((v6 + v1), (v7 + v2)), (v8 + v3)), (v5 + v4)), v5) <= v0))
(let v0 = min(max(max(v1, v2), 0), v3) in (min(min((v4 + v1), (v5 + v2)), v3) <= v0))
(let v0 = min(max(max(v1, v2), (v3 + -1)), (v3 + 9)) in (min(min((v4 + v1), (v5 + v2)), (v3 + 9)) <= v0))
(let v0 = min(max((((max(v1, v2) - v3) + 7)/8), 0), ((v4 + 7)/8)) in ((min(min(min(((v5 + v1) - v3), v4), ((v6 + v2) - v3)), (min((min((v5 + v1), (v6 + v2)) - v3), v4) + 7))/8) <= v0))
(let v0 = min(max(max(v1, v2), v3), (v4 + v3)) in (min(min((v5 + v1), (v6 + v2)), (v4 + v3)) <= v0))
(let v0 = min(max(((((v1*128) + v2) + v3) - v4), v5), ((((((v1*128) + v2) + v3) - v4) + v6) + 1)) in (min((v7 + v5), ((((((v1*128) + v2) + v3) - v4) + v6) + 1)) <= v0))
(let v0 = min(max((((v1*32) + v2) + -1), v3), ((((v1*32) + v2) + v4) + 1)) in (min((v5 + v3), ((((v1*32) + v2) + v4) + 1)) <= v0))
(let v0 = (min((((max((v1/8), 32)*v2) + v3) + 1), v4) + (v5/2)) in (((v0*2) + -28) <= ((v0/2)*4)))
(let v0 = min(max((v1 - (v2*v3)), 0), v2) in (min(((v4 + v1) - (v2*v3)), v2) <= v0))
(let v0 = min(max((v1 - (v2*v3)), 0), v3) in (min(((v4 + v1) - (v2*v3)), v3) <= v0))
(let v0 = min(max((v1 - ((v2 + v3)*v4)), 0), v4) in (min(((v5 + v1) - ((v2 + v3)*v4)), v4) <= v0))
(let v0 = min(((v1 + 7)/8), (max((((v2/2) + (v3 - v4))/8), -1) + 1)) in (((min((min(min(min(min((((v5 + v2) + -15)/2), (min((((v5 + v2)/2) + 1), (((v5/2) + v4) + v3)) + -8)), ((v5 + v2)/2)), (((v5 + v2) + -1)/2)), ((((v5/2) + v4) + v3) + -8)) + (v3 - v4)), (v1 + -1))/8) + 1) <= v0))
(let v0 = (min(v1, 8) + ((v2*v1) + v3)) in (let v4 = min((max(min(v5, 2), ((v6 - v0) + 10)) + -2), (min(v5, 2) + v7)) in (min((min(((v8 + v6) - (min((((v1 + -1)/8)*8), (v1 + -8)) + ((v2*v1) + v3))), (((v8 + v6) - v0) + 15)) + -7), (min(v5, 2) + v7)) <= v4)))
(let v0 = min(((v1 + 9)/8), (max(((max(v2, v3) - v4)/8), -1) + 1)) in (((min(min(min(min(((v5 + v2) - v4), (v1 + -6)), (min(min(((v5 + v2) - v4), (v1 + 1)), ((v6 + v3) - v4)) + -7)), ((v6 + v3) - v4)), (v1 + 1))/8) + 1) <= v0))
(let v0 = min((((v1 + v2) - v3) + 1), v4) in (let v5 = min(max((((max(v2, v6) - v3) + 1)/2), 0), ((v4 + 1)/2)) in ((min(min(min(min((min((v1 + v2), (v7 + v6)) - v3), v0), (((v7 + v6) - v3) + 1)), v4), (v4 + 1))/2) <= v5)))
(let v0 = min((((v1 + v2) - v3) + 3), v4) in (let v5 = min(max((((max(v6, v2) - v3) + 3)/4), 0), ((v4 + 3)/4)) in ((min(min(min(min(min(((v7 + v6) - v3), v4), ((v1 + v2) - v3)), (((v7 + v6) - v3) + 3)), v0), (v4 + 3))/4) <= v5)))
(let v0 = min((((v1 + v2) - v3) + 7), v4) in (let v5 = min(max((((max(v6, v2) - v3) + 7)/8), 0), ((v4 + 7)/8)) in ((min(min(min(min(min(((v7 + v6) - v3), v4), ((v1 + v2) - v3)), (((v7 + v6) - v3) + 7)), v0), (v4 + 7))/8) <= v5)))
(let v0 = min(((v1 + v2) - v3), (v4 + -6)) in (let v5 = min(((v4 + 9)/8), (max(((max(v6, v2) - v3)/8), -1) + 1)) in (((min(min(min(min(((v7 + v6) - v3), (v4 + -6)), ((min((v7 + v6), (v1 + v2)) - v3) + -7)), v0), (v4 + 1))/8) + 1) <= v5)))
(let v0 = select((0 < v1), ((((min(((max((v2/8), 32)*v3) + v1), v4) + (v5/2))/2)*2) + 2), ((((v5/2) + ((max((v2/8), 32)*v3) + v1))/2)*2)) in (let v6 = (min((((max((v2/8), 32)*v3) + v1) + 1), v4) + (v5/2)) in (let v7 = (((3 - v0)/2) + (v6/2)) in ((v6 + 1) <= ((v7*2) + v0)))))
(let v0 = select((((v1 + v2) <= ((v3*8) + v4)) || (((v3*8) + v4) < v2)), 0.000000f, confidence[((max(min(((v3*8) + v4), ((v1 + v2) + -1)), v2) + (v5*v6)) - ((v7*v5) + v2))]) in (let v8 = min(min((v9*v9), (v10*v9)), (v10*v10)) in (let v11 = max(max((v9*v9), (v10*v9)), (v10*v10)) in (min((v0*v8), (v0*v11)) == max((v0*v8), (v0*v11))))))
(let v0 = select(((((v1 + v2) <= ((v3*8) + v4)) || (((v3*8) + v4) < v2)) || ((v5 + v6) <= v7)), 0.000000f, confidence[((max(min(((v3*8) + v4), ((v1 + v2) + -1)), v2) + (max(min(((v5 + v6) + -1), v7), v6)*v8)) - ((v6*v8) + v2))]) in (let v9 = min(min((v10*v10), (v11*v10)), (v11*v11)) in (let v12 = max(max((v10*v10), (v11*v10)), (v11*v11)) in (min((v0*v9), (v0*v12)) == max((v0*v9), (v0*v12))))))
(let v0 = select((((((v1 + v2) <= ((v3*8) + v4)) || (((v3*8) + v4) < v2)) || (v5 < v6)) || ((v7 + v6) <= v5)), 0.000000f, confidence[((max(min(((v3*8) + v4), ((v1 + v2) + -1)), v2) + (max(min(((v7 + v6) + -1), v5), v6)*v8)) - ((v6*v8) + v2))]) in (let v9 = min(min((v10*v10), (v11*v10)), (v11*v11)) in (let v12 = max(max((v10*v10), (v11*v10)), (v11*v11)) in (min((v0*v9), (v0*v12)) == max((v0*v9), (v0*v12))))))
(let v0 = (v1 == 0) in (let v2 = (v1 == 1) in (let v3 = select((((v4 + 3) <= v1) || (v1 < (v4 + 2))), 0.000000f, input[((((v5 + v6)*v7) + (v8 + v9)) - ((v10*v7) + v11))]) in ((select(v2, (v12 - v13), (min((v12*v3), (v13*v3)) - max((v12*v3), (v13*v3)))) == 0.000000f) || v0))))
(let v0 = (v1 == 0) in (let v2 = (v1 == 1) in (let v3 = select((((((((v4 + v5) <= v6) || (v6 < v5)) || (v7 < v8)) || ((v9 + v8) <= v7)) || (v1 < (v10 + 2))) || (((v11 + v10) + 2) <= v1)), 0.000000f, input[(((max((min(((v11 + v10) + 1), v1) + -2), v10)*v12) + (max(min(((v4 + v5) + -1), v6), v5) + (max(min(((v9 + v8) + -1), v7), v8)*v13))) - ((v10*v12) + ((v8*v13) + v5)))]) in ((select(v2, (v14 - v15), (min((v14*v3), (v15*v3)) - max((v14*v3), (v15*v3)))) == 0.000000f) || v0))))
(let v0 = (v1 == 0) in (let v2 = (v1 == 1) in (let v3 = select(((((v4 + v5) <= (v6 + v7)) || (v1 < (v8 + 2))) || ((v8 + 3) <= v1)), 0.000000f, input[((max(min((v6 + v7), ((v4 + v5) + -1)), v5) + ((v9 + v10)*v11)) - ((v12*v11) + v5))]) in ((select(v2, (v13 - v14), (min((v13*v3), (v14*v3)) - max((v13*v3), (v14*v3)))) == 0.000000f) || v0))))
(let v0 = (v1 == 0) in (let v2 = (v1 == 1) in (let v3 = select(((((v4 + v5) <= (v6 + v7)) || (v1 < (v8 + 2))) || (((v9 + v8) + 2) <= v1)), 0.000000f, input[(((max((min(((v9 + v8) + 1), v1) + -2), v8)*v10) + (max(min((v6 + v7), ((v4 + v5) + -1)), v5) + ((v11 + v12)*v13))) - ((v8*v10) + ((v14*v13) + v5)))]) in ((select(v2, (v15 - v16), (min((v15*v3), (v16*v3)) - max((v15*v3), (v16*v3)))) == 0.000000f) || v0))))
(let v0 = (v1 == 0) in (let v2 = (v1 == 1) in (let v3 = select((((((v4 + v5) <= (v6 + v7)) || ((v6 + v7) < v5)) || (v1 < (v8 + 2))) || ((v8 + 3) <= v1)), 0.000000f, input[((max(min((v6 + v7), ((v4 + v5) + -1)), v5) + ((v9 + v10)*v11)) - ((v12*v11) + v5))]) in ((select(v2, (v13 - v14), (min((v13*v3), (v14*v3)) - max((v13*v3), (v14*v3)))) == 0.000000f) || v0))))
(let v0 = (v1 == 0) in (let v2 = (v1 == 1) in (let v3 = select((((((v4 + v5) <= (v6 + v7)) || ((v6 + v7) < v5)) || (v1 < (v8 + 2))) || (((v9 + v8) + 2) <= v1)), 0.000000f, input[(((max((min(((v9 + v8) + 1), v1) + -2), v8)*v10) + (max(min((v6 + v7), ((v4 + v5) + -1)), v5) + ((v11 + v12)*v13))) - ((v8*v10) + ((v14*v13) + v5)))]) in ((select(v2, (v15 - v16), (min((v15*v3), (v16*v3)) - max((v15*v3), (v16*v3)))) == 0.000000f) || v0))))
(let v0 = (v1 == 0) in (let v2 = (v1 == 1) in (let v3 = select((((((((v4 + v5) <= (v6 + v7)) || ((v6 + v7) < v5)) || ((v8 + v9) < v10)) || ((v11 + v10) <= (v8 + v9))) || (v1 < (v12 + 2))) || ((v12 + 3) <= v1)), 0.000000f, input[((max(min((v6 + v7), ((v4 + v5) + -1)), v5) + (max(min((v8 + v9), ((v11 + v10) + -1)), v10)*v13)) - ((v10*v13) + v5))]) in ((select(v2, (v14 - v15), (min((v14*v3), (v15*v3)) - max((v14*v3), (v15*v3)))) == 0.000000f) || v0))))
(let v0 = (v1 == 0) in (let v2 = (v1 == 1) in (let v3 = select((((((((v4 + v5) <= (v6 + v7)) || ((v6 + v7) < v5)) || ((v8 + v9) < v10)) || ((v11 + v10) <= (v8 + v9))) || (v1 < (v12 + 2))) || (((v13 + v12) + 2) <= v1)), 0.000000f, input[(((max((min(((v13 + v12) + 1), v1) + -2), v12)*v14) + (max(min((v6 + v7), ((v4 + v5) + -1)), v5) + (max(min((v8 + v9), ((v11 + v10) + -1)), v10)*v15))) - ((v12*v14) + ((v10*v15) + v5)))]) in ((select(v2, (v16 - v17), (min((v16*v3), (v17*v3)) - max((v16*v3), (v17*v3)))) == 0.000000f) || v0))))
(let v0 = (v1 == 0) in (let v2 = (v1 == 1) in (let v3 = select(((((((v4 + v5) <= (v6 + v7)) || ((v6 + v7) < v5)) || ((v8 + v9) <= (v10 + v11))) || (v1 < (v12 + 2))) || ((v12 + 3) <= v1)), 0.000000f, input[((max(min((v6 + v7), ((v4 + v5) + -1)), v5) + (max(min((v10 + v11), ((v8 + v9) + -1)), v9)*v13)) - ((v9*v13) + v5))]) in ((select(v2, (v14 - v15), (min((v14*v3), (v15*v3)) - max((v14*v3), (v15*v3)))) == 0.000000f) || v0))))
(let v0 = (v1 == 0) in (let v2 = (v1 == 1) in (let v3 = select(((((((v4 + v5) <= (v6 + v7)) || ((v6 + v7) < v5)) || ((v8 + v9) <= (v10 + v11))) || (v1 < (v12 + 2))) || (((v13 + v12) + 2) <= v1)), 0.000000f, input[(((max((min(((v13 + v12) + 1), v1) + -2), v12)*v14) + (max(min((v6 + v7), ((v4 + v5) + -1)), v5) + (max(min((v10 + v11), ((v8 + v9) + -1)), v9)*v15))) - ((v12*v14) + ((v9*v15) + v5)))]) in ((select(v2, (v16 - v17), (min((v16*v3), (v17*v3)) - max((v16*v3), (v17*v3)))) == 0.000000f) || v0))))
(let v0 = ((v1/128) + ((v1/128) + (v2/128))) in (let v3 = ((((v4*16) + v5)*v6) + (min(v6, 0)*15)) in (let v7 = min(max(((0 - v6)/2), (((v1/128)*128) - v3)), (((0 - v6)/2) + v8)) in (min((((v0*128) - max(((((v4*16) + v5)*v6) + (max(v6, 0)*15)), v3)) + -1), (((0 - v6)/2) + v8)) <= v7))))
(let v0 = ((v1/128) + ((v1/128) + (v2/128))) in (let v3 = ((((v4*8) + v5)*v6) + (min(v6, 0)*7)) in (let v7 = min(max(((0 - v6)/2), (((v1/128)*128) - v3)), (((0 - v6)/2) + v8)) in (min((((v0*128) - max(((((v4*8) + v5)*v6) + (max(v6, 0)*7)), v3)) + -1), (((0 - v6)/2) + v8)) <= v7))))
(let v0 = ((v1/128) + ((v2/128) + (v1/128))) in (((min(max(min((((0 - v3)/2) + (v3*v4)), ((v0*128) + -2)), ((v1/128)*128)), v5) + (((v6 - v5)/16)*16)) + 15) <= max(max(((v1/128)*128), (min((v0*128), (((v3/2) + (v3*v7)) + 1)) + -2)), (((((v6 - v5)/16)*16) + v5) + 15))))
(let v0 = ((v1/128) + ((v2/128) + (v1/128))) in (((min(max(min((((0 - v3)/2) + (v3*v4)), ((v0*128) + -2)), ((v1/128)*128)), v5) + (((v6 - v5)/8)*8)) + 7) <= max(max(((v1/128)*128), (min((v0*128), (((v3/2) + (v3*v7)) + 1)) + -2)), (((((v6 - v5)/8)*8) + v5) + 7))))
(let v0 = ((v1/128) + ((v2/128) + (v1/128))) in (((min(max(min((((0 - v3)/2) + v4), ((v0*128) + -2)), ((v1/128)*128)), v5) + (((v6 - v5)/16)*16)) + 15) <= max(max(((v1/128)*128), (min((v0*128), (((v3/2) + v7) + 1)) + -2)), (((((v6 - v5)/16)*16) + v5) + 15))))
(let v0 = ((v1/128) + ((v2/128) + (v1/128))) in (((min(max(min((((0 - v3)/2) + v4), ((v0*128) + -2)), ((v1/128)*128)), v5) + (((v6 - v5)/8)*8)) + 7) <= max(max(((v1/128)*128), (min((v0*128), (((v3/2) + v7) + 1)) + -2)), (((((v6 - v5)/8)*8) + v5) + 7))))
(let v0 = ((v1/128) + ((v2/128) + (v1/128))) in (((min(max(((v1/128)*128), (min((v0*128), ((v3*2) + 1)) + -2)), v4) + (((v5 - v4)/16)*16)) + 15) <= max(max(((v1/128)*128), ((min((v0*64), (v6 + v3))*2) + -2)), (((((v5 - v4)/16)*16) + v4) + 15))))
(let v0 = ((v1/128) + ((v2/128) + (v1/128))) in (((min(max(((v1/128)*128), (min((v0*128), ((v3*2) + 1)) + -2)), v4) + (((v5 - v4)/8)*8)) + 7) <= max(max(((v1/128)*128), ((min((v0*64), (v6 + v3))*2) + -2)), (((((v5 - v4)/8)*8) + v4) + 7))))
(let v0 = ((v1/128) + ((v2/128) + (v1/128))) in (((min(max(((v1/128)*128), ((min((v0*32), v3)*4) + -2)), v4) + (((v5 - v4)/16)*16)) + 15) <= max(max(((v1/128)*128), (min((v0*128), (((v6 + v3)*4) + -1)) + -2)), (((((v5 - v4)/16)*16) + v4) + 15))))
(let v0 = ((v1/128) + ((v2/128) + (v1/128))) in (((min(max(((v1/128)*128), ((min((v0*32), v3)*4) + -2)), v4) + (((v5 - v4)/8)*8)) + 7) <= max(max(((v1/128)*128), (min((v0*128), (((v6 + v3)*4) + -1)) + -2)), (((((v5 - v4)/8)*8) + v4) + 7))))
(let v0 = ((((v1*16) + v2)*v3) + (min(v3, 0)*15)) in (let v4 = ((v5 + v6) - ((((v1*16) + v2)*v3) + (max(v3, 0)*15))) in (let v7 = min(max((v6 - v0), 0), (v3 + -1)) in ((min(min(min(((v5 + v6) - v0), v4), (v4 + 1)), v3) + -1) <= v7))))
(let v0 = ((v1*2) + ((((((v2*64) + v3) + v4)*2) + v5) + v6)) in (((select((0 < v1), 4, -4) + v0) + -4) <= ((v1*2) + ((((((v2*64) + v3) + v4)*2) + v5) + v6))))
(let v0 = ((v1*2) + ((((((v2*64) + v3) + v4)*2) + v5) + v6)) in (((select((0 < v1), 6, -6) + v0) + -6) <= ((v1*2) + ((((((v2*64) + v3) + v4)*2) + v5) + v6))))
(let v0 = ((v1/2) - (v2*v1)) in (let v3 = min(max((max(max(v4, v5), v6) + v0), 0), v1) in (min((min(min((v7 + v4), (v8 + v5)), (v9 + v6)) + v0), v1) <= v3)))
(let v0 = ((v1/2) - (v2*v1)) in (let v3 = min(max((max(v4, v5) + v0), 0), v1) in (min((min((v6 + v4), (v7 + v5)) + v0), v1) <= v3)))
(let v0 = ((v1/2) - (v2*v1)) in (let v3 = min(max((v4 + v0), 0), v1) in (min(((v5 + v4) + v0), v1) <= v3)))
(let v0 = (v1*int32(round_f32((v2*32768.000000f)))) in ((v0 % 1024) == 0))
(let v0 = (v1*int32(round_f32((v2*32768.000000f)))) in ((v0 % 32768) == 0))
(let v0 = (v1 % max(((v2 + 15)/16), 1)) in (let v3 = (((v4 + -32768)/4194304) + (v0*16)) in (max(min(max(min((v2 - (v0*16)), ((((v5/128) + (v6/128))*2) - v3)), (((v5/128)*2) - v3)), 16), 0) <= max(min((((v5/128)*2) - v3), 16), 0))))
(let v0 = ((v1/max(((v2 + 15)/16), 1))*int32(round_f32((v3*32768.000000f)))) in ((v0 % 256) == 0))
(let v0 = (v1 - (((v2 + -2048)/4096)*4096)) in (let v3 = (v2 - (((v1 + -2048)/4096)*4096)) in (67104768 <= max(max((v0*32767), ((min(v0, v3)*-32768) + 134215680)), (v3*32767)))))
(let v0 = (v1 <= v2) in (let v3 = ((255.000000f - (v4*0.500000f))*(255.000000f - (v4*0.500000f))) in (let v5 = ((255.000000f - (v6*0.500000f))*(255.000000f - (v4*0.500000f))) in (let v7 = ((255.000000f - (v4*0.500000f))*(255.000000f - (v6*0.500000f))) in (let v8 = ((255.000000f - (v6*0.500000f))*(255.000000f - (v6*0.500000f))) in (let v9 = (min(min(min(v3, v5), v7), v8)*(v2 - v1)) in (let v10 = (max(max(max(v3, v5), v7), v8)*(v2 - v1)) in (let v11 = select(v0, v9, v10) in (let v12 = ((0.000000f - v13)*((v11*0.000015f) + v1)) in (let v14 = select(v0, v10, v9) in (let v15 = ((0.000000f - v13)*((v14*0.000015f) + v1)) in (let v16 = ((255.000000f - v17)*((v11*0.000015f) + v1)) in (let v18 = ((255.000000f - v17)*((v14*0.000015f) + v1)) in (let v19 = round_f32(max(min(round_f32((min(min(min(v12, v15), v16), v18) + v17)), 255.000000f), 0.000000f)) in (let v20 = round_f32(max(min(round_f32(max(min(round_f32((max(max(max(v12, v15), v16), v18) + v13)), 255.000000f), 0.000000f)), 255.000000f), 0.000000f)) in ((float32(uint8(max(min(v19, 255.000000f), 0.000000f))) == max(min(v19, 255.000000f), 0.000000f)) && (float32(uint8(max(min(v20, 255.000000f), 0.000000f))) == max(min(v20, 255.000000f), 0.000000f))))))))))))))))))
(let v0 = (v1 - ((v2/max(((v3 + 15)/16), 1))*128)) in ((max(min(v0, 128), 0) + (((max(min(v0, 128), 0)*-1)/128)*128)) == 0))
(let v0 = (v1 - ((v2/(max((v3/16), 0) + 1))*128)) in ((max(min(v0, 128), 0) + (((max(min(v0, 128), 0)*-1)/128)*128)) == 0))
(let v0 = ((v1 + v2) - (max(v3, 1)*v4)) in (let v5 = ((v6 + v7) - (max(v3, 1)*v4)) in (let v8 = (v2 - (max(v3, 1)*v4)) in (let v9 = (v7 - (max(v3, 1)*v4)) in (let v10 = min(max(max(v8, v9), 0), max(v3, 1)) in (min(max(v3, 1), min(v0, v5)) <= v10))))))
(let v0 = ((v1*v2) + (min(v1, 0)*15)) in (let v3 = min(max((v4 - v0), 0), v1) in (min(((v5 + v4) - max(((v1*v2) + (max(v1, 0)*15)), v0)), v1) <= v3)))
(let v0 = ((v1*v2) + (min(v1, 0)*7)) in (let v3 = min(max((v4 - v0), 0), v1) in (min(((v5 + v4) - max(((v1*v2) + (max(v1, 0)*7)), v0)), v1) <= v3)))
(let v0 = ((v1 + v2) - ((((v3*16) + v4) + v5)*v6)) in (let v7 = (v2 - ((((v3*16) + v4) + v5)*v6)) in (let v8 = min(max(v7, 0), (v6 + -1)) in ((min(v0, v6) + -1) <= v8))))
(max(max(min(v0, 1), (min(v0, 0) + 1)), 0) <= max(min(v0, 1), 0))
(max(max(min(v0, 3), (min(v0, 0) + 3)), 0) <= max(min(v0, 3), 0))
((max(((v0 + 15)/16), 0) + -1) <= max((v0/16), 0))
((max(((v0 + 31)/32), 0) + -1) <= max((v0/32), 0))
((max((((v0 - v1) + 7)/8), 0) + -1) <= max(((v0 - v1)/8), 0))
(min(v0, 1.000000f) != 0.000000f)
(min(((((v0/2) + v1)*2) + -5), ((v1*2) + v0)) <= max((((((v0 + 5)/2) + v1)*2) + 2), ((v1*2) + v0)))
(((uint16)160 <= max(min(v0, (uint16)290), (uint16)16)) || v1)
(((uint16)160 <= v0) || v1)
(((uint16)32 <= max(min(v0, (uint16)290), (uint16)16)) || v1)
(((uint16)32 <= v0) || v1)
(((uint16)400 <= v0) || v1)
(((uint16)550 <= v0) || v1)
(uint16((max(min(v0, (int16)31), (int16)0)*(int16)16)) < (uint16)1024)
(uint16((max(min(v0, (int16)31), (int16)0)*(int16)16)) < (uint16)16384)
(uint16((max(min(v0, (int16)31), (int16)0)*(int16)16)) < (uint16)4096)
(v0 != 0)
(v0 != 0.000000f)
!((v0 <= 0) && (0 <= v0))
((v0/2) != 0)
((v0*2) != 2)
(((v0*2) + -40) <= (((v0 + -17)/4)*8))
(!((((v0 == 3) && (v1 == 1)) && (v2 == 3)) && (((v3 == 3) && (v4 == 1)) && (v5 == 3))) || (0.003131f <= v6))
(!((((v0 == 3) && (v1 == 1)) && (v2 == 3)) && (((v3 == 3) && (v4 == 1)) && (v5 == 3))) || (v6 == 0.000000f))
(!((((v0 == 3) && (v1 == 1)) && (v2 == 3)) && (((v3 == 3) && (v4 == 1)) && (v5 == 3))) || (v6 != 0.000000f))
(((((v0 == 3) && (v1 == 1)) && (v2 == 3)) && (((v3 == 3) && (v4 == 1)) && (v5 == 3))) || (v6 != 0.000000f))
(!((((v0 == 3) && (v1 == 1)) && (v2 == 3)) && (((v3 == 3) && (v4 == 1)) && (v5 == 3))) || (v6 < 0.003131f))
!((((v0*4) + v1) <= 0) && (0 <= ((v0*4) + v1)))
!((v0 != 8) && ((v0/2) == 0))
!((((v0*8) + v1) <= 0) && (0 <= ((v0*8) + v1)))
(!((v0 < 8) || (v1 < 4)) || (v2 != 1))
(((v0 < 8) || (v1 < 4)) || (v2 != 1))
(!v0 || ((uint16)160 <= v1))
(!v0 || ((uint16)32 <= v1))
(!v0 || ((uint16)400 <= v1))
(!v0 || ((uint16)550 <= v1))
