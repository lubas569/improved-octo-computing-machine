!((v0 < (((v1 + v2) + -5)/4)) && ((((v1 + v2) + -1)/4) < (v0 + -3)))
!((v0 < (((v1 + v2) + v3)/v4)) && ((((v1 + v2) + v3)/v4) < (v0 + -3)))
!((v0 < ((v1 + v2) + -16)) && ((v1 + v2) < (v0 + -16)))
!((v0 < ((v1 + v2) + -2)) && ((v1 + v2) < (v0 + -3)))
!((v0 < ((v1 + v2) + -3)) && ((v1 + v2) < (v0 + -18)))
!((v0 < ((v1 + v2) + -3)) && ((v1 + v2) < (v0 + -5)))
!((v0 < ((v1 + v2) + -4)) && ((v1 + v2) < (v0 + -18)))
!((v0 < ((v1 + v2) + -4)) && ((v1 + v2) < (v0 + -3)))
!((v0 < ((v1 + v2) + -4)) && ((v1 + v2) < (v0 + -6)))
!((v0 < ((v1 + v2) + -8)) && ((v1 + v2) < (v0 + -8)))
!((v0 < ((v1 + v2) + 1)) && ((v1 + v2) < (v0 + -18)))
!((v0 < (v1 + -1)) && (v1 < (v0 + -13)))
!((v0 < (v1 + -16)) && (v1 < (v0 + -6)))
!((v0 < (v1 + -2)) && (v1 < (v0 + -12)))
!((v0 < (v1 + -2)) && (v1 < (v0 + -6)))
!((v0 < (v1 + -3)) && (v1 < (v0 + -9)))
!((v0 < (v1 + -7)) && (v1 < (v0 + -10)))
!((v0 < (v1 + -7)) && (v1 < (v0 + -7)))
!((v0 < (v1 + 11)) && (v1 < (v0 + -17)))
!((v0 < (v1 + 31)) && (v1 < (v0 + -46)))
!((v0 < v1) && ((((((v2*2) + v1)*2) + v3)*4) < (((min((((v2*2) + v1)*4), (v4 + v5)) + (v3*2))*2) + -1)))
!((v0 < v1) && ((((((v2*2) + v1)*4) + v3)*4) < (((min((((v2*2) + v1)*8), (((v4 - v3)*2) + v5)) + (v3*2))*2) + -1)))
!((v0 < v1) && ((((((v2*2) + v1)*6) + v3)*4) < (((min((((v2*2) + v1)*12), (((v4 - v3)*2) + v5)) + (v3*2))*2) + -1)))
!((v0 < v1) && (((((v2*2) + v1) + v3)*4) < (((min((((v2*2) + v1)*2), (((v4 - v3)*2) + v5)) + (v3*2))*2) + -1)))
!((v0 < v1) && (((((v2*2) + v1) + v3)*4) < (((min((((v2*2) + v1)*2), (v4 + v5)) + (v3*2))*2) + -1)))
!((v0 < v1) && ((((v1*2) + v2)*4) < (((min((v1*4), (v3 + v4)) + (v2*2))*2) + -1)))
!((v0 < v1) && ((((v1*4) + v2)*4) < (((min((v1*8), (((v3 - v2)*2) + v4)) + (v2*2))*2) + -1)))
!((v0 < v1) && (((v1 + v2)*4) < (((min((v1*2), (v3 + v4)) + (v2*2))*2) + -1)))
!((v0 < v1) && (((v2 + v1)*4) < (((min((v1*2), (((v3 - v2)*2) + v4)) + (v2*2))*2) + -1)))
(!((v0 < ((v1 + v2) + -1)) && ((v1 + v2) < (v0 + -25))) && ((min((v1 + v2), (((((((v1 + v2) - v0) + v3)/11)*11) + v0) + v4)) + 10) <= (min((((((v1 + v2) - v0) + 20)/11)*11), (((v1 + v2) - v0) + 10)) + v0)))
(!((v0 < ((v1 + v2) + -2)) && ((v1 + v2) < (v0 + -6))) && ((min((v1 + v2), (((((((v1 + v2) - v0) + v3)/4)*4) + v0) + 2)) + 2) <= (min((((((v1 + v2) - v0) + 5)/4)*4), (((v1 + v2) - v0) + 2)) + v0)))
(!((v0 < (v1 + 18)) && (v1 < (v0 + -33))) && ((min(((((v1 - v0) + v2)/2)*2), ((v1 - v0) + 18)) + 2) <= min(((((v1 - v0) + 21)/2)*2), ((v1 - v0) + 20))))
(!((v0 < (v1 + 31)) && (v1 < (v0 + -46))) && (select((v2 < v3), min((v3*v4), v5), (v3*v4)) <= (v3*v4)))
(((((((((v0 + v1)*2) - v2) + 2)/4)*4) + v2) + -3) <= ((v0 + v1)*2))
(((((((((v0 + v1)*2) - v2) + 2)/75)*75) + v2) + -3) <= ((v0 + v1)*2))
(((((((((v0 - v1) + 7)/4)*4) + v1) - v0) + 3)/4) <= (((v1 - v0)/4) + (((v0 - v1) + 11)/4)))
((((((((v0 + v1) - v2) + 1)/17)*17) + v2) + -12) <= (v0 + v1))
((((((((v0 + v1) - v2) + 1)/37)*37) + v2) + -10) <= (v0 + v1))
((((((((v0 + v1) - v2) + 1)/4)*4) + v2) + -2) <= (v0 + v1))
((((((((v0 + v1) - v2) + 26)/4)*4) + v2) + -27) <= (v0 + v1))
((((((((v0 + v1) - v2) + 3)/6)*6) + v2) + -4) <= (v0 + v1))
((((((((v0 + v1) - v2) + 4)/17)*17) + v2) + -17) <= (v0 + v1))
((((((((v0 + v1) - v2) + 4)/67)*67) + v2) + -17) <= (v0 + v1))
((((((((v0 + v1) - v2) + 5)/67)*67) + v2) + -6) <= (v0 + v1))
((((((((v0 + v1) - v2) + 6)/4)*4) + v2) + -7) <= (v0 + v1))
((((((((v0 + v1) - v2) + 6)/69)*69) + v2) + -26) <= (v0 + v1))
((((((((v0 - v1) + -1)/4)*4) + v1) + 4) <= min(((max((((v0 - v1) + -1)/4), 0)*4) + ((min((((v0 - v1) + 3)/4), 1)*4) + v1)), (((((v0 - v1) + 3)/4)*4) + v1))) && (((min((v2 - ((v3*v4) + v5)), v4) + (v3*v4)) + v5) <= min((((v3*v4) + v5) + v4), v2)))
((((((((v0 - v1) + -1)/4)*4) + v1) + 4) <= min(((max((((v0 - v1) + -1)/4), 0)*4) + ((min((((v0 - v1) + 3)/4), 1)*4) + v1)), (((((v0 - v1) + 3)/4)*4) + v1))) && (((min((v2 - ((v3*v4) + v5)), v6) + (v3*v4)) + v5) <= min((((v3*v4) + v5) + v6), v2)))
((((((((v0 - v1) + 15)/4)*4) + v1) + 4) <= min(((((((v0 - v1) + 19)/4) - min((((v0 - v1) + v2)/4), v3))*4) + ((min((((v0 - v1) + v2)/4), v3)*4) + v1)), (((((v0 - v1) + 19)/4)*4) + v1))) && (((min((v4 - ((v5*v6) + v7)), -9) + (v5*v6)) + 9) <= min((v5*v6), ((v4 - v7) + 9))))
((((((((v0 - v1) + 22)/4)*4) + v1) + 4) <= min(((((((v0 - v1) + 26)/4) - min((((v0 - v1) + v2)/4), -2))*4) + ((min((((v0 - v1) + v2)/4), -2)*4) + v1)), (((((v0 - v1) + 26)/4)*4) + v1))) && (((min((v3 - ((v4*4) + v5)), -2) + (v4*4)) + 2) <= min((v4*4), ((v3 - v5) + 2))))
((((((((v0 - v1) + 22)/4)*4) + v1) + 4) <= min(((((((v0 - v1) + 26)/4) - min((((v0 - v1) + v2)/4), v3))*4) + ((min((((v0 - v1) + v2)/4), v3)*4) + v1)), (((((v0 - v1) + 26)/4)*4) + v1))) && (((min((v4 - ((v5*4) + v6)), -11) + (v5*4)) + 11) <= min((v5*4), ((v4 - v6) + 11))))
((((((((v0 - v1) + 22)/4)*4) + v1) + 4) <= min(((((((v0 - v1) + 26)/4) - min((((v0 - v1) + v2)/4), v3))*4) + ((min((((v0 - v1) + v2)/4), v3)*4) + v1)), (((((v0 - v1) + 26)/4)*4) + v1))) && (((min((v4 - ((v5*4) + v6)), -4) + (v5*4)) + 4) <= min((v5*4), ((v4 - v6) + 4))))
((((((((v0 - v1) + 22)/4)*4) + v1) + 4) <= min(((((((v0 - v1) + 26)/4) - min((((v0 - v1) + v2)/4), v3))*4) + ((min((((v0 - v1) + v2)/4), v3)*4) + v1)), (((((v0 - v1) + 26)/4)*4) + v1))) && (((min((v4 - ((v5*v6) + v7)), -13) + (v5*v6)) + 13) <= min((v5*v6), ((v4 - v7) + 13))))
((((((((v0 - v1) + 22)/4)*4) + v1) + 4) <= min(((((((v0 - v1) + 26)/4) - min((((v0 - v1) + v2)/4), v3))*4) + ((min((((v0 - v1) + v2)/4), v3)*4) + v1)), (((((v0 - v1) + 26)/4)*4) + v1))) && (((min((v4 - ((v5*v6) + v7)), -4) + (v5*v6)) + 4) <= min((v5*v6), ((v4 - v7) + 4))))
((((((((v0 - v1) + 22)/4)*4) + v1) + 4) <= min(((((((v0 - v1) + 26)/4) - min((((v0 - v1) + v2)/4), v3))*4) + ((min((((v0 - v1) + v2)/4), v3)*4) + v1)), (((((v0 - v1) + 26)/4)*4) + v1))) && (((min((v4 - ((v5*v6) + v7)), -6) + (v5*v6)) + 6) <= min((v5*v6), ((v4 - v7) + 6))))
((((((((v0 - v1) + 22)/4)*4) + v1) + 4) <= min(((((((v0 - v1) + 26)/4) - min((((v0 - v1) + v2)/4), v3))*4) + ((min((((v0 - v1) + v2)/4), v3)*4) + v1)), (((((v0 - v1) + 26)/4)*4) + v1))) && (((min((v4 - ((v5*v6) + v7)), v8) + (v5*v6)) + v7) <= min((((v5*v6) + v7) + v8), v4)))
((((((((v0 - v1) + v2)/4)*4) + v1)*4) + -3) <= ((((((((v0 - v1) + v2)/4)*4) + v1)*2) - (min((v1*2), (((((((v0 - v1) + v2)/4)*4) + v1)*2) + v3)) % 2))*2))
(((((((min(((v0*v1) + v1), v2) + v3) + 35)/4)*4) + 1) <= min(((((min(((v0*v1) + v1), v2) + v3) + 39)/4)*4), (((((min(((v0*v1) + v1), v2) + v3) + -1)/4)*4) + 37))) && (select((v4 < v5), min(((((v6 + v7)*v8) + v5)*v8), v9), ((((v6 + v7)*v8) + v5)*v8)) <= ((((v6 + v7)*v8) + v5)*v8)))
(((((((v0 + 1)/2)*2) + (v1 + v2))*2) + 4) <= (min((((v0 + 3)/2)*4), (((((((v0 + 3)/2)*2) + -1)/63)*126) + 126)) + ((v1 + v2)*2)))
(((((((v0 + 1)/4)*2) + v1)*2) + 4) <= (min((((v0 + 5)/4)*4), ((((v0 + 1)/32)*32) + 32)) + (v1*2)))
(((((((v0 + 14)/4)*2) + v1)*2) + 9) <= min((((((v0 + 26)/4)*2) + v1)*2), ((((((v0 + 18)/4)*2) + v1)*2) + 5)))
(((((((v0 + 6)/4)*2) + v1)*4) + 8) <= min((((((v0 + 10)/4)*2) + v1)*4), ((((max(((v0 + 6)/4), 0)*2) + ((min(((v0 + 10)/4), 1)*2) + v1))*4) + 1)))
(((((((v0 + v1) + -1)/2) - v2)/4) + -1) <= max((((((v0 + v1) + -7)/2) - v2)/4), -1))
(((((((v0 + v1) + -1)/2) - v2)/8) + -1) <= max((((((v0 + v1) + -15)/2) - v2)/8), -1))
(((((((v0 + v1) + -1)/4) - v2) + 2)/4) <= max(((((((v0 + v1) + -13)/4) - v2) + 6)/4), v3))
(((((((v0 + v1) + -1)/4) - v2)/16) + -1) <= max((((((v0 + v1) + -61)/4) - v2)/16), -1))
(((((((v0 + v1) + -1)/4) - v2)/2) + -1) <= max((((((v0 + v1) + -5)/4) - v2)/2), -1))
(((((((v0 + v1) + -1)/4) - v2)/2) + -1) <= max((((((v0 + v1) + -9)/4) - v2)/2), -1))
(((((((v0 + v1) + -1)/4) - v2)/32) + -1) <= max((((((v0 + v1) + -125)/4) - v2)/32), -1))
(((((((v0 + v1) + -1)/4) - v2)/4) + -1) <= max((((((v0 + v1) + -13)/4) - v2)/4), -1))
(((((((v0 + v1) + -1)/4) - v2)/63) + -1) <= max((((((v0 + v1) + -249)/4) - v2)/63), -1))
(((((((v0 + v1) + -1)/8) - v2)/4) + -1) <= max((((((v0 + v1) + -25)/8) - v2)/4), -1))
(((((((v0 + v1) + 35)/4) - v2)/15) + -1) <= max((((((v0 + v1) + -21)/4) - v2)/15), -1))
(((((((v0 + v1) + 35)/4) - v2)/4) + -1) <= max((((((v0 + v1) + 23)/4) - v2)/4), -1))
(((((((v0 + v1) - v2) + -1)/17)*17) + v2) <= (v0 + v1))
(((((((v0 + v1) - v2)/18)*18) + v2) + -8) <= (v0 + v1))
(((((((v0 + v1) - v2)/4)*4) + v2) + -1) <= (v0 + v1))
(((((((v0 + v1) - v2)/9)*9) + v2) + -2) <= (v0 + v1))
(((((((v0 + v1) - v2)/9)*9) + v2) + -4) <= (v0 + v1))
(((((((v0 - v1) + -1)/2)*2) + v1) + -1) <= v0)
(((((((v0 - v1) + -1)/4)*4) + v1) + 4) <= min(((max((((v0 - v1) + -1)/4), 0)*4) + ((min((((v0 - v1) + 3)/4), 1)*4) + v1)), (((((v0 - v1) + 3)/4)*4) + v1)))
(((((((v0 - v1) + -1)/8)*8) + v2)*2) <= (min(((((v0 - v1) + -1)/8)*16), (((v0 - v1)*2) + -1)) + (v2*2)))
(((((((v0 - v1) + 15)/4)*4) + v1) + 4) <= min(((((((v0 - v1) + 19)/4) - min((((v0 - v1) + v2)/4), v3))*4) + ((min((((v0 - v1) + v2)/4), v3)*4) + v1)), (((((v0 - v1) + 19)/4)*4) + v1)))
(((((((v0 - v1) + 22)/4)*4) + v1) + 4) <= min(((((((v0 - v1) + 26)/4) - min((((v0 - v1) + v2)/4), v3))*4) + ((min((((v0 - v1) + v2)/4), v3)*4) + v1)), (((((v0 - v1) + 26)/4)*4) + v1)))
(((((((v0 - v1) + 26)/4)*4) + v1) + -27) <= v0)
(((((((v0 - v1) + 3)/2)*2) + v1) + 2) <= min(((max((((v0 - v1) + 3)/2), 0)*2) + ((min((((v0 - v1) + 5)/2), 1)*2) + v1)), (((((v0 - v1) + 5)/2)*2) + v1)))
(((((((v0 - v1) + 4)/19)*19) + v1) + -5) <= v0)
(((((((v0 - v1) + 7)/2)*2) + v1) + 2) <= min(((((((v0 - v1) + 9)/2) - min((((v0 - v1) + v2)/2), v3))*2) + ((min((((v0 - v1) + v2)/2), v3)*2) + v1)), (((((v0 - v1) + 9)/2)*2) + v1)))
(((((((v0 - v1)/4)*4) + v1)*4) + -3) <= (((((((v0 - v1)/4)*4) + v1)*2) - (min((v1*2), ((((((v0 - v1)/4)*4) + v1)*2) + v2)) % 2))*2))
(((((((v0 - v1)/v2)*v2) + v1)*2) + -34) <= (min((max((((v0 - v1)/v2)*v2), -17)*2), ((((max((((v0 - v1)/v2)*v2), -17) + 18)/70)*140) + 102)) + ((min((((v0 - v1)/v2)*v2), -17) + v1)*2)))
((((((min(((v0 + 17)/4), 1)*4) + v1) + -4) <= v1) && ((min(((((v0 + 13)/4)*4) + v1), (v2 + 10)) + 4) <= min(min(((((v0 + 17)/4)*4) + v1), (v2 + 14)), (((((min((((v0 + 17)/4)*4), ((v2 - v1) + 14)) + -1)/4)*4) + v1) + 4)))) && ((min(min((v3*v4), ((v5 - (v6*v7)) + v8)), 13) + (v6*v7)) <= min((min((v3*v4), 13) + (v6*v7)), (v5 + v8))))
((((((min(((v0 + 7)/4), 1)*4) + v1) + -4) <= v1) && ((min(((((v0 + 3)/4)*4) + v1), v2) + 4) <= min((min(((((min((((v0 + 7)/4)*4), ((v2 - v1) + 4)) + -1)/4)*4) + v1), v2) + 4), ((((v0 + 7)/4)*4) + v1)))) && (select((v3 < v4), min((v5*4), (v6 + v7)), (v5*4)) <= (v5*4)))
((((((min(((v0 + 7)/4), 1)*4) + v1) + -4) <= v1) && ((min(((((v0 + 3)/4)*4) + v1), v2) + 4) <= min((min(((((min((((v0 + 7)/4)*4), ((v2 - v1) + 4)) + -1)/4)*4) + v1), v2) + 4), ((((v0 + 7)/4)*4) + v1)))) && (select((v3 < v4), min((v5*v6), (v7 + v8)), (v5*v6)) <= (v5*v6)))
((((((min(((v0 + v1)/4), 1)*2) + ((v2*v3) + v4)) + -2) <= ((v2*v3) + v4)) && ((min((((v0 + v1)/4)*4), ((((v0 + v5)/v6)*v6) + v6)) + (((v2*v3) + v4)*2)) <= (((((v0 + v1)/4)*2) + ((v2*v3) + v4))*2))) && (select((v7 < v8), min(((v9*v10) + (v8*2)), (v11 + v12)), ((v9*v10) + (v8*2))) <= ((v9*v10) + (v8*2))))
((((((v0 + -1)/16)*16) + v1)*2) <= (min((((v0 + -1)/16)*32), ((v0*2) + -1)) + (v1*2)))
((((((v0 + -1)/2) - v1)/4) + -1) <= max(((((v0 + -7)/2) - v1)/4), -1))
((((((v0 + -1)/2) - v1)/8) + -1) <= max(((((v0 + -15)/2) - v1)/8), -1))
((((((v0 + -1)/2)*2) + v1)*2) <= (min((((v0 + -1)/2)*4), ((v0*2) + -1)) + (v1*2)))
((((((v0 + -1)/4) - v1)/4) + -1) <= max(((((v0 + -13)/4) - v1)/4), -1))
((((((v0 + -1)/4)*4) + 4) <= min((((v0 + 3)/4)*4), ((((v0 + -1)/32)*32) + 32))) && (select((0 < v1), min(((v2*v3) + ((v1*v4) + (v5*v6))), (v7 + 3)), ((v2*v3) + ((v1*v4) + (v5*v6)))) <= ((v2*v3) + ((v1*v4) + (v5*v6)))))
((((((v0 + -1)/4)*4) + 4) <= min((((v0 + 3)/4)*4), ((((v0 + -1)/32)*32) + 32))) && (select((0 < v1), min((v1*v2), ((v3 - v4) + 16)), (v1*v2)) <= (v1*v2)))
((((((v0 + -1)/4)*4) + 4) <= min((((v0 + 3)/4)*4), ((((v0 + 15)/20)*20) + 6))) && (select((0 < v1), min(((v2*v3) + (v1*v4)), ((v5 - v6) + v4)), ((v2*v3) + (v1*v4))) <= ((v2*v3) + (v1*v4))))
((((((v0 + -1)/4)*4) + 6) <= min((((v0 + 15)/12)*12), ((((v0 + 3)/4)*4) + 2))) && (select((v1 < v2), min(((v3 - v4) + 10), ((v5*v6) + (v2*15))), ((v5*v6) + (v2*15))) <= ((v5*v6) + (v2*15))))
((((((v0 + -1)/4)*4) + v1)*2) <= (min((((v0 + -1)/4)*8), ((v0*2) + -1)) + (v1*2)))
((((((v0 + 1)/2) - v1)/16) + -1) <= max(((((v0 + -29)/2) - v1)/16), -1))
((((((v0 + 1)/2) - v1)/2) + -1) <= max(((((v0 + -1)/2) - v1)/2), -1))
((((((v0 + 1)/2) - v1)/32) + -1) <= max(((((v0 + -61)/2) - v1)/32), -1))
((((((v0 + 1)/2) - v1)/63) + -1) <= max(((((v0 + -123)/2) - v1)/63), -1))
((((((v0 + 1)/2) - v1)/63) + -1) <= max(((((v0 + -125)/2) - v1)/63), -1))
((((((v0 + v1)/v2)*v2) + v3) + v2) <= max((max(((((v0 + v1)/v2)*v2) + v2), v4) + v3), v5))
((((((v0 - v1)/4)*4) + -28) <= (((v0 - v1)/32)*32)) && (select((v2 < v3), min((((v4*4) + v3)*v5), ((v6 - v7) + v8)), (((v4*4) + v3)*v5)) <= (((v4*4) + v3)*v5)))
((((((v0 - v1)/4)*4) + -28) <= (((v0 - v1)/32)*32)) && (select((v2 < v3), min((((v4*v5) + v3)*v6), ((v7 - v8) + v9)), (((v4*v5) + v3)*v6)) <= (((v4*v5) + v3)*v6)))
((((((v0 - v1)/4)*4) + -4) <= (min((((v0 - v1)/4)*4), -1) + ((max((((v0 - v1)/4)*4), -1)/4)*4))) && (((min((v2 - ((v3*v4) + v5)), 0) + (v3*v4)) + v5) <= min(((v3*v4) + v5), v2)))
((((((v0 - v1)/4)*4) + 1)/14) <= max(((((v0 - v1)/4)*4)/14), v2))
((((((v0/4)*2) + v1)*2) + -3) <= ((((v1/2) - (v2*v3)) + ((v0/4) + (v2*v3)))*4))
((((((v0/4)*2) + v1)*2) + 15) <= (((((v1 + 9)/2) - (v2*v3)) + ((v0/4) + (v2*v3)))*4))
(((((-2 - v0)/2) + v1) + -2) <= max((((-5 - v0)/2) + v1), v2))
(((((-24 - v0)/2) + v1) + -2) <= max((((-27 - v0)/2) + v1), v2))
(((((0 - v0)/2) + v1) + -1) <= max((((-1 - v0)/2) + v1), -1))
(((((0 - v0)/2) + v1) + -2) <= max((((-3 - v0)/2) + v1), v2))
(((((0 - v0)/4) + v1) + -1) <= max((((-3 - v0)/4) + v1), -1))
(((((0 - v0)/4) + v1) + -2) <= max((((-7 - v0)/4) + v1), v2))
(((((0 - v0)/4) + v1) + 24) <= max((((97 - v0)/4) + v1), 0))
(((((104 - v0)/4) + v1) + -3) <= max((((93 - v0)/4) + v1), v2))
(((((13 - v0)/2) + v1) + 7) <= max((((28 - v0)/2) + v1), v2))
(((((16 - v0)/4) + v1) + -2) <= max((((9 - v0)/4) + v1), v2))
(((((20 - v0)/2) + v1) + -2) <= max((((17 - v0)/2) + v1), v2))
(((((32 - v0)/4) + v1) + -1) <= max((((29 - v0)/4) + v1), v2))
(((((32 - v0)/4) + v1) + 7) <= max((((61 - v0)/4) + v1), v2))
(((((34 - v0)/4) + v1) + -1) <= max((((31 - v0)/4) + v1), v2))
(((((36 - v0)/4) + v1) + -2) <= max((((29 - v0)/4) + v1), v2))
(((((52 - v0)/4) + v1) + -2) <= max((((45 - v0)/4) + v1), v2))
(((((56 - v0)/4) + v1) + -2) <= max((((49 - v0)/4) + v1), v2))
(((((60 - v0)/4) + v1) + -2) <= max((((53 - v0)/4) + v1), v2))
(((((68 - v0)/4) + v1) + -2) <= max((((61 - v0)/4) + v1), v2))
(((((7 - v0)/4) + v1) + -2) <= max((((0 - v0)/4) + v1), v2))
(((((max((((v0 - v1) + -1)/4), 0)*4) + ((min((((v0 - v1) + 3)/4), 1)*4) + v1)) + -4) <= (((((v0 - v1) + -1)/4)*4) + v1)) && (select((0 < v2), min(((v2*v3) + v4), v5), ((v2*v3) + v4)) <= ((v2*v3) + v4)))
(((((min(((((v0 - v1) + 6)/4)*4), -13) + v1) + 13) <= v1) && ((((((v0 - v1) + 2)/4)*4) + 17) <= min(((((v0 - v1) + 22)/4)*4), (((((v0 - v1) + 6)/4)*4) + 13)))) && (select((v2 < v3), min((((v4*2) + v3)*v5), v6), (((v4*2) + v3)*v5)) <= (((v4*2) + v3)*v5)))
(((((min((((v0 + -1)/4)*4), (v0 + -4)) + v1) + 4) <= min(((((max(v0, 4) + -1)/4)*4) + (min(v0, 4) + v1)), (v0 + v1))) && (select((v2 < v3), min(((v3 + v4)*v5), ((v6 - v7) + v8)), ((v3 + v4)*v5)) <= ((v3 + v4)*v5))) && (((min((v6 - (((v3 + v4)*v5) + v7)), -10) + ((v3 + v4)*v5)) + 10) <= min(((v3 + v4)*v5), ((v6 - v7) + 10))))
(((((min((((v0 + 3)/4)*4), -13) + ((v1*v2) + v3)) + 13) <= ((v1*v2) + v3)) && ((min((((v0 + 3)/4)*4), ((((v0 + 19)/v4)*v4) + v5)) + 13) <= min((((v0 + 19)/4)*4), ((((v0 + 3)/4)*4) + 13)))) && (select((v6 < v7), min(((v8*v9) + ((((v10*v11) + v7)*v12) + (v13*v14))), v15), ((v8*v9) + ((((v10*v11) + v7)*v12) + (v13*v14)))) <= ((v8*v9) + ((((v10*v11) + v7)*v12) + (v13*v14)))))
(((((min((((v0 + 3)/4)*4), -9) + (v1 + v2)) + 9) <= (v1 + v2)) && (((((v0 + -1)/4)*4) + 13) <= min((((v0 + 15)/4)*4), ((((v0 + 3)/4)*4) + 9)))) && (select((v3 < v4), min(((v4*v5) + v6), v7), ((v4*v5) + v6)) <= ((v4*v5) + v6)))
(((((min((((v0 - v1) + 1)/2), 1)*2) + v1) + -2) <= v1) && (select((v2 < v3), min(((v3*v4) + v5), (v6 + v7)), ((v3*v4) + v5)) <= ((v3*v4) + v5)))
(((((min((((v0 - v1) + 3)/4), -1)*4) + v1) + 4) <= v1) && ((min(((((v0 - v1) + 3)/4)*4), (((((v0 - v1) + 7)/v2)*v2) + v3)) + 4) <= ((((v0 - v1) + 7)/4)*4)))
(((((min((((v0 - v1) + v2)/4), 1)*4) + v1) + -4) <= v1) && (select((v3 < v4), (min((v4*v5), ((v6*v5) + 1)) + (((v7*v8) + v9)*v5)), ((((v7*v8) + v9) + v4)*v5)) <= ((((v7*v8) + v9) + v4)*v5)))
(((((min((((v0 - v1) + v2)/4), 1)*4) + v1) + -4) <= v1) && (select((v3 < v4), min((((v5*v6) + v4)*v7), ((v8 - v9) + 1)), (((v5*v6) + v4)*v7)) <= (((v5*v6) + v4)*v7)))
(((((min((((v0 - v1) + v2)/4), 1)*4) + v1) + -4) <= v1) && (select((v3 < v4), min(((v4*v5) + v6), (v7 + v8)), ((v4*v5) + v6)) <= ((v4*v5) + v6)))
(((((min((((v0 - v1) + v2)/4), 1)*4) + v1) + -4) <= v1) && (select((v3 < v4), min(((v4*v5) + v6), v7), ((v4*v5) + v6)) <= ((v4*v5) + v6)))
(((((min(((v0 + 10)/4), 1)*4) + v1) + -4) <= v1) && ((min(((((v0 + 6)/4)*4) + v1), (v2 + 3)) + 4) <= min(min(((((v0 + 10)/4)*4) + v1), (v2 + 7)), (((((min((((v0 + 10)/4)*4), ((v2 - v1) + 7)) + -1)/4)*4) + v1) + 4))))
(((((min(((v0 + 11)/4), 1)*4) + v1) + -4) <= v1) && ((min(((((v0 + 7)/4)*4) + v1), (v2 + 4)) + 4) <= min(min(((((v0 + 11)/4)*4) + v1), (v2 + 8)), (((((min((((v0 + 11)/4)*4), ((v2 - v1) + 8)) + -1)/4)*4) + v1) + 4))))
(((((min(((v0 + 13)/4), 1)*4) + v1) + -4) <= v1) && ((min(((((v0 + 9)/4)*4) + v1), (v2 + 6)) + 4) <= min(min(((((v0 + 13)/4)*4) + v1), (v2 + 10)), (((((min((((v0 + 13)/4)*4), ((v2 - v1) + 10)) + -1)/4)*4) + v1) + 4))))
(((((min(((v0 + 14)/4), 1)*4) + v1) + -4) <= v1) && ((min(((((v0 + 10)/4)*4) + v1), (v2 + 7)) + 4) <= min(min(((((v0 + 14)/4)*4) + v1), (v2 + 11)), (((((min((((v0 + 14)/4)*4), ((v2 - v1) + 11)) + -1)/4)*4) + v1) + 4))))
(((((min(((v0 + 15)/4), 1)*4) + v1) + -4) <= v1) && ((min(((((v0 + 11)/4)*4) + v1), (v2 + 8)) + 4) <= min(min(((((v0 + 15)/4)*4) + v1), (v2 + 12)), (((((min((((v0 + 15)/4)*4), ((v2 - v1) + 12)) + -1)/4)*4) + v1) + 4))))
(((((min(((v0 + 17)/4), 1)*4) + v1) + -4) <= v1) && ((min(((((v0 + 13)/4)*4) + v1), (v2 + 10)) + 4) <= min(min(((((v0 + 17)/4)*4) + v1), (v2 + 14)), (((((min((((v0 + 17)/4)*4), ((v2 - v1) + 14)) + -1)/4)*4) + v1) + 4))))
(((((min(((v0 + 18)/4), 1)*4) + v1) + -4) <= v1) && ((min(((((v0 + 14)/4)*4) + v1), (v2 + 11)) + 4) <= min(min(((((v0 + 18)/4)*4) + v1), (v2 + 15)), (((((min((((v0 + 18)/4)*4), ((v2 - v1) + 15)) + -1)/4)*4) + v1) + 4))))
(((((min(((v0 + 19)/4), 1)*4) + v1) + -4) <= v1) && ((min(((((v0 + 15)/4)*4) + v1), (v2 + 12)) + 4) <= min(min(((((v0 + 19)/4)*4) + v1), (v2 + 16)), (((((min((((v0 + 19)/4)*4), ((v2 - v1) + 16)) + -1)/4)*4) + v1) + 4))))
(((((min(((v0 + 23)/4), 1)*4) + v1) + -4) <= v1) && ((min(((((v0 + 19)/4)*4) + v1), (v2 + 16)) + 4) <= min(min(((((v0 + 23)/4)*4) + v1), (v2 + 20)), (((((min((((v0 + 23)/4)*4), ((v2 - v1) + 20)) + -1)/4)*4) + v1) + 4))))
(((((min(((v0 + 26)/4), 1)*4) + v1) + -4) <= v1) && ((min(((((v0 + 22)/4)*4) + v1), (v2 + 19)) + 4) <= min(min(((((v0 + 26)/4)*4) + v1), (v2 + 23)), (((((min((((v0 + 26)/4)*4), ((v2 - v1) + 23)) + -1)/4)*4) + v1) + 4))))
(((((min(((v0 + 27)/4), 1)*4) + v1) + -4) <= v1) && ((min(((((v0 + 23)/4)*4) + v1), (v2 + 20)) + 4) <= min(min(((((v0 + 27)/4)*4) + v1), (v2 + 24)), (((((min((((v0 + 27)/4)*4), ((v2 - v1) + 24)) + -1)/4)*4) + v1) + 4))))
(((((min(((v0 + 3)/4), 1)*4) + ((v1*125) + v2)) + -4) <= ((v1*125) + v2)) && ((min((((v0 + 3)/4)*4), ((((v0 + -1)/v3)*v3) + v3)) + -4) <= (((v0 + -1)/4)*4)))
(((((min(((v0 + 3)/4), 1)*4) + ((v1*v2) + v3)) + -4) <= ((v1*v2) + v3)) && ((min(((v0 + 3)/4), (((v0 + v4)/v5)*v6)) + -1) <= ((v0 + -1)/4)))
(((((min(((v0 + 7)/4), 1)*4) + v1) + -4) <= v1) && ((min(((((v0 + 3)/4)*4) + v1), v2) + 4) <= min((min(((((min((((v0 + 7)/4)*4), ((v2 - v1) + 4)) + -1)/4)*4) + v1), v2) + 4), ((((v0 + 7)/4)*4) + v1))))
(((((min(((v0 + v1)/4), 1)*4) + ((v2*4) + v3)) + -4) <= ((v2*4) + v3)) && (select((v4 < v5), min((v5*v6), ((v7 - v8) + v1)), (v5*v6)) <= (v5*v6)))
(((((min(((v0 + v1)/4), 1)*4) + ((v2*v3) + v4)) + -4) <= ((v2*v3) + v4)) && ((min(((v0 + v1)/4), 1) + ((v0 + -5)/4)) <= ((v0 + -1)/4)))
(((((min(((v0 + v1)/4), 1)*4) + ((v2*v3) + v4)) + -4) <= ((v2*v3) + v4)) && (select((v5 < v6), min(((((v7*4) + v6)*v8) + v9), (v10 + v11)), ((((v7*4) + v6)*v8) + v9)) <= ((((v7*4) + v6)*v8) + v9)))
(((((min(((v0 + v1)/4), 1)*4) + ((v2*v3) + v4)) + -4) <= ((v2*v3) + v4)) && (select((v5 < v6), min(((((v7*v8) + v6)*v8) + v9), (v10 + v11)), ((((v7*v8) + v6)*v8) + v9)) <= ((((v7*v8) + v6)*v8) + v9)))
(((((min(((v0 + v1)/4), 1)*4) + ((v2*v3) + v4)) + -4) <= ((v2*v3) + v4)) && (select((v5 < v6), min((((v7*v8) + v6)*4), ((v9 - v10) + v11)), (((v7*v8) + v6)*4)) <= (((v7*v8) + v6)*4)))
(((((min(((v0 + v1)/4), 1)*4) + ((v2*v3) + v4)) + -4) <= ((v2*v3) + v4)) && (select((v5 < v6), min(((v6*4) + v7), v8), ((v6*4) + v7)) <= ((v6*4) + v7)))
(((((min(((v0 + v1)/4), 1)*4) + ((v2*v3) + v4)) + -4) <= ((v2*v3) + v4)) && (select((v5 < v6), min(((v6*v7) + v8), v9), ((v6*v7) + v8)) <= ((v6*v7) + v8)))
(((((min(((v0 + v1)/4), 1)*4) + ((v2*v3) + v4)) + -4) <= ((v2*v3) + v4)) && (select((v5 < v6), min(((v7*v8) + (v6*v9)), v10), ((v7*v8) + (v6*v9))) <= ((v7*v8) + (v6*v9))))
(((((min(((v0 + v1)/4), 1)*4) + ((v2*v3) + v4)) + -4) <= ((v2*v3) + v4)) && (select((v5 < v6), min((v6*v7), (((v8*v7) - v9) + 1)), (v6*v7)) <= (v6*v7)))
(((((min(((v0 + v1)/4), 1)*4) + ((v2*v3) + v4)) + -4) <= ((v2*v3) + v4)) && (select((v5 < v6), min((v6*v7), ((v8 - v9) + v10)), (v6*v7)) <= (v6*v7)))
(((((min(((v0 + v1)/4), 1)*4) + (v2 + v3)) + -4) <= (v2 + v3)) && (select((v4 < v5), min((((v6*v7) + v5)*v8), ((v9 - v10) + v1)), (((v6*v7) + v5)*v8)) <= (((v6*v7) + v5)*v8)))
(((((min(((v0 + v1)/4), 1)*4) + (v2 + v3)) + -4) <= (v2 + v3)) && (select((v4 < v5), min((v5*v6), ((v7 - v8) + 1)), (v5*v6)) <= (v5*v6)))
(((((min(((v0 + v1)/4), 1)*4) + v2) + -4) <= v2) && (select((v3 < v4), (min((v4*8), (((v5 - v6)*2) + v7)) + (v6*2)), (((v4*4) + v6)*2)) <= (((v4*4) + v6)*2)))
(((((min((v0 - ((v1*4) + v2)), 4) + (v1*4)) + (v2 + v3)) + -4) <= min(((((min(((v0 - v2) - (v1*4)), 4) + -1)/4)*4) + ((v1*4) + (v2 + v3))), ((min((v0 - v2), ((v1*4) + 4)) + (v2 + v3)) + -4))) && (((((min((v4 - (v5*4)), 4) + v6) + -1)/2) + (v5*2)) <= (((min(((v5*4) + 4), v4) + v6) + -1)/2)))
(((((min((v0 - ((v1*4) + v2)), 4) + (v1*4)) + (v2 + v3)) + -4) <= min(((((min(((v0 - v2) - (v1*4)), 4) + -1)/4)*4) + ((v1*4) + (v2 + v3))), ((min((v0 - v2), ((v1*4) + 4)) + (v2 + v3)) + -4))) && (((min((v4 - ((v5*4) + v6)), -1) + (v5*4)) + 1) <= min((v5*4), ((v4 - v6) + 1))))
(((((min((v0 - ((v1*4) + v2)), 4) + (v1*4)) + (v2 + v3)) + -4) <= min(((((min(((v0 - v2) - (v1*4)), 4) + -1)/4)*4) + ((v1*4) + (v2 + v3))), ((min((v0 - v2), ((v1*4) + 4)) + (v2 + v3)) + -4))) && (select((v4 < v5), min(((v6*v7) + (v5*v8)), v9), ((v6*v7) + (v5*v8))) <= ((v6*v7) + (v5*v8))))
(((((min((v0 - (v1*16)), 16) + v2) + v3)/4) + (v1*4)) <= (((min(((v1*16) + 16), v0) + v2) + v3)/4))
(((((min((v0*v1), (min(((v0*v1) + v1), v2) + -13)) + v3)/4) <= ((min((v0*v1), (min(((v0*v1) + v1), v2) + -4)) + v3)/4)) && (((min(((((min((v2 - (v0*v1)), v1) + -1)/4)*4) + ((v0*v1) + v3)), ((min(((v0*v1) + v1), v2) + v3) + -4)) + -9)/4) <= min((((min(((v0*v1) + v1), v2) + v3) + -13)/4), ((((v0*v1) + v3)/4) + ((((((min(((v0*v1) + v1), v2) + v3) + -1)/4) - (((v0*v1) + v3)/4))/4)*4))))) && (select((v4 < v5), min(((v6*v1) + (((v7*4) + v5)*4)), v8), ((v6*v1) + (((v7*4) + v5)*4))) <= ((v6*v1) + (((v7*4) + v5)*4))))
(((((min((v0*v1), (min(((v0*v1) + v1), v2) + -13)) + v3)/4) <= ((min((v0*v1), (min(((v0*v1) + v1), v2) + -4)) + v3)/4)) && (((min(((((min((v2 - (v0*v1)), v1) + -1)/4)*4) + ((v0*v1) + v3)), ((min(((v0*v1) + v1), v2) + v3) + -4)) + -9)/4) <= min((((min(((v0*v1) + v1), v2) + v3) + -13)/4), ((((v0*v1) + v3)/4) + ((((((min(((v0*v1) + v1), v2) + v3) + -1)/4) - (((v0*v1) + v3)/4))/4)*4))))) && (select((v4 < v5), min(((v6*v1) + ((v7*v8) + (v5*v9))), v10), ((v6*v1) + ((v7*v8) + (v5*v9)))) <= ((v6*v1) + ((v7*v8) + (v5*v9)))))
(((((min((v0*v1), (min(((v0*v1) + v1), v2) + -13)) + v3)/4) <= ((min((v0*v1), (min(((v0*v1) + v1), v2) + -4)) + v3)/4)) && (((min(((((min((v2 - (v0*v1)), v1) + -1)/4)*4) + ((v0*v1) + v3)), ((min(((v0*v1) + v1), v2) + v3) + -4)) + -9)/4) <= min((((min(((v0*v1) + v1), v2) + v3) + -13)/4), ((((v0*v1) + v3)/4) + ((((((min(((v0*v1) + v1), v2) + v3) + -1)/4) - (((v0*v1) + v3)/4))/4)*4))))) && (select((v4 < v5), min(((v6*v1) + (v5*v7)), v8), ((v6*v1) + (v5*v7))) <= ((v6*v1) + (v5*v7))))
(((((min((v0*v1), (min(((v0*v1) + v1), v2) + -25)) + v3)/8) <= ((min((v0*v1), (min(((v0*v1) + v1), v2) + -4)) + v3)/8)) && (((min(((((min((v2 - (v0*v1)), v1) + -1)/4)*4) + ((v0*v1) + v3)), ((min(((v0*v1) + v1), v2) + v3) + -4)) + -21)/8) <= min((((min(((v0*v1) + v1), v2) + v3) + -25)/8), ((((v0*v1) + v3)/8) + ((((((min(((v0*v1) + v1), v2) + v3) + -1)/8) - (((v0*v1) + v3)/8))/4)*4))))) && ((min(min(((v4*v5) + ((v6*4) + v7)), ((v8 - (v9*v10)) + -1)), v11) + (v9*v10)) <= min(((v9*v10) + ((v4*v5) + ((v6*4) + v7))), (v8 + -1))))
(((((min((v0*v1), (min(((v0*v1) + v1), v2) + -25)) + v3)/8) <= ((min((v0*v1), (min(((v0*v1) + v1), v2) + -4)) + v3)/8)) && (((min(((((min((v2 - (v0*v1)), v1) + -1)/4)*4) + ((v0*v1) + v3)), ((min(((v0*v1) + v1), v2) + v3) + -4)) + -21)/8) <= min((((min(((v0*v1) + v1), v2) + v3) + -25)/8), ((((v0*v1) + v3)/8) + ((((((min(((v0*v1) + v1), v2) + v3) + -1)/8) - (((v0*v1) + v3)/8))/4)*4))))) && (select((v4 < v5), min(((v6*v1) + (v5*v7)), v8), ((v6*v1) + (v5*v7))) <= ((v6*v1) + (v5*v7))))
(((((min((v0*v1), (v2 + -13)) + v3)/4) <= ((min((v0*v1), (v2 + -4)) + v3)/4)) && (((min(((((min((v4 - (v0*v1)), v1) + -1)/4)*4) + v5), (v6 + -4)) + -9)/4) <= min(((v6 + -13)/4), ((v5/4) + (((((v6 + -1)/4) - (v5/4))/4)*4))))) && (select((v7 < v8), min((v8*v9), v10), (v8*v9)) <= (v8*v9)))
(((((min((v0*v1), (v2 + -13)) + v3)/4) <= ((min((v0*v1), (v2 + -4)) + v3)/4)) && (((min(((((min((v4 - (v0*v1)), v1) + -1)/4)*4) + v5), (v6 + -4)) + -9)/4) <= min(((v6 + -13)/4), ((v5/4) + (((((v6 + -1)/4) - (v5/4))/4)*4))))) && (select((v7 < v8), min((v9*4), v10), (v9*4)) <= (v9*4)))
(((((min((v0*v1), (v2 + -13)) + v3)/4) <= ((min((v0*v1), (v2 + -4)) + v3)/4)) && (((min(((((min((v4 - (v0*v1)), v1) + -1)/4)*4) + v5), (v6 + -4)) + -9)/4) <= min(((v6 + -13)/4), ((v5/4) + (((((v6 + -1)/4) - (v5/4))/4)*4))))) && (select((v7 < v8), min(v9, v10), v10) <= v10))
(((((min((v0/4), -3)*4) + ((v1*v2) + v3)) + 12) <= ((v1*v2) + v3)) && (select((v4 < v5), min((v5*v6), v7), (v5*v6)) <= (v5*v6)))
(((((min((v0/4), -3)*4) + ((v1*v2) + v3)) + 12) <= ((v1*v2) + v3)) && (select((v4 < v5), min((v6 + v7), (((v8*v9) + (v5*v10)) + v11)), (((v8*v9) + (v5*v10)) + v11)) <= (((v8*v9) + (v5*v10)) + v11)))
(((((min(min((((((v0 + v1)/4)*4) + ((v2*v3) + v4)) + v5), (v4 + v6)), ((min(((v2*v3) + 2), v6) + v4) + 3))/2) + -3) <= ((min(min(min((((((v0 + v1)/4)*4) + ((v2*v3) + v4)) + v5), (v4 + v6)), ((min(((v2*v3) + 2), v6) + v4) + 60)), (min(((v2*v3) + 2), v6) + v4)) + -3)/2)) && ((min(min((((((v0 + v1)/4)*4) + ((v2*v3) + v4)) + v5), (v4 + v6)), (((((min((((((v0 + v1)/4)*4) + ((v2*v3) + v4)) + v5), (v4 + v6)) - (min(((v2*v3) + 2), v6) + v4)) + 3)/4)*4) + (((((min((((((v0 + v1)/4)*4) + ((v2*v3) + v4)) + v5), (v4 + v6)) - (min(((v2*v3) + 2), v6) + v4)) + 3)/v7)*v7) + (min(((v2*v3) + 2), v6) + v4))))/2) <= min((min((((((v0 + v1)/4)*4) + ((v2*v3) + v4)) + v5), (v4 + v6))/2), ((((min(((v2*v3) + 2), v6) + v4) + 3)/2) + ((((min((((((v0 + v1)/4)*4) + ((v2*v3) + v4)) + v5), (v4 + v6))/2) - (((min(((v2*v3) + 2), v6) + v4) + -3)/2))/4)*4))))) && (select((v8 < v9), min(((((v10*4) + v9)*2) + v11), (v12 + v13)), ((((v10*4) + v9)*2) + v11)) <= ((((v10*4) + v9)*2) + v11)))
(((((min(min((((((v0 + v1)/4)*4) + ((v2*v3) + v4)) + v5), (v4 + v6)), ((min(((v2*v3) + 2), v6) + v4) + 3))/2) + -3) <= ((min(min(min((((((v0 + v1)/4)*4) + ((v2*v3) + v4)) + v5), (v4 + v6)), ((min(((v2*v3) + 2), v6) + v4) + 60)), (min(((v2*v3) + 2), v6) + v4)) + -3)/2)) && ((min(min((((((v0 + v1)/4)*4) + ((v2*v3) + v4)) + v5), (v4 + v6)), (((((min((((((v0 + v1)/4)*4) + ((v2*v3) + v4)) + v5), (v4 + v6)) - (min(((v2*v3) + 2), v6) + v4)) + 3)/4)*4) + (((((min((((((v0 + v1)/4)*4) + ((v2*v3) + v4)) + v5), (v4 + v6)) - (min(((v2*v3) + 2), v6) + v4)) + 3)/v7)*v7) + (min(((v2*v3) + 2), v6) + v4))))/2) <= min((min((((((v0 + v1)/4)*4) + ((v2*v3) + v4)) + v5), (v4 + v6))/2), ((((min(((v2*v3) + 2), v6) + v4) + 3)/2) + ((((min((((((v0 + v1)/4)*4) + ((v2*v3) + v4)) + v5), (v4 + v6))/2) - (((min(((v2*v3) + 2), v6) + v4) + -3)/2))/4)*4))))) && (select((v8 < v9), min(((v9*2) + v10), (v11 + v12)), ((v9*2) + v10)) <= ((v9*2) + v10)))
(((((min(v0, -3)*4) + ((v1*v2) + v3)) + 12) <= ((v1*v2) + v3)) && (select((v4 < v5), min((v5*4), ((v6 - v7) + v8)), (v5*4)) <= (v5*4)))
(((((min(v0, 1)*4) + ((v1*v2) + v3)) + -4) <= ((v1*v2) + v3)) && (select((v4 < v5), min(((v6*v7) + ((v5*v2) + (v8*v9))), (v10 + v11)), ((v6*v7) + ((v5*v2) + (v8*v9)))) <= ((v6*v7) + ((v5*v2) + (v8*v9)))))
(((((min(v0, 13) + v1) + -9)/4) <= ((min(v0, 4) + v1)/4)) && ((((min((((v0 + -1)/4)*4), (v0 + -4)) + v1) + -9)/4) <= min((((v0 + v1) + -13)/4), ((v1/4) + ((((((v0 + v1) + -1)/4) - (v1/4))/4)*4)))))
(((((min(v0, 25) + v1) + -25)/8) <= (((min(v0, 4) + v1) + -4)/8)) && ((((min((((v0 + -1)/4)*4), (v0 + -4)) + v1) + -21)/8) <= min((((v0 + v1) + -25)/8), ((v1/8) + ((((((v0 + v1) + -1)/8) - (v1/8))/4)*4)))))
(((((min(v0, 63) + 7)/36)*36) + -17) <= min(v0, 28))
(((((min(v0, 63) + 9)/37)*37) + -20) <= min(v0, 27))
(((((v0 - v1) + 11)/4) <= (max((((v0 - v1) + 7)/4), 0) + min((((v0 - v1) + 11)/4), 1))) && (((min((v2 - ((v3*v4) + v5)), 1) + (v3*v4)) + v5) <= min((((v3*v4) + v5) + 1), v2)))
(((((v0 - v1) + 11)/4) <= (max((((v0 - v1) + 7)/4), 0) + min((((v0 - v1) + 11)/4), 1))) && (((min((v2 - ((v3*v4) + v5)), v6) + (v3*v4)) + v5) <= min((((v3*v4) + v5) + v6), v2)))
(((((v0 - v1) + 5)/2) <= (max((((v0 - v1) + 3)/2), 0) + min((((v0 - v1) + 5)/2), 1))) && (((min((v2 - ((v3*2) + v4)), 2) + (v3*2)) + v4) <= min((((v3*2) + v4) + 2), v2)))
(((((v0 - v1)/2) + ((v0 + v1) % 2)) + -1) <= ((v0 - v1)/2))
(((((v0 - v1)/4)*4) <= (min((((v0 - v1)/4)*4), -19) + (((max((((v0 - v1)/4)*4), -19) + 22)/4)*4))) && (((min(((v2 + v3) - ((v4*4) + v5)), v6) + (v4*4)) + v5) <= min((v2 + v3), (((v4*4) + v5) + v6))))
(((((v0 - v1)/4)*4) <= (min((((v0 - v1)/4)*4), -19) + (((max((((v0 - v1)/4)*4), -19) + 22)/4)*4))) && (((min(((v2 + v3) - ((v4*v5) + v6)), v7) + (v4*v5)) + v6) <= min((v2 + v3), (((v4*v5) + v6) + v7))))
(((((v0 - v1)/4)*4) <= (min((((v0 - v1)/4)*4), -2) + (((max((((v0 - v1)/4)*4), -2) + 5)/4)*4))) && (((min((v2 - ((v3*v4) + v5)), -5) + (v3*v4)) + 5) <= min((v3*v4), ((v2 - v5) + 5))))
(((((v0*2) + v1)*2) + -3) <= ((((v1/2) - (v2*2)) + ((v2*2) + v0))*4))
(((((v0*2) + v1)*2) + 11) <= (((((v1 + 7)/2) - (v2*v3)) + ((v2*v3) + v0))*4))
(((((v0/2)*2) + ((v1*v2) + v3))*2) <= (min(((v0/2)*4), ((((((v0/2)*2) + 1)/63)*126) + 122)) + (((v1*v2) + v3)*2)))
(((((v0/2)*2) + ((v1*v2) + v3))*2) <= (min(((v0/2)*4), ((((v0 + 10)/68)*136) + 112)) + (((v1*v2) + v3)*2)))
(((((v0/2)*2) + ((v1*v2) + v3))*2) <= (min(((v0/2)*4), ((((v0 + 2)/64)*128) + 121)) + (((v1*v2) + v3)*2)))
((((0 - v0)/2) + 1) <= ((3 - v0)/2))
((((124 - ((v0 - v1) % 63))/63) + (((v0 - v1) + -62)/63)) <= (((v0 - v1) + 1)/63))
((((14 - ((v0 - v1) % 8))/8) + (((v0 - v1) + -7)/8)) <= (((v0 - v1) + 1)/8))
((((14 - (v0 % 8))/8) + ((v0 + 25)/8)) <= ((v0 + 33)/8))
((((1992 - ((v0*v1) % 997))/997) + (((v0*v1) + -996)/997)) <= (((v0*v1) + 1)/997))
((((2000 - (v0 % 1001))/1001) + ((v0 + -1000)/1001)) <= ((v0 + 1)/1001))
((((248 - (v0 % 125))/125) + ((v0 + -124)/125)) <= ((v0 + 1)/125))
((((250 - ((v0 - v1) % 126))/126) + (((v0 - v1) + -125)/126)) <= (((v0 - v1) + 1)/126))
((((32 - ((v0 - v1) % 17))/17) + (((v0 - v1) + -16)/17)) <= (((v0 - v1) + 1)/17))
((((498 - ((v0 - v1) % 250))/250) + (((v0 - v1) + -249)/250)) <= (((v0 - v1) + 1)/250))
((((498 - (v0 % 250))/250) + ((v0 + -249)/250)) <= ((v0 + 1)/250))
((((500 - ((v0 - v1) % 251))/251) + (((v0 - v1) + -250)/251)) <= (((v0 - v1) + 1)/251))
((((500 - (v0 % 251))/251) + ((v0 + -250)/251)) <= ((v0 + 1)/251))
((((996 - ((v0 - v1) % 499))/499) + (((v0 - v1) + -498)/499)) <= (((v0 - v1) + 1)/499))
((((996 - (v0 % 499))/499) + ((v0 + -498)/499)) <= ((v0 + 1)/499))
((((max((((v0 - v1) + -1)/4), 0)*4) + ((min((((v0 - v1) + 3)/4), 1)*4) + v1)) + -4) <= (((((v0 - v1) + -1)/4)*4) + v1))
((((min((((((min(((((v0*2) + v1)/v2)*v2), ((v3*2) + v4)) + -1)/4)*4) + ((((min(((((v0*2) + v1)/v2)*v2), ((v3*2) + v4)) + -1)/v5)*v5) + (((v6*v7) + v8)*2))) + v9), (min(((((v0*2) + v1)/v2)*v2), ((v3*2) + v4)) + (((v6*v7) + v8)*2))) + -4) <= min((((((min(((((v0*2) + v1)/v2)*v2), ((v3*2) + v4)) + -1)/4)*2) + ((v6*v7) + v8))*2), ((min(((((v0*2) + v1)/v2)*v2), ((v3*2) + v4)) + (((v6*v7) + v8)*2)) + -4))) && (select((v10 < v11), min((((v12*v13) + v11)*2), (((v14 + v15) - v16) + 2)), (((v12*v13) + v11)*2)) <= (((v12*v13) + v11)*2))) && (min((v14 + v15), ((((v12*v13) + v11)*2) + v16)) <= min(((((v12*v13) + v11)*2) + v16), (v14 + v15))))
((((min((((((v0*v1) + v2)*v3) + v4) + v5), v6) + 10) <= ((((min((v6 - ((((v0*v1) + v2)*v3) + v4)), v5) + 13)/4)*4) + ((((v0*v1) + v2)*v3) + v4))) && (select((v7 < v8), min(((v8*v9) + v10), (v11 + v12)), ((v8*v9) + v10)) <= ((v8*v9) + v10))) && (((min(((v11 + v12) - ((v8*v9) + v10)), v9) + (v8*v9)) + v10) <= min((v11 + v12), (((v8*v9) + v10) + v9))))
((((min(((((v0 - v1) + 3)/4)*4), -6) + v1) + 6) <= v1) && ((((((v0 - v1) + -1)/4)*4) + 10) <= min(((((v0 - v1) + 11)/4)*4), (((((v0 - v1) + 3)/4)*4) + 6))))
((((min(((((v0 - v1) + 6)/4)*4), -13) + v1) + 13) <= v1) && ((((((v0 - v1) + 2)/4)*4) + 17) <= min(((((v0 - v1) + 22)/4)*4), (((((v0 - v1) + 6)/4)*4) + 13))))
((((min(((((v0 - v1) + 7)/4)*4), -5) + v1) + 5) <= v1) && ((((((v0 - v1) + 3)/4)*4) + 9) <= min(((((v0 - v1) + 15)/4)*4), (((((v0 - v1) + 7)/4)*4) + 5))))
((((min(((((v0*v1) + v2)/v3)*v3), -2) + ((v4*v5) + v6)) + 2) <= ((v4*v5) + v6)) && (select((v7 < v8), min(((v9*v10) + ((v11*v12) + (v8*v13))), v14), ((v9*v10) + ((v11*v12) + (v8*v13)))) <= ((v9*v10) + ((v11*v12) + (v8*v13)))))
((((min(((((v0*v1) + v2)/v3)*v3), -3) + ((v4*v5) + v6)) + 3) <= ((v4*v5) + v6)) && (select((v7 < v8), min(((v9*v10) + ((v11*v12) + (((v13*v14) + v8)*v5))), v15), ((v9*v10) + ((v11*v12) + (((v13*v14) + v8)*v5)))) <= ((v9*v10) + ((v11*v12) + (((v13*v14) + v8)*v5)))))
((((min(((((v0*v1) + v2)/v3)*v3), -3) + ((v4*v5) + v6)) + 3) <= ((v4*v5) + v6)) && (select((v7 < v8), min(((v9*v10) + ((v11*v12) + ((v13*v14) + (v8*v15)))), v16), ((v9*v10) + ((v11*v12) + ((v13*v14) + (v8*v15))))) <= ((v9*v10) + ((v11*v12) + ((v13*v14) + (v8*v15))))))
((((min((((min(((v0*v1) + v1), v2) + v3) + 3)/4), (((((v0*v1) + v3)/4) + ((((((min(((v0*v1) + v1), v2) + v3) + -1)/4) - (((v0*v1) + v3)/4))/v4)*v4)) + v4)) + -1) <= (((min(((v0*v1) + v1), v2) + v3) + -1)/4)) && (select((v5 < v6), min((min(((v7*v1) + ((v8*4) + v6)), v9) + (v10*v9)), v11), ((v10*v9) + ((v7*v1) + ((v8*4) + v6)))) <= ((v10*v9) + ((v7*v1) + ((v8*4) + v6))))) && ((min(min(((v7*v1) + ((v8*4) + v6)), ((v11 - (v10*v9)) + -1)), v12) + (v10*v9)) <= min((min(((v7*v1) + ((v8*4) + v6)), v12) + (v10*v9)), (v11 + -1))))
((((min((((v0 + -1)/4)*4), (v0 + -4)) + v1) + 4) <= min(((((max(v0, 4) + -1)/4)*4) + (min(v0, 4) + v1)), (v0 + v1))) && (((min((v2 - ((v3*v4) + v5)), -25) + (v3*v4)) + 25) <= min((v3*v4), ((v2 - v5) + 25))))
((((min((((v0 + -1)/4)*4), (v0 + -4)) + v1) + 4) <= min(((((max(v0, 4) + -1)/4)*4) + (min(v0, 4) + v1)), (v0 + v1))) && (select((v2 < v3), min((((v4*v5) + (v3*v6)) + v7), v8), (((v4*v5) + (v3*v6)) + v7)) <= (((v4*v5) + (v3*v6)) + v7)))
((((min((((v0 + -1)/4)*4), (v0 + -4)) + v1) + 4) <= min(((((max(v0, 4) + -1)/4)*4) + (min(v0, 4) + v1)), (v0 + v1))) && (select((v2 < v3), min(((v3 + v4)*v5), v6), ((v3 + v4)*v5)) <= ((v3 + v4)*v5)))
((((min((((v0 + -1)/4)*4), (v0 + -4)) + v1)*2) + 11) <= min((((((max(v0, 4) + -1)/2)*2) + (min(v0, 4) + v1))*2), (((v0 + v1)*2) + 3)))
((((min((((v0 + -1)/4)*4), (v0 + -4)) + v1)*2) + 16) <= (min((max(v0, 4)*2), ((((max(v0, 4) + -1)/500)*1000) + 1001)) + ((min(v0, 4) + v1)*2)))
((((min((((v0 + 3)/4)*4), -10) + ((v1*v2) + v3)) + 10) <= ((v1*v2) + v3)) && (((((v0 + -1)/4)*4) + 14) <= min((((v0 + 15)/4)*4), ((((v0 + 3)/4)*4) + 10))))
((((min((((v0 + 3)/4)*4), -13) + ((v1*v2) + v3)) + 13) <= ((v1*v2) + v3)) && (((((v0 + 7)/4)*4) + 9) <= min((((v0 + 19)/4)*4), ((((v0 + 3)/4)*4) + 13))))
((((min((((v0 + 3)/4)*4), -5) + ((v1*v2) + v3)) + 5) <= ((v1*v2) + v3)) && (((((v0 + -1)/4)*4) + 9) <= min((((v0 + 11)/4)*4), ((((v0 + 3)/4)*4) + 5))))
((((min((((v0 + 3)/4)*4), -6) + ((v1*v2) + v3)) + 6) <= ((v1*v2) + v3)) && (((((v0 + -1)/4)*4) + 10) <= min((((v0 + 11)/4)*4), ((((v0 + 3)/4)*4) + 6))))
((((min((((v0 + 3)/4)*4), -7) + ((v1*v2) + v3)) + 7) <= ((v1*v2) + v3)) && (((((v0 + -1)/4)*4) + 11) <= min((((v0 + 11)/4)*4), ((((v0 + 3)/4)*4) + 7))))
((((min((((v0 + 3)/4)*4), -9) + ((v1*v2) + v3)) + 9) <= ((v1*v2) + v3)) && (((((v0 + -1)/4)*4) + 13) <= min((((v0 + 15)/4)*4), ((((v0 + 3)/4)*4) + 9))))
((((min((((v0 + 3)/4)*4), -9) + ((v1*v2) + v3)) + 9) <= ((v1*v2) + v3)) && (((((v0 + -1)/4)*4) + 4) <= min((((v0 + 3)/4)*4), ((((v0 + 15)/4)*4) + -9))))
((((min((((v0 - v1) + 1)/2), 1)*2) + v1) + -2) <= v1)
((((min((((v0 - v1) + v2)/2), 1)*2) + v1) + -2) <= v1)
((((min((((v0 - v1) + v2)/4), -1)*4) + v1) + 4) <= v1)
((((min((((v0 - v1) + v2)/4), -2)*4) + v1) + 8) <= v1)
((((min((((v0 - v1) + v2)/4), 1)*4) + v1) + -4) <= v1)
((((min((((v0 - v1)/v2)*v2), -19) + v1) + 19) <= v1) && (select((v3 < v4), min((((v5*v2) + ((v6*v7) + v4))*v8), v9), (((v5*v2) + ((v6*v7) + v4))*v8)) <= (((v5*v2) + ((v6*v7) + v4))*v8)))
((((min((((v0 - v1)/v2)*v2), -19) + v1) + 19) <= v1) && (select((v3 < v4), min((((v5*v2) + v4)*v6), v7), (((v5*v2) + v4)*v6)) <= (((v5*v2) + v4)*v6)))
((((min((((v0 - v1)/v2)*v2), -19) + v1) + 19) <= v1) && (select((v3 < v4), min((((v5*v6) + v4)*v7), v8), (((v5*v6) + v4)*v7)) <= (((v5*v6) + v4)*v7)))
((((min((((v0 - v1)/v2)*v2), -19) + v1) + 19) <= v1) && (select((v3 < v4), min(((v5*v6) + (((v7*v8) + v4)*v9)), v10), ((v5*v6) + (((v7*v8) + v4)*v9))) <= ((v5*v6) + (((v7*v8) + v4)*v9))))
((((min((((v0*2) + v1)*12), (((v2 - v3)*2) + v4)) + (v3*2))*2) + -1) <= (((((v0*2) + v1)*6) + v3)*4))
((((min((((v0*2) + v1)*2), (((v2 - v3)*2) + v4)) + (v3*2))*2) + -1) <= ((((v0*2) + v1) + v3)*4))
((((min((((v0*2) + v1)*2), ((v2*2) + v3)) + ((v4/v5)*2))*2) + -1) <= (((v4/v5) + ((v0*2) + v1))*4))
((((min((((v0*2) + v1)*2), (v2 + v3)) + (v4*2))*2) + -1) <= ((((v0*2) + v1) + v4)*4))
((((min((((v0*2) + v1)*4), ((v2*2) + v3)) + ((v4/v5)*2))*2) + -1) <= (((v4/v5) + (((v0*2) + v1)*2))*4))
((((min((((v0*2) + v1)*4), (v2 + v3)) + (v4*2))*2) + -1) <= (((((v0*2) + v1)*2) + v4)*4))
((((min((((v0*2) + v1)*8), (((v2 - v3)*2) + v4)) + (v3*2))*2) + -1) <= (((((v0*2) + v1)*4) + v3)*4))
((((min((((v0*4) + v1)*4), (((v2 - v3)*2) + v4)) + (v3*2))*2) + -1) <= (((((v0*4) + v1)*2) + v3)*4))
((((min((((v0*v1) + v2)*2), ((v3*2) + v4)) + ((((v5*v6) + v7)/4)*2))*2) + -1) <= (((((v5*v6) + v7)/4) + ((v0*v1) + v2))*4))
((((min((((v0*v1) + v2)*2), ((v3*2) + v4)) + (((min(v5, v6) + -1)/2)*2))*2) + -1) <= ((((min(v5, v6) + -1)/2) + ((v0*v1) + v2))*4))
((((min(((min((((v0 - v1) + 10)/4), 1)*4) + v1), (v0 + 7)) + -4) <= min((v0 + 3), v1)) && ((min((((((v0 - v1) + v2)/4)*4) + v1), (v0 + 3)) + 4) <= min(min((((((v0 - v1) + 10)/4)*4) + v1), (v0 + 7)), (((((min(((((v0 - v1) + 10)/4)*4), ((v0 - v1) + 7)) + -1)/4)*4) + v1) + 4)))) && (((min(((v3 + v4) - ((v5*v6) + v7)), v6) + (v5*v6)) + v7) <= min((v3 + v4), (((v5*v6) + v7) + v6))))
((((min(((min((((v0 - v1) + 10)/4), 1)*4) + v1), (v0 + 7)) + -4) <= min((v0 + 3), v1)) && ((min((((((v0 - v1) + v2)/4)*4) + v1), (v0 + 3)) + 4) <= min(min((((((v0 - v1) + 10)/4)*4) + v1), (v0 + 7)), (((((min(((((v0 - v1) + 10)/4)*4), ((v0 - v1) + 7)) + -1)/4)*4) + v1) + 4)))) && (select((v3 < v4), min(((v4 + v5)*v6), v7), ((v4 + v5)*v6)) <= ((v4 + v5)*v6)))
((((min(((min((v0*v1), v2) + (v3*v4)) + v1), v5) + (min((min(((min((v0*v1), v2) + (v3*v4)) + v1), v5) + -1), ((v3*v4) + (v0*v1))) + v6)) + -4) <= (min((((((min(((min((v0*v1), v2) + (v3*v4)) + v1), v5) - ((v3*v4) + (v0*v1))) + -1)/4)*4) + (((v3*v4) + (v0*v1)) + v6)), ((min(((min((v0*v1), v2) + (v3*v4)) + v1), v5) + v6) + -4)) + ((v3*v4) + (v0*v1)))) && (select((v7 < v8), min((((v9*4) + v8)*4), v10), (((v9*4) + v8)*4)) <= (((v9*4) + v8)*4)))
((((min(((min((v0*v1), v2) + (v3*v4)) + v1), v5) + (min((min(((min((v0*v1), v2) + (v3*v4)) + v1), v5) + -1), ((v3*v4) + (v0*v1))) + v6)) + -4) <= (min((((((min(((min((v0*v1), v2) + (v3*v4)) + v1), v5) - ((v3*v4) + (v0*v1))) + -1)/4)*4) + (((v3*v4) + (v0*v1)) + v6)), ((min(((min((v0*v1), v2) + (v3*v4)) + v1), v5) + v6) + -4)) + ((v3*v4) + (v0*v1)))) && (select((v7 < v8), min((((v9*v10) + ((v11*4) + v8))*4), v12), (((v9*v10) + ((v11*4) + v8))*4)) <= (((v9*v10) + ((v11*4) + v8))*4)))
((((min(((min((v0*v1), v2) + (v3*v4)) + v1), v5) + (min((min(((min((v0*v1), v2) + (v3*v4)) + v1), v5) + -1), ((v3*v4) + (v0*v1))) + v6)) + -4) <= (min((((((min(((min((v0*v1), v2) + (v3*v4)) + v1), v5) - ((v3*v4) + (v0*v1))) + -1)/4)*4) + (((v3*v4) + (v0*v1)) + v6)), ((min(((min((v0*v1), v2) + (v3*v4)) + v1), v5) + v6) + -4)) + ((v3*v4) + (v0*v1)))) && (select((v7 < v8), min(((v9*v1) + (((v10*4) + v8)*4)), v11), ((v9*v1) + (((v10*4) + v8)*4))) <= ((v9*v1) + (((v10*4) + v8)*4))))
((((min(((min((v0*v1), v2) + (v3*v4)) + v1), v5) + (min((min(((min((v0*v1), v2) + (v3*v4)) + v1), v5) + -1), ((v3*v4) + (v0*v1))) + v6)) + -4) <= (min((((((min(((min((v0*v1), v2) + (v3*v4)) + v1), v5) - ((v3*v4) + (v0*v1))) + -1)/4)*4) + (((v3*v4) + (v0*v1)) + v6)), ((min(((min((v0*v1), v2) + (v3*v4)) + v1), v5) + v6) + -4)) + ((v3*v4) + (v0*v1)))) && (select((v7 < v8), min(((v9*v1) + (((v10*v11) + ((v12*4) + v8))*v13)), v14), ((v9*v1) + (((v10*v11) + ((v12*4) + v8))*v13))) <= ((v9*v1) + (((v10*v11) + ((v12*4) + v8))*v13))))
((((min(((min((v0*v1), v2) + (v3*v4)) + v1), v5) + (min((min(((min((v0*v1), v2) + (v3*v4)) + v1), v5) + -1), ((v3*v4) + (v0*v1))) + v6)) + -4) <= (min((((((min(((min((v0*v1), v2) + (v3*v4)) + v1), v5) - ((v3*v4) + (v0*v1))) + -1)/4)*4) + (((v3*v4) + (v0*v1)) + v6)), ((min(((min((v0*v1), v2) + (v3*v4)) + v1), v5) + v6) + -4)) + ((v3*v4) + (v0*v1)))) && (select((v7 < v8), min(((v9*v1) + (((v10*v11) + v8)*v12)), v13), ((v9*v1) + (((v10*v11) + v8)*v12))) <= ((v9*v1) + (((v10*v11) + v8)*v12))))
((((min(((v0 + 1)/2), 1)*2) + ((v1*v2) + v3)) + -2) <= ((v1*v2) + v3))
((((min(((v0 + v1) - ((v2*v3) + v4)), 2) + (v2*v3)) + v4) + -2) <= min(((v0 + v1) + -2), ((v2*v3) + v4)))
((((min(((v0 + v1) - ((v2*v3) + v4)), v5) + (v2*v3)) + v4) <= min((v0 + v1), (((v2*v3) + v4) + v5))) && (((min(((v6 + v7) - ((v8*v3) + v9)), v3) + (v8*v3)) + v9) <= min((v6 + v7), (((v8*v3) + v9) + v3))))
((((min(((v0 + v1)*8), (((v2 - v3)*2) + v4)) + (v3*2))*2) + -1) <= ((((v0 + v1)*4) + v3)*4))
((((min(((v0 + v1)/2), 1)*2) + ((v2*v3) + v4)) + -2) <= ((v2*v3) + v4))
((((min(((v0 + v1)/2), 1)*2) + (v2 + v3)) + -2) <= (v2 + v3))
((((min(((v0 + v1)/4), -1)*4) + ((v2*v3) + v4)) + 4) <= ((v2*v3) + v4))
((((min(((v0 + v1)/4), -3)*4) + ((v2*v3) + v4)) + 12) <= ((v2*v3) + v4))
((((min(((v0 + v1)/4), -4)*4) + ((v2*v3) + v4)) + 16) <= ((v2*v3) + v4))
((((min(((v0 + v1)/4), 1)*4) + ((v2*v3) + v4)) + -4) <= ((v2*v3) + v4))
((((min(((v0 + v1)/4), 1)*4) + (v2 + v3)) + -4) <= (v2 + v3))
((((min(((v0 + v1)/4), 1)*4) + v2) + -4) <= v2)
((((min(((v0 - v1)/4), -2)*4) + v1) + 8) <= v1)
((((min(((v0 - v1)/4), -6)*4) + v1) + 24) <= v1)
((((min(((v0 - v1)/4), -9)*4) + v1) + 36) <= v1)
((((min(((v0*500) + 500), v1) + v2)*2) <= (min((min((v1 - (v0*500)), 500)*2), (((((min(((v0*500) + 500), v1) + 249)/250) - (v0*2))*500) + 1)) + (((v0*500) + v2)*2))) && (((min(((v3 + v4) - ((v5*2) + v6)), 2) + (v5*2)) + v6) <= min((v3 + v4), (((v5*2) + v6) + 2))))
((((min(((v0*504) + v1), v2) + v3)*2) + 29) <= (min(((((min(((v0*504) + v1), v2) + 266)/252) - (v0*2))*504), ((min((v2 - (v0*504)), v1)*2) + 29)) + (((v0*504) + v3)*2)))
((((min((min((v0*v1), (v2 + -4)) + v3), (min(((((v4 + v5)/4)*4) + ((v0*v1) + v3)), (v2 + v3)) + -7))/2) <= (min((min((v0*v1), (v2 + -4)) + v3), (min(((((v4 + v5)/4)*4) + ((v0*v1) + v3)), (v2 + v3)) + -4))/2)) && (((min((((((min(((((v4 + v5)/4)*4) + ((v0*v1) + v3)), (v2 + v3)) - (min((v0*v1), (v2 + -4)) + v3)) + -1)/4)*4) + (min((v0*v1), (v2 + -4)) + v3)), (min(((((v4 + v5)/4)*4) + ((v0*v1) + v3)), (v2 + v3)) + -4)) + -3)/2) <= min(((min(((((v4 + v5)/4)*4) + ((v0*v1) + v3)), (v2 + v3)) + -7)/2), (((min((v0*v1), (v2 + -4)) + v3)/2) + (((((min(((((v4 + v5)/4)*4) + ((v0*v1) + v3)), (v2 + v3)) + -1)/2) - ((min((v0*v1), (v2 + -4)) + v3)/2))/4)*4))))) && (select((v6 < v7), min(((v8*v1) + (v7*4)), v9), ((v8*v1) + (v7*4))) <= ((v8*v1) + (v7*4))))
((((min((min((v0*v1), (v2 + -4)) + v3), (min(((v4*4) + ((v0*v1) + v3)), (v2 + v3)) + -7))/2) <= (min((min((v0*v1), (v2 + -4)) + v3), (min(((v4*4) + ((v0*v1) + v3)), (v2 + v3)) + -4))/2)) && (((min((((((min(((v4*4) + ((v0*v1) + v3)), (v2 + v3)) - (min((v0*v1), (v2 + -4)) + v3)) + -1)/4)*4) + (min((v0*v1), (v2 + -4)) + v3)), (min(((v4*4) + ((v0*v1) + v3)), (v2 + v3)) + -4)) + -3)/2) <= min(((min(((v4*4) + ((v0*v1) + v3)), (v2 + v3)) + -7)/2), (((min((v0*v1), (v2 + -4)) + v3)/2) + (((((min(((v4*4) + ((v0*v1) + v3)), (v2 + v3)) + -1)/2) - ((min((v0*v1), (v2 + -4)) + v3)/2))/4)*4))))) && (select((v5 < v6), min(((v7*v8) + (v6*v9)), v10), ((v7*v8) + (v6*v9))) <= ((v7*v8) + (v6*v9))))
((((min((min((v0*v1), (v2 + -4)) + v3), (min(((v4*4) + ((v0*v1) + v3)), (v2 + v3)) + -7))/2) <= (min((min((v0*v1), (v2 + -4)) + v3), (min(((v4*4) + ((v0*v1) + v3)), (v2 + v3)) + -4))/2)) && (((min((((((min(((v4*4) + ((v0*v1) + v3)), (v2 + v3)) - (min((v0*v1), (v2 + -4)) + v3)) + -1)/4)*4) + (min((v0*v1), (v2 + -4)) + v3)), (min(((v4*4) + ((v0*v1) + v3)), (v2 + v3)) + -4)) + -3)/2) <= min(((min(((v4*4) + ((v0*v1) + v3)), (v2 + v3)) + -7)/2), (((min((v0*v1), (v2 + -4)) + v3)/2) + (((((min(((v4*4) + ((v0*v1) + v3)), (v2 + v3)) + -1)/2) - ((min((v0*v1), (v2 + -4)) + v3)/2))/4)*4))))) && (select((v5 < v6), min((v6*2), v7), (v6*2)) <= (v6*2)))
((((min((v0 - ((v1*2) + v2)), 2) + (v1*2)) + v2) <= min((((v1*2) + v2) + 2), v0)) && (((min((v3 - ((v4*2) + v5)), -2) + (v4*2)) + 2) <= min((v4*2), ((v3 - v5) + 2))))
((((min((v0 - ((v1*2) + v2)), 2) + (v1*2)) + v2) <= min((((v1*2) + v2) + 2), v0)) && ((min(((((v3 + v4) - v5) - (v6*2))*2), v7) + (v6*4)) <= min((((v3 + v4) - v5)*2), ((v6*4) + v7))))
((((min((v0 - ((v1*2) + v2)), 2) + (v1*2)) + v2) <= min((((v1*2) + v2) + 2), v0)) && ((min(((((v3 + v4) - v5) - (v6*8))*2), v7) + (v6*16)) <= min((((v3 + v4) - v5)*2), ((v6*16) + v7))))
((((min((v0 - ((v1*4) + v2)), 4) + (v1*4)) + (v2 + v3)) + -4) <= min(((((min(((v0 - v2) - (v1*4)), 4) + -1)/4)*4) + ((v1*4) + (v2 + v3))), ((min((v0 - v2), ((v1*4) + 4)) + (v2 + v3)) + -4)))
((((min((v0 - ((v1*4) + v2)), 4) + (v1*4)) + v2) <= min((((v1*4) + v2) + 4), v0)) && ((min(((v3 - (v4*2))*2), v5) + (v4*4)) <= min((v3*2), ((v4*4) + v5))))
((((min((v0 - ((v1*v2) + v3)), -1) + (v1*v2)) + 1) <= min((v1*v2), ((v0 - v3) + 1))) && (((min((v4 - ((v5*v2) + v6)), v2) + (v5*v2)) + v6) <= min((((v5*v2) + v6) + v2), v4)))
((((min((v0 - ((v1*v2) + v3)), -1) + (v1*v2)) + 1) <= min((v1*v2), ((v0 - v3) + 1))) && (((min((v4 - ((v5*v6) + v7)), v6) + (v5*v6)) + v7) <= min((((v5*v6) + v7) + v6), v4)))
((((min((v0 - ((v1*v2) + v3)), -1) + (v1*v2)) + 1) <= min((v1*v2), ((v0 - v3) + 1))) && (select((v4 < v5), min(((v5*v6) + v7), v8), ((v5*v6) + v7)) <= ((v5*v6) + v7)))
((((min((v0 - ((v1*v2) + v3)), 1) + (v1*v2)) + v3) + -1) <= min(((v1*v2) + v3), (v0 + -1)))
((((min((v0 - ((v1*v2) + v3)), v2) + (v1*v2)) + v3) <= min((((v1*v2) + v3) + v2), v0)) && ((((min((v4 - ((v5*v6) + v7)), 3) + (v5*v6)) + v7) + -3) <= min(((v5*v6) + v7), (v4 + -3))))
((((min((v0 - ((v1*v2) + v3)), v2) + (v1*v2)) + v3) <= min((((v1*v2) + v3) + v2), v0)) && (((min((((v4 + v5)*v6) - ((v7*v2) + v8)), v9) + (v7*v2)) + v8) <= min(((v4 + v5)*v6), (((v7*v2) + v8) + v9))))
((((min((v0 - ((v1*v2) + v3)), v2) + (v1*v2)) + v3) <= min((((v1*v2) + v3) + v2), v0)) && (((min(((v4 + v5) - ((v6*v7) + v8)), v7) + (v6*v7)) + v8) <= min((v4 + v5), (((v6*v7) + v8) + v7))))
((((min((v0 - ((v1*v2) + v3)), v2) + (v1*v2)) + v3) <= min((((v1*v2) + v3) + v2), v0)) && (((min((v4 - ((v5*v2) + v6)), v2) + (v5*v2)) + v6) <= min((((v5*v2) + v6) + v2), v4)))
((((min((v0 - ((v1*v2) + v3)), v2) + (v1*v2)) + v3) <= min((((v1*v2) + v3) + v2), v0)) && (((min((v4 - ((v5*v6) + v7)), v6) + (v5*v6)) + v7) <= min((((v5*v6) + v7) + v6), v4)))
((((min((v0 - ((v1*v2) + v3)), v4) + (v1*v2)) + v3) <= min((((v1*v2) + v3) + v4), v0)) && (((min((v5 - ((v6*v2) + v7)), v2) + (v6*v2)) + v7) <= min((((v6*v2) + v7) + v2), v5)))
((((min((v0 - ((v1*v2) + v3)), v4) + (v1*v2)) + v3) <= min((((v1*v2) + v3) + v4), v0)) && (((min((v5 - ((v6*v7) + v8)), v2) + (v6*v7)) + v8) <= min((((v6*v7) + v8) + v2), v5)))
((((min((v0 - ((v1*v2) + v3)), v4) + (v1*v2)) + v3) <= min((((v1*v2) + v3) + v4), v0)) && (select((v5 < v6), min(((v7*v8) + (v6*v9)), v10), ((v7*v8) + (v6*v9))) <= ((v7*v8) + (v6*v9))))
((((min((v0 - ((v1*v2) + v3)), v4) + (v1*v2)) + v3) <= min((((v1*v2) + v3) + v4), v0)) && (select((v5 < v6), min((v6*v7), v8), (v6*v7)) <= (v6*v7)))
((((min((v0 - (v1*v2)), v2) + ((v1*v2) + v3))*2) <= (min((min((v0 - (v1*v2)), v2)*2), ((((min((v0 - (v1*v2)), v2) + -1)/16)*32) + 33)) + (((v1*v2) + v3)*2))) && (select((v4 < v5), min(((v6*v7) + (v5*v8)), v9), ((v6*v7) + (v5*v8))) <= ((v6*v7) + (v5*v8))))
((((min((v0 - (v1*v2)), v2) + ((v1*v2) + v3))*2) <= (min((min((v0 - (v1*v2)), v2)*2), ((((min((v0 - (v1*v2)), v2) + -1)/8)*16) + 17)) + (((v1*v2) + v3)*2))) && (select((v4 < v5), min((v5*16), v6), (v5*16)) <= (v5*16)))
((((min((v0*16), (((v1 - v2)*2) + v3)) + (v2*2))*2) + -1) <= (((v0*8) + v2)*4))
((((min((v0*16), ((v1*v2) + v3)) + (v4*4)) + 16) <= (((((min((v0*16), ((v1*v2) + v3)) + 19)/4) - (v0*4)) + ((v0*4) + v4))*4)) && (((min((v5 - ((v6*v7) + v8)), v9) + (v6*v7)) + v8) <= min((((v6*v7) + v8) + v9), v5)))
((((min((v0*2), (((v1 - v2)*2) + v3)) + (v2*2))*2) + -1) <= ((v0 + v2)*4))
((((min((v0*2), ((v1*2) + v2)) + ((((v3 + v4)*2) + v5)*2))*2) + -1) <= (((((v3 + v4)*2) + v5) + v0)*4))
((((min((v0*2), ((v1*2) + v2)) + (((v3 + -1)/2)*2))*2) + -1) <= ((((v3 + -1)/2) + v0)*4))
((((min((v0*2), ((v1*2) + v2)) + (((v3*4) + v4)*2))*2) + -1) <= ((((v3*4) + v4) + v0)*4))
((((min((v0*2), ((v1*v2) + v3)) + (((v4*v5) + v6)*2)) + -3) <= ((((((min((v0*2), ((v1*v2) + v3)) + (((v4*v5) + v6)*2)) - (((v1*v7) + ((v4*v5) + v6))*2))/4)*2) + ((v1*v7) + ((v4*v5) + v6)))*2)) && (((min((v8 - ((v9*v10) + v11)), v12) + (v9*v10)) + v11) <= min((((v9*v10) + v11) + v12), v8)))
((((min((v0*2), ((v1*v2) + v3)) + (((v4*v5) + v6)*2)) + 26) <= (((((((min((v0*2), ((v1*v2) + v3)) + (((v4*v5) + v6)*2)) - (((v1*v7) + ((v4*v5) + v6))*2)) + 29)/4)*2) + ((v1*v7) + ((v4*v5) + v6)))*2)) && (((min(((v8 + v9) - ((v10*2) + v11)), 2) + (v10*2)) + v11) <= min((v8 + v9), (((v10*2) + v11) + 2))))
((((min((v0*2), ((v1*v2) + v3)) + (((v4*v5) + v6)*2)) + 26) <= (((((((min((v0*2), ((v1*v2) + v3)) + (((v4*v5) + v6)*2)) - (((v1*v7) + ((v4*v5) + v6))*2)) + 29)/4)*2) + ((v1*v7) + ((v4*v5) + v6)))*2)) && (((min((v8 - ((v9*2) + v10)), 2) + (v9*2)) + v10) <= min((((v9*2) + v10) + 2), v8)))
((((min((v0*2), ((v1*v2) + v3)) + (((v4*v5) + v6)*2)) + 48) <= (((((((min((v0*2), ((v1*v2) + v3)) + (((v4*v5) + v6)*2)) - (((v1*v7) + ((v4*v5) + v6))*2)) + 51)/4)*2) + ((v1*v7) + ((v4*v5) + v6)))*2)) && (((min(((v8 + v9) - ((v10*v11) + v12)), v11) + (v10*v11)) + v12) <= min((v8 + v9), (((v10*v11) + v12) + v11))))
((((min((v0*2), ((v1*v2) + v3)) + ((v4/4)*2)) + 4) <= (((((((min((v0*2), ((v1*v2) + v3)) + ((v4/4)*2)) - (((v4/4) + (v1*v5))*2)) + 7)/4)*2) + ((v4/4) + (v1*v5)))*2)) && (((min((v6 - ((v7*2) + v8)), 2) + (v7*2)) + v8) <= min((((v7*2) + v8) + 2), v6)))
((((min((v0*2), (v1 + v2)) + (v3*2))*2) + -1) <= ((v0 + v3)*4))
((((min((v0*4), ((v1*2) + v2)) + ((v3/v4)*2))*2) + -1) <= (((v3/v4) + (v0*2))*4))
((((min((v0*4), (v1 + v2)) + (v3*2))*2) + -1) <= (((v0*2) + v3)*4))
((((min((v0*8), (((v1 - v2)*2) + -1)) + (v2*2))*2) + -1) <= (((v0*4) + v2)*4))
((((min((v0*8), (((v1 - v2)*2) + v3)) + (v2*2))*2) + -1) <= (((v0*4) + v2)*4))
((((min((v0*v1), (min(((v0*v1) + v1), v2) + -25)) + v3)/8) <= ((min((v0*v1), (min(((v0*v1) + v1), v2) + -4)) + v3)/8)) && (((min(((((min((v2 - (v0*v1)), v1) + -1)/4)*4) + ((v0*v1) + v3)), ((min(((v0*v1) + v1), v2) + v3) + -4)) + -21)/8) <= min((((min(((v0*v1) + v1), v2) + v3) + -25)/8), ((((v0*v1) + v3)/8) + ((((((min(((v0*v1) + v1), v2) + v3) + -1)/8) - (((v0*v1) + v3)/8))/4)*4)))))
((((min((v0*v1), (min(((v0*v1) + v1), v2) + -7)) + v3)/2) <= ((min((v0*v1), (min(((v0*v1) + v1), v2) + -4)) + v3)/2)) && (((min(((((min((v2 - (v0*v1)), v1) + -1)/4)*4) + ((v0*v1) + v3)), ((min(((v0*v1) + v1), v2) + v3) + -4)) + -3)/2) <= min((((min(((v0*v1) + v1), v2) + v3) + -7)/2), ((((v0*v1) + v3)/2) + ((((((min(((v0*v1) + v1), v2) + v3) + -1)/2) - (((v0*v1) + v3)/2))/4)*4)))))
((((min((v0*v1), (v2 + -7)) + v3)/2) <= ((min((v0*v1), (v2 + -4)) + v3)/2)) && (((min(((((min((v4 - (v0*v1)), v1) + -1)/4)*4) + v5), (v6 + -4)) + -3)/2) <= min(((v6 + -7)/2), ((v5/2) + (((((v6 + -1)/2) - (v5/2))/4)*4)))))
((((min((v0/4), -1)*4) + ((v1*v2) + v3)) + 4) <= ((v1*v2) + v3))
((((min((v0/4), -3)*4) + ((v1*v2) + v3)) + 12) <= ((v1*v2) + v3))
((((min((v0/4), -6)*4) + ((v1*v2) + v3)) + 24) <= ((v1*v2) + v3))
((((min(v0, 1) + v1) + -1) <= v1) && (select((v2 < v3), min(v4, v5), v5) <= v5))
((((min(v0, 1)*4) + ((v1*v2) + v3)) + -4) <= ((v1*v2) + v3))
((((v0 - ((v1*32) + v2)) + -1)/2) <= max((((v0 - v2)/2) - (v1*16)), v3))
((((v0 - v1) + 3)/4) <= (max((((v0 - v1) + -1)/4), 0) + min((((v0 - v1) + 3)/4), 1)))
((((v0 - v1)/4) + (((v1 - v0) + 7)/4)) <= 1)
((((v0 - v1)/4)*4) <= (min((((v0 - v1)/4)*4), -19) + (((max((((v0 - v1)/4)*4), -19) + 22)/4)*4)))
((((v0 - v1)/4)*4) <= (min((max(((v0 - v1)/4), 0)*4), (((max(((v0 - v1)/4), 0)/125)*500) + 496)) + (min(((v0 - v1)/4), 0)*4)))
((((v0*4) + v1) + 16) <= (((((v1 + 19)/4) - (v2*4)) + ((v2*4) + v0))*4))
((((v0/v1) + (min(((v2 + v3)/2), 1)*2)) + -2) <= (v0/v1))
(((0 - v0)/2) <= ((1 - v0)/2))
(((4 - v0)/2) <= ((5 - v0)/2))
(((max(((min(((min((v0*v1), v2) + (v3*v4)) + v1), v5) - ((v3*v4) + (v0*v1))) + (min((min(((min((v0*v1), v2) + (v3*v4)) + v1), v5) + -1), ((v3*v4) + (v0*v1))) + v6)), (min(((min((v0*v1), v2) + (v3*v4)) + v1), v5) + v6)) + -4) <= min((((((min(((min((v0*v1), v2) + (v3*v4)) + v1), v5) - ((v3*v4) + (v0*v1))) + -1)/4)*4) + (((v3*v4) + (v0*v1)) + v6)), ((min(((min((v0*v1), v2) + (v3*v4)) + v1), v5) + v6) + -4))) && (select((v7 < v8), min(((v9*v4) + (v8*v10)), v11), ((v9*v4) + (v8*v10))) <= ((v9*v4) + (v8*v10))))
(((min(((((((v0 + v1)/v2)*v2) + v3)/v4)*v4), -2) + ((v5*v6) + v7)) + 2) <= ((v5*v6) + v7))
(((min(((((((v0 - v1) + v2)/4)*4) + (v1 + v3)) + 4), (v0 + v3)) <= min((((((v0 - v1) + 3)/4)*4) + (v1 + v3)), (v0 + v3))) && (select((v4 < v5), min(((v5*v6) + v7), (v8 + v9)), ((v5*v6) + v7)) <= ((v5*v6) + v7))) && (((min(((v8 + v9) - ((v5*v6) + v7)), v6) + (v5*v6)) + v7) <= min((v8 + v9), (((v5*v6) + v7) + v6))))
(((min((((((v0 + v1) + -1)/v2) - v3)*v4), -1) + (v3*v4)) + 1) <= (v3*v4))
(((min((((((v0 - v1)/4)*2) - v2)*2), -9) + (v2*2)) + 9) <= min((v2*2), ((((v0 - v1)/4)*4) + 9)))
(((min((((((v0*v1) + v2)*v3) + v4) + v5), v6) + 10) <= ((((min((v6 - ((((v0*v1) + v2)*v3) + v4)), v5) + 13)/4)*4) + ((((v0*v1) + v2)*v3) + v4))) && (((min(((v7 + v8) - ((v9*v10) + v11)), v10) + (v9*v10)) + v11) <= min((v7 + v8), (((v9*v10) + v11) + v10))))
(((min((((((v0*v1) + v2)/v3) + ((v4/v3)*v3)) + 3), v5) + -1) <= (min((((v0*v1) + v2)/v3), (v5 + v6)) + (((min((((((v0*v1) + v2)/v3) + ((v4/v3)*v3)) + 3), v5) - min((((v0*v1) + v2)/v3), (v5 + v6)))/2)*2))) && (((min((v7 - ((v8*3) + v9)), -3) + (v8*3)) + 3) <= min((v8*3), ((v7 - v9) + 3))))
(((min((((((v0*v1) + v2)/v3) + ((v4/v3)*v3)) + v5), v6) + -1) <= (min((((v0*v1) + v2)/v3), (v6 + v7)) + (((min((((((v0*v1) + v2)/v3) + ((v4/v3)*v3)) + v5), v6) - min((((v0*v1) + v2)/v3), (v6 + v7)))/2)*2))) && (((min((v8 - ((v9*2) + v10)), -5) + (v9*2)) + 5) <= min((v9*2), ((v8 - v10) + 5))))
(((min(((((min(((v0*v1) + v2), v3) + v4) + v5)/v6) - v7), -14) + (((v0*v1) + v4)/v6)) + 14) <= (((v0*v1) + v4)/v6))
(((min(((((v0 + v1)/4) + ((((v2 - ((v0 + v1)/4)) + 3)/2)*2))*2), ((v2*2) + 3))*2) + -6) <= (v2*4))
(((min(((((v0 + v1)/4) + ((((v2 - ((v0 + v1)/4)) + v3)/2)*2))*2), ((v2*2) + 11))*2) + -22) <= (v2*4))
(((min(((((v0 + v1)/4)*4) + ((v2*v3) + v4)), (v5 + v4)) + -3) <= ((((min(((((v0 + v1)/4)*4) + ((v2*v3) + v4)), (v5 + v4)) - (min((v2*v3), (v5 + v6)) + v4))/4)*4) + (min((v2*v3), (v5 + v6)) + v4))) && (select((v7 < v8), min(((v9*v10) + (v8*v11)), (((v12 + v13) - v14) + v15)), ((v9*v10) + (v8*v11))) <= ((v9*v10) + (v8*v11))))
(((min(((((v0 + v1)/4)*4) + ((v2*v3) + v4)), (v5 + v4)) + -4) <= (((((min(((((v0 + v1)/4)*4) + ((v2*v3) + v4)), (v5 + v4)) - (min((v2*v3), (v5 + -4)) + v4)) + -1)/4)*4) + (min((v2*v3), (v5 + -4)) + v4))) && (select((v6 < v7), (((min(((v8*v9) + (v7*2)), v10) + min(v11, v6))*2) + -1), ((min(v11, v6) + ((v8*v9) + (v7*2)))*2)) <= ((min(v11, v6) + ((v8*v9) + (v7*2)))*2)))
(((min(((((v0 - v1) + v2)/4)*4), ((v3*v4) + v4)) + -4) <= ((v3*v4) + (((min((((((v0 - v1) + v2)/4)*4) - (v3*v4)), v4) + -1)/4)*4))) && (((min((((v5 - v6) - (v7*6))*2), -17) + (v7*12)) + 17) <= min((v7*12), (((v5 - v6)*2) + 17))))
(((min(((((v0 - v1)*2) - v2)*2), -3) + (v2*2)) + 3) <= min((v2*2), (((v0 - v1)*4) + 3)))
(((min(((((v0*2) + v1)*16) + 1), v2) + (min(v3, v4)*2)) + -1) <= ((min(v3, v4) + (((v0*2) + v1)*8))*2))
(((min(((((v0*2) + v1)*32) + v2), v3) + -1) <= ((((min((v3 - (((v0*2) + v1)*32)), v2) + 2)/4) + (((v0*2) + v1)*8))*4)) && (((min((v4 - ((v5*4) + v6)), 4) + (v5*4)) + v6) <= min((((v5*4) + v6) + 4), v4)))
(((min(((((v0*2) + v1)*32) + v2), v3) + -1) <= ((((min((v3 - (((v0*2) + v1)*32)), v2) + 2)/4) + (((v0*2) + v1)*8))*4)) && (((min((v4 - ((v5*v6) + v7)), v8) + (v5*v6)) + v7) <= min((((v5*v6) + v7) + v8), v4)))
(((min(((((v0*2) + v1)*32) + v2), v3) + -1) <= ((((min((v3 - (((v0*2) + v1)*32)), v2) + 2)/4) + (((v0*2) + v1)*8))*4)) && ((min((v4 - ((v5*v6) + v7)), v6) + (v5*v6)) <= min((v4 - v7), ((v5*v6) + v6))))
(((min(((((v0*2) + v1)*4) + 1), v2) + (min(v3, v4)*2)) + -1) <= ((min(v3, v4) + (((v0*2) + v1)*2))*2))
(((min(((((v0*4) + v1)*16) + v2), v3) + -1) <= ((((min((v3 - (((v0*4) + v1)*16)), v2) + 2)/4) + (((v0*4) + v1)*4))*4)) && (((min(((v4 + v5) - ((v6*v7) + v8)), v9) + (v6*v7)) + v8) <= min((v4 + v5), (((v6*v7) + v8) + v9))))
(((min(((((v0*4) + v1)*8) + 1), v2) + (min(v3, v4)*2)) + -1) <= ((min(v3, v4) + (((v0*4) + v1)*4))*2))
(((min(((((v0*4) + v1)*8) + v2), v3) + -1) <= ((((min((v3 - (((v0*4) + v1)*8)), v2) + 2)/4) + (((v0*4) + v1)*2))*4)) && (((min(((v4 + v5) - ((v6*v7) + v8)), v9) + (v6*v7)) + v8) <= min((v4 + v5), (((v6*v7) + v8) + v9))))
(((min(((((v0*8) + v1)*8) + 1), v2) + (min(v3, v4)*2)) + -1) <= ((min(v3, v4) + (((v0*8) + v1)*4))*2))
(((min(((((v0*8) + v1)*8) + v2), v3) + -1) <= ((((min((v3 - (((v0*8) + v1)*8)), v2) + 2)/4) + (((v0*8) + v1)*2))*4)) && (((min(((v4 + v5) - ((v6*v7) + v8)), v9) + (v6*v7)) + v8) <= min((v4 + v5), (((v6*v7) + v8) + v9))))
(((min(((((v0*v1) + v2) + v3)*4), (v4 + v5)) + -4) <= (min((((v0*v1) + v2)*4), (v4 + 4)) + ((((min(((((v0*v1) + v2) + v3)*4), (v4 + v5)) - min((((v0*v1) + v2)*4), (v4 + 4))) + -1)/4)*4))) && (((min((((v6 - v7) - (v8*5))*4), -9) + (v8*20)) + 9) <= min((v8*20), (((v6 - v7)*4) + 9))))
(((min(((((v0*v1) + v2)*16) + 1), v3) + (min(v4, v5)*2)) + -1) <= ((min(v4, v5) + (((v0*v1) + v2)*8))*2))
(((min(((((v0*v1) + v2)*16) + v3), v4) + -3) <= (((min((v4 - (((v0*v1) + v2)*16)), v3)/4) + (((v0*v1) + v2)*4))*4)) && (((min(((v5 + v6) - ((v7*v1) + v8)), v1) + (v7*v1)) + v8) <= min((v5 + v6), (((v7*v1) + v8) + v1))))
(((min(((((v0*v1) + v2)*32) + v3), v4) + -2) <= ((((min((v4 - (((v0*v1) + v2)*32)), v3) + 1)/4) + (((v0*v1) + v2)*8))*4)) && (((min(((v5 + v6) - ((v7*v1) + v8)), v1) + (v7*v1)) + v8) <= min((v5 + v6), (((v7*v1) + v8) + v1))))
(((min(((((v0*v1) + v2)*4) + 1), v3) + (min(v4, v5)*2)) + -1) <= ((min(v4, v5) + (((v0*v1) + v2)*2))*2))
(((min(((((v0*v1) + v2)*8) + 1), v3) + (min(v4, v5)*2)) + -1) <= ((min(v4, v5) + (((v0*v1) + v2)*4))*2))
(((min(((((v0/4)*4) + ((v1*v2) + v3)) + v4), (v5 + v3)) + 6) <= (((((min(((((v0/4)*4) + ((v1*v2) + v3)) + v4), (v5 + v3)) - (min((v1*v2), (v5 + v6)) + v3)) + 9)/4)*4) + (min((v1*v2), (v5 + v6)) + v3))) && (((min(((v7 + v8) - ((v9*4) + v10)), v11) + (v9*4)) + v10) <= min((v7 + v8), (((v9*4) + v10) + v11))))
(((min(((((v0/4)*4) + (v1 + v2)) + v3), v4) + -1) <= (min((v1 + v2), (v4 + v5)) + ((((min(((((v0/4)*4) + (v1 + v2)) + v3), v4) - min((v1 + v2), (v4 + v5))) + 2)/4)*4))) && (((min((v6 - ((v7*v8) + v9)), v8) + (v7*v8)) + v9) <= min((((v7*v8) + v9) + v8), v6)))
(((min(((((v0/4)*4) + (v1 + v2)) + v3), v4) + 24) <= (min((v1 + v2), (v4 + v5)) + ((((min(((((v0/4)*4) + (v1 + v2)) + v3), v4) - min((v1 + v2), (v4 + v5))) + 27)/4)*4))) && ((((min((v6 - ((v7*v8) + v9)), 1) + (v7*v8)) + v9) + -1) <= min(((v7*v8) + v9), (v6 + -1))))
(((min(((((v0/4)*4) + (v1 + v2)) + v3), v4) + 24) <= (min((v1 + v2), (v4 + v5)) + ((((min(((((v0/4)*4) + (v1 + v2)) + v3), v4) - min((v1 + v2), (v4 + v5))) + 27)/4)*4))) && (((min(((v6 + v7) - ((v8*v9) + v10)), -7) + (v8*v9)) + 7) <= min((v8*v9), (((v6 + v7) - v10) + 7))))
(((min(((((v0/4)*4) + (v1 + v2)) + v3), v4) + 24) <= (min((v1 + v2), (v4 + v5)) + ((((min(((((v0/4)*4) + (v1 + v2)) + v3), v4) - min((v1 + v2), (v4 + v5))) + 27)/4)*4))) && (((min((v6 - ((v7*4) + v8)), v3) + (v7*4)) + v8) <= min((((v7*4) + v8) + v3), v6)))
(((min(((((v0/4)*4) + (v1 + v2)) + v3), v4) + 24) <= (min((v1 + v2), (v4 + v5)) + ((((min(((((v0/4)*4) + (v1 + v2)) + v3), v4) - min((v1 + v2), (v4 + v5))) + 27)/4)*4))) && (((min((v6 - ((v7*v8) + v9)), -10) + (v7*v8)) + 10) <= min((v7*v8), ((v6 - v9) + 10))))
(((min(((((v0/v1)*v1) + ((v2*v3) + v4)) + 3), v5) + 2) <= (min((((v2*v3) + v4) + v6), v5) + ((((min(((((v0/v1)*v1) + ((v2*v3) + v4)) + 3), v5) - min((((v2*v3) + v4) + v6), v5)) + 3)/2)*2))) && (((min((v7 - ((v8*2) + v9)), 2) + (v8*2)) + v9) <= min((((v8*2) + v9) + 2), v7)))
(((min((((min(((v0*v1) + v1), v2) + v3) + 3)/4), (((((((((min(((v0*v1) + v1), v2) + v3) + -1)/4) - (v3/4))/2) - (v0*4))*2) + ((v3/4) + (v0*v4))) + 2))*2) + -2) <= min(((((min(((v0*v1) + v1), v2) + v3) + -1)/4)*2), ((((((((((min(((v0*v1) + v1), v2) + v3) + -1)/4) - (v3/4))/2) - (v0*4))*2) + ((v3/4) + (v0*v4)))*2) + 3)))
(((min((((min((v0 + v1), v2) + v3) - v4)*v1), 1) + ((v3 + v0)*v1)) + -1) <= ((v3 + v0)*v1))
(((min((((min((v0 + v1), v2) + v3) - v4)*v5), 1) + ((v3 + v0)*v5)) + -1) <= ((v3 + v0)*v5))
(((min((((min((v0 - v1), v2) + (v3 + v1)) - v4)*v5), 1) + ((v3 + v1)*v5)) + -1) <= ((v3 + v1)*v5))
(((min((((v0 + -1)/4)*4), (v0 + -4)) + v1) + 4) <= min(((((max(v0, 4) + -1)/4)*4) + (min(v0, 4) + v1)), (v0 + v1)))
(((min((((v0 + 3)/v1)*v1), 3) + ((v2*v3) + v4)) + -3) <= ((v2*v3) + v4))
(((min((((v0 + v1) + 7)/v2), ((((v3*v4) + v1)/v2) + ((v5/v2)*v2))) + 6) <= (((min((v3*v4), (v0 + v6)) + v1)/v2) + ((((min((((v0 + v1) + 7)/v2), ((((v3*v4) + v1)/v2) + ((v5/v2)*v2))) - ((min((v3*v4), (v0 + v6)) + v1)/v2)) + 7)/2)*2))) && (((min(((v7 + v8) - ((v9*v2) + v10)), -3) + (v9*v2)) + 3) <= min((v9*v2), (((v7 + v8) - v10) + 3))))
(((min((((v0 + v1) + v2)/v3), ((((v4*v5) + v1)/v3) + ((v6/v3)*v3))) + 2) <= (((min((v4*v5), (v0 + v2)) + v1)/v3) + ((((min((((v0 + v1) + v2)/v3), ((((v4*v5) + v1)/v3) + ((v6/v3)*v3))) - ((min((v4*v5), (v0 + v2)) + v1)/v3)) + 3)/2)*2))) && (((min(((v7 + v8) - ((v9*2) + v10)), 2) + (v9*2)) + v10) <= min((v7 + v8), (((v9*2) + v10) + 2))))
(((min((((v0 + v1) + v2)/v3), ((((v4*v5) + v1)/v3) + ((v6/v3)*v3))) + 2) <= (((min((v4*v5), (v0 + v2)) + v1)/v3) + ((((min((((v0 + v1) + v2)/v3), ((((v4*v5) + v1)/v3) + ((v6/v3)*v3))) - ((min((v4*v5), (v0 + v2)) + v1)/v3)) + 3)/2)*2))) && (((min(((v7 + v8) - ((v9*v10) + v11)), v10) + (v9*v10)) + v11) <= min((v7 + v8), (((v9*v10) + v11) + v10))))
(((min((((v0 + v1) + v2)/v3), ((((v4*v5) + v1)/v3) + ((v6/v3)*v3))) + 2) <= (((min((v4*v5), (v0 + v2)) + v1)/v3) + ((((min((((v0 + v1) + v2)/v3), ((((v4*v5) + v1)/v3) + ((v6/v3)*v3))) - ((min((v4*v5), (v0 + v2)) + v1)/v3)) + 3)/2)*2))) && (((min(((v7 + v8) - ((v9*v10) + v11)), v3) + (v9*v10)) + v11) <= min((v7 + v8), (((v9*v10) + v11) + v3))))
(((min((((v0 + v1) + v2)/v3), ((((v4*v5) + v1)/v3) + ((v6/v3)*v3))) + 2) <= (((min((v4*v5), (v0 + v2)) + v1)/v3) + ((((min((((v0 + v1) + v2)/v3), ((((v4*v5) + v1)/v3) + ((v6/v3)*v3))) - ((min((v4*v5), (v0 + v2)) + v1)/v3)) + 3)/2)*2))) && (((min(((v7 + v8) - ((v9*v3) + v10)), v3) + (v9*v3)) + v10) <= min((v7 + v8), (((v9*v3) + v10) + v3))))
(((min((((v0 + v1) + v2)/v3), ((((v4*v5) + v1)/v3) + ((v6/v7)*v7))) + 2) <= (((min((v4*v5), (v0 + v2)) + v1)/v3) + ((((min((((v0 + v1) + v2)/v3), ((((v4*v5) + v1)/v3) + ((v6/v7)*v7))) - ((min((v4*v5), (v0 + v2)) + v1)/v3)) + 3)/2)*2))) && (((min(((v8 + v9) - ((v10*v7) + v11)), v7) + (v10*v7)) + v11) <= min((v8 + v9), (((v10*v7) + v11) + v7))))
(((min((((v0 + v1) - v2)*2), ((v3*16) + 1)) + (v2*2)) + -1) <= (((v3*8) + v2)*2))
(((min((((v0 + v1)/4)*4), (v0 + -4)) + v2) + 4) <= min((((((max(v0, 4) + 2)/4)*4) + (min(v0, 4) + v2)) + -3), (v0 + v2)))
(((min((((v0 + v1)/4)*4), (v0 + -4)) + v2) + 7) <= min(((((max(v0, 4) + 2)/4)*4) + (min(v0, 4) + v2)), ((v0 + v2) + 3)))
(((min((((v0 + v1)/4)*4), (v0 + -4)) + v2) + 8) <= min(((((max(v0, 4) + 3)/4)*4) + (min(v0, 4) + v2)), ((v0 + v2) + 4)))
(((min((((v0 + v1)/v2)*v2), -1) + ((v3*v4) + v5)) + 1) <= ((v3*v4) + v5))
(((min((((v0 + v1)/v2)*v2), -2) + ((v3*v4) + v5)) + 2) <= ((v3*v4) + v5))
(((min((((v0 + v1)/v2)*v2), -5) + ((v3*v4) + v5)) + 5) <= ((v3*v4) + v5))
(((min((((v0 + v1)/v2)*v2), -5) + v3) + 5) <= v3)
(((min((((v0 + v1)/v2)*v2), -6) + ((v3*v4) + v5)) + 6) <= ((v3*v4) + v5))
(((min((((v0 + v1)/v2)*v2), -7) + ((v3*v4) + v5)) + 7) <= ((v3*v4) + v5))
(((min((((v0 + v1)/v2)*v2), -9) + ((v3*v4) + v5)) + 9) <= ((v3*v4) + v5))
(((min((((v0 + v1)/v2)*v2), 2) + ((v3*v4) + v5)) + -2) <= ((v3*v4) + v5))
(((min((((v0 - v1) - (v2*2))*2), -3) + (v2*4)) + 3) <= min((v2*4), (((v0 - v1)*2) + 3)))
(((min((((v0 - v1) - v2)*v3), -3) + (v2*v3)) + 3) <= min((v2*v3), (((v0 - v1)*v3) + 3)))
(((min((((v0 - v1) - v2)*v3), -5) + (v2*v3)) + 5) <= min((v2*v3), (((v0 - v1)*v3) + 5)))
(((min((((v0 - v1)/4)*4), ((min((v2*v3), v4) + (v5*v6)) + v7)) + 8) <= (((((min((((v0 - v1)/4)*4), ((min((v2*v3), v4) + (v5*v6)) + v7)) - ((v5*v6) + (v2*v3))) + 11)/4)*4) + ((v5*v6) + (v2*v3)))) && (((min((v8 - ((v9*8) + v10)), 8) + (v9*8)) + v10) <= min((((v9*8) + v10) + 8), v8)))
(((min((((v0 - v1)/4)*4), ((v2*v3) + v4)) + 8) <= ((v2*v3) + (((min(((((v0 - v1)/4)*4) - (v2*v3)), v4) + 11)/4)*4))) && (((min((v5 - ((v6*v7) + v8)), 4) + (v6*v7)) + v8) <= min((((v6*v7) + v8) + 4), v5)))
(((min((((v0 - v1)/4)*4), -10) + v1)*2) <= (min((((v0 - v1)/4)*8), -20) + (v1*2)))
(((min((((v0 - v1)/v2)*v2), -10) + v1) + 10) <= v1)
(((min((((v0 - v1)/v2)*v2), -13) + v1) + 13) <= v1)
(((min((((v0 - v1)/v2)*v2), -21) + v1) + 21) <= v1)
(((min((((v0 - v1)/v2)*v2), -6) + v1) + 6) <= v1)
(((min((((v0*16) + v1) + 16), v2) + -3) <= (((((min((((v0*16) + v1) + 16), v2) - v1)/4) - (v0*4))*4) + ((v0*16) + v1))) && (((min(((v3 + v4) - ((v5*v6) + v7)), v6) + (v5*v6)) + v7) <= min((v3 + v4), (((v5*v6) + v7) + v6))))
(((min((((v0*2) + v1)*v2), (((v3 - v4)*2) + v5)) + (v4*2)) + 12) <= (((((((min((((v0*2) + v1)*v2), (((v3 - v4)*2) + v5)) + (v4*2)) - (((((v0*2) + v1)*v6) + v4)*2)) + 15)/4)*2) + ((((v0*2) + v1)*v6) + v4))*2))
(((min((((v0*2) - v1)*2), -3) + (v1*2)) + 3) <= min((v1*2), ((v0*4) + 3)))
(((min((((v0*32) + v1) + v2), v3) + -3) <= (((((min((((v0*32) + v1) + v2), v3) - v1)/4) - (v0*8))*4) + ((v0*32) + v1))) && (((min((v4 - ((v5*v6) + v7)), -2) + (v5*v6)) + 2) <= min((v5*v6), ((v4 - v7) + 2))))
(((min((((v0*32) + v1) + v2), v3) <= (min(min((v3 - ((v0*32) + v1)), (((((min((((v0*32) + v1) + v2), v3) - v1)/16) - (v0*2))*16) + 15)), v2) + ((v0*32) + v1))) && (select((v4 < v5), min(((v5*16) + v6), (v7 + v8)), ((v5*16) + v6)) <= ((v5*16) + v6))) && (((min(((v7 + v8) - ((v5*16) + v6)), 16) + (v5*16)) + v6) <= min((v7 + v8), (((v5*16) + v6) + 16))))
(((min((((v0*4) + ((v1*v2) + v3)) + v4), v5) + -1) <= (min(((v1*v2) + v3), (v5 + v6)) + ((((min((((v0*4) + ((v1*v2) + v3)) + v4), v5) - min(((v1*v2) + v3), (v5 + v6))) + 2)/4)*4))) && (((min((v7 - ((v8*v9) + v10)), v9) + (v8*v9)) + v10) <= min((((v8*v9) + v10) + v9), v7)))
(((min((((v0*4) + v1)*v2), v3) + v4)/4) <= ((v3 + v4)/4))
(((min((((v0*8) + v1) + v2), v3) + -1) <= ((((min((v3 - ((v0*8) + v1)), v2) + 2)/4)*4) + ((v0*8) + v1))) && ((min(((((v4 + v5) - v6) - (v7*8))*2), v8) + (v7*16)) <= min((((v4 + v5) - v6)*2), ((v7*16) + v8))))
(((min((((v0*8) + v1) + v2), v3) + -1) <= ((((min((v3 - ((v0*8) + v1)), v2) + 2)/4)*4) + ((v0*8) + v1))) && ((min(((v4 - (v5*8))*2), v6) + (v5*16)) <= min((v4*2), ((v5*16) + v6))))
(((min((((v0*v1) + v2) + 2), v3) + 3) <= ((((min((v3 - ((v0*v1) + v2)), 2) + 6)/4)*4) + ((v0*v1) + v2))) && (((min((((v4 - v5) - (v6*8))*2), -1) + (v6*16)) + 1) <= min((v6*16), (((v4 - v5)*2) + 1))))
(((min((((v0*v1) + v2) + v1), v3) + -4) <= ((((min((v3 - ((v0*v1) + v2)), v1) + -1)/4)*4) + ((v0*v1) + v2))) && (((min(((v4 + v5) - ((v6*v7) + v8)), v9) + (v6*v7)) + v8) <= min((v4 + v5), (((v6*v7) + v8) + v9))))
(((min((((v0*v1) + v2) + v1), v3) + -4) <= ((((min((v3 - ((v0*v1) + v2)), v1) + -1)/4)*4) + ((v0*v1) + v2))) && (((min((v4 - ((v5*4) + v6)), 4) + (v5*4)) + v6) <= min((((v5*4) + v6) + 4), v4)))
(((min((((v0*v1) + v2) + v1), v3) + -4) <= ((((min((v3 - ((v0*v1) + v2)), v1) + -1)/4)*4) + ((v0*v1) + v2))) && (((min((v4 - ((v5*v6) + v7)), v6) + (v5*v6)) + v7) <= min((((v5*v6) + v7) + v6), v4)))
(((min((((v0*v1) + v2) + v3), v4) + -1) <= ((((min((v4 - ((v0*v1) + v2)), v3) + 2)/4)*4) + ((v0*v1) + v2))) && (((min(((v5*2) - ((v6*v7) + v8)), v9) + (v6*v7)) + v8) <= min((v5*2), (((v6*v7) + v8) + v9))))
(((min((((v0*v1) + v2) + v3), v4) + -1) <= ((((min((v4 - ((v0*v1) + v2)), v3) + 2)/4)*4) + ((v0*v1) + v2))) && ((min(((((v5 + v6) - v7) - (v8*4))*2), v9) + (v8*8)) <= min((((v5 + v6) - v7)*2), ((v8*8) + v9))))
(((min((((v0*v1) + v2) + v3), v4) + -2) <= ((((min((v4 - ((v0*v1) + v2)), v3) + 1)/4)*4) + ((v0*v1) + v2))) && (((min(((v5 + v6) - ((v7*v8) + v9)), -6) + (v7*v8)) + 6) <= min((v7*v8), (((v5 + v6) - v9) + 6))))
(((min((((v0*v1) + v2) + v3), v4) + -2) <= ((((min((v4 - ((v0*v1) + v2)), v3) + 1)/4)*4) + ((v0*v1) + v2))) && (((min(((v5 + v6) - ((v7*v8) + v9)), v10) + (v7*v8)) + v9) <= min((v5 + v6), (((v7*v8) + v9) + v10))))
(((min((((v0*v1) + v2) + v3), v4) + -2) <= ((((min((v4 - ((v0*v1) + v2)), v3) + 1)/4)*4) + ((v0*v1) + v2))) && (((min(((v5 + v6) - ((v7*v8) + v9)), v8) + (v7*v8)) + v9) <= min((v5 + v6), (((v7*v8) + v9) + v8))))
(((min((((v0*v1) + v2) + v3), v4) + -2) <= ((((min((v4 - ((v0*v1) + v2)), v3) + 1)/4)*4) + ((v0*v1) + v2))) && (((min((v5 - ((v6*v7) + v8)), -5) + (v6*v7)) + 5) <= min((v6*v7), ((v5 - v8) + 5))))
(((min((((v0*v1) + v2) + v3), v4) + -2) <= ((((min((v4 - ((v0*v1) + v2)), v3) + 1)/4)*4) + ((v0*v1) + v2))) && (((min((v5 - ((v6*v7) + v8)), -7) + (v6*v7)) + 7) <= min((v6*v7), ((v5 - v8) + 7))))
(((min((((v0*v1) + v2) + v3), v4) + -2) <= ((((min((v4 - ((v0*v1) + v2)), v3) + 1)/4)*4) + ((v0*v1) + v2))) && (((min((v5 - ((v6*v7) + v8)), -8) + (v6*v7)) + 8) <= min((v6*v7), ((v5 - v8) + 8))))
(((min((((v0*v1) + v2) + v3), v4) + -2) <= ((((min((v4 - ((v0*v1) + v2)), v3) + 1)/4)*4) + ((v0*v1) + v2))) && (((min((v5 - ((v6*v7) + v8)), v9) + (v6*v7)) + v8) <= min((((v6*v7) + v8) + v9), v5)))
(((min((((v0*v1) + v2) + v3), v4) + -3) <= (((min((v4 - ((v0*v1) + v2)), v3)/4)*4) + ((v0*v1) + v2))) && (((min(((v5 + v6) - ((v7*v8) + v9)), -4) + (v7*v8)) + 4) <= min((v7*v8), (((v5 + v6) - v9) + 4))))
(((min((((v0*v1) + v2) + v3), v4) + -3) <= (((min((v4 - ((v0*v1) + v2)), v3)/4)*4) + ((v0*v1) + v2))) && (((min((v5 - ((v6*v7) + v8)), v3) + (v6*v7)) + v8) <= min((((v6*v7) + v8) + v3), v5)))
(((min((((v0*v1) + v2) + v3), v4) + 2) <= ((((min((v4 - ((v0*v1) + v2)), v3) + 5)/4)*4) + ((v0*v1) + v2))) && (((min(((v5 + v6) - ((v7*2) + v8)), -4) + (v7*2)) + 4) <= min((v7*2), (((v5 + v6) - v8) + 4))))
(((min((((v0*v1) + v2) + v3), v4) + 2) <= ((((min((v4 - ((v0*v1) + v2)), v3) + 5)/4)*4) + ((v0*v1) + v2))) && (((min(((v5 + v6) - ((v7*v8) + v9)), 5) + (v7*v8)) + v9) <= min((v5 + v6), (((v7*v8) + v9) + 5))))
(((min((((v0*v1) + v2) + v3), v4) + 2) <= ((((min((v4 - ((v0*v1) + v2)), v3) + 5)/4)*4) + ((v0*v1) + v2))) && (((min((v5 - ((v6*2) + v7)), -13) + (v6*2)) + 13) <= min((v6*2), ((v5 - v7) + 13))))
(((min((((v0*v1) + v2) + v3), v4) + 4) <= ((((min((v4 - ((v0*v1) + v2)), v3) + 7)/4)*4) + ((v0*v1) + v2))) && (((min((((v5 + v6)*v7) - ((v8*4) + v9)), -5) + (v8*4)) + 5) <= min((v8*4), ((((v5 + v6)*v7) - v9) + 5))))
(((min((((v0*v1) + v2) + v3), v4) + 4) <= ((((min((v4 - ((v0*v1) + v2)), v3) + 7)/4)*4) + ((v0*v1) + v2))) && (((min((((v5 + v6)*v7) - ((v8*v9) + v10)), -1) + (v8*v9)) + 1) <= min((v8*v9), ((((v5 + v6)*v7) - v10) + 1))))
(((min((((v0*v1) + v2) + v3), v4) + 4) <= ((((min((v4 - ((v0*v1) + v2)), v3) + 7)/4)*4) + ((v0*v1) + v2))) && (((min(((v5 + v6) - ((v7*4) + v8)), 4) + (v7*4)) + v8) <= min((v5 + v6), (((v7*4) + v8) + 4))))
(((min((((v0*v1) + v2) + v3), v4) + 4) <= ((((min((v4 - ((v0*v1) + v2)), v3) + 7)/4)*4) + ((v0*v1) + v2))) && (((min(((v5 + v6) - ((v7*v8) + v9)), v8) + (v7*v8)) + v9) <= min((v5 + v6), (((v7*v8) + v9) + v8))))
(((min((((v0*v1) + v2) + v3), v4) + 4) <= ((((min((v4 - ((v0*v1) + v2)), v3) + 7)/4)*4) + ((v0*v1) + v2))) && (((min((v5 - ((v6*4) + v7)), v8) + (v6*4)) + v7) <= min((((v6*4) + v7) + v8), v5)))
(((min((((v0*v1) + v2) + v3), v4) + 4) <= ((((min((v4 - ((v0*v1) + v2)), v3) + 7)/4)*4) + ((v0*v1) + v2))) && (((min((v5 - ((v6*v7) + v8)), v9) + (v6*v7)) + v8) <= min((((v6*v7) + v8) + v9), v5)))
(((min(((min((((v0 - v1) + 10)/4), 1)*4) + v1), (v0 + 7)) + -4) <= min((v0 + 3), v1)) && ((min((((((v0 - v1) + v2)/4)*4) + v1), (v0 + 3)) + 4) <= min(min((((((v0 - v1) + 10)/4)*4) + v1), (v0 + 7)), (((((min(((((v0 - v1) + 10)/4)*4), ((v0 - v1) + 7)) + -1)/4)*4) + v1) + 4))))
(((min(((min((((v0*v1) + v2)*v3), v4) + (v5*v6)) + v3), v7) + (min((min(((min((((v0*v1) + v2)*v3), v4) + (v5*v6)) + v3), v7) + -1), ((v5*v6) + (((v0*v1) + v2)*v3))) + v8)) + -4) <= (min((((((min(((min((((v0*v1) + v2)*v3), v4) + (v5*v6)) + v3), v7) - ((v5*v6) + (((v0*v1) + v2)*v3))) + -1)/4)*4) + (((v5*v6) + (((v0*v1) + v2)*v3)) + v8)), ((min(((min((((v0*v1) + v2)*v3), v4) + (v5*v6)) + v3), v7) + v8) + -4)) + ((v5*v6) + (((v0*v1) + v2)*v3))))
(((min(((min((((v0*v1) + v2)*v3), v4) + (v5*v6)) + v3), v7) + -4) <= (((((min(((min((((v0*v1) + v2)*v3), v4) + (v5*v6)) + v3), v7) - ((v5*v6) + (((v0*v1) + v2)*v3))) + -1)/4)*4) + ((v5*v6) + (((v0*v1) + v2)*v3)))) && (((min(((v8 + v9) - ((v10*4) + v11)), 4) + (v10*4)) + v11) <= min((v8 + v9), (((v10*4) + v11) + 4))))
(((min(((min(((min((v0 + v1), v2) + v3) - v4), v5) + (v3 + v0)) - ((((v6 + v7)/v8)*v8) + v4)), -13) + (v3 + v0)) + 13) <= (v3 + v0))
(((min(((min(((v0*v1) + v2), v3) + v4) - v5), 54) + ((v0*v1) + v4)) + -54) <= ((v0*v1) + v4))
(((min(((min((min(((min((v0*v1), v2) + (v3*v4)) + v5), v6) - v7), v8) + (v9 + v7)) - v10), 60) + (v9 + v7)) + -60) <= (v9 + v7))
(((min(((min((v0 + v1), v2) + v3) - v4), -4) + (v3 + v0)) + 4) <= (v3 + v0))
(((min(((min((v0 - v1), v2) - ((((v0 - v1) + -1)/v2)*v2))*v3), 1) + ((v1 + v4)*v3)) + -1) <= ((v1 + v4)*v3))
(((min(((min((v0*v1), v2) + (v3*v1)) - (((((v0 + -1)/v4)*v4) + v3)*v1)), 1) + (v3*v1)) + -1) <= (v3*v1))
(((min(((min((v0*v1), v2) + (v3*v4)) + v1), v5) + (min(((v3*v4) + (v0*v1)), (min(((min((v0*v1), v2) + (v3*v4)) + v1), v5) + -1)) + v6)) + -4) <= (min((((((min(((min((v0*v1), v2) + (v3*v4)) + v1), v5) - ((v3*v4) + (v0*v1))) + -1)/4)*4) + (((v3*v4) + (v0*v1)) + v6)), ((min(((min((v0*v1), v2) + (v3*v4)) + v1), v5) + v6) + -4)) + ((v3*v4) + (v0*v1))))
(((min(((min((v0*v1), v2) + (v3*v4)) + v1), v5) + (min((min(((min((v0*v1), v2) + (v3*v4)) + v1), v5) + -1), ((v3*v4) + (v0*v1))) + ((v6*v7) + v8))) + -4) <= (min((((((min(((min((v0*v1), v2) + (v3*v4)) + v1), v5) - ((v3*v4) + (v0*v1))) + -1)/4)*4) + (((v3*v4) + (v0*v1)) + ((v6*v7) + v8))), ((min(((min((v0*v1), v2) + (v3*v4)) + v1), v5) + ((v6*v7) + v8)) + -4)) + ((v3*v4) + (v0*v1))))
(((min(((min((v0*v1), v2) + (v3*v4)) + v1), v5) + (min((min(((min((v0*v1), v2) + (v3*v4)) + v1), v5) + -1), ((v3*v4) + (v0*v1))) + v6)) + -4) <= (min((((((min(((min((v0*v1), v2) + (v3*v4)) + v1), v5) - ((v3*v4) + (v0*v1))) + -1)/4)*4) + (((v3*v4) + (v0*v1)) + v6)), ((min(((min((v0*v1), v2) + (v3*v4)) + v1), v5) + v6) + -4)) + ((v3*v4) + (v0*v1))))
(((min(((min((v0*v1), v2) + (v3*v4)) + v1), v5) + -1) <= (((((min(((min((v0*v1), v2) + (v3*v4)) + v1), v5) - ((v3*v4) + (v0*v1))) + 2)/4)*4) + ((v3*v4) + (v0*v1)))) && (((min(((v6 + v7) - ((v8*v9) + v10)), v11) + (v8*v9)) + v10) <= min((v6 + v7), (((v8*v9) + v10) + v11))))
(((min(((min((v0*v1), v2) + (v3*v4)) + v1), v5) + -1) <= (((((min(((min((v0*v1), v2) + (v3*v4)) + v1), v5) - ((v3*v4) + (v0*v1))) + 2)/4)*4) + ((v3*v4) + (v0*v1)))) && (((min((v6 - ((v7*4) + v8)), 4) + (v7*4)) + v8) <= min((((v7*4) + v8) + 4), v6)))
(((min(((min((v0*v1), v2) + (v3*v4)) + v1), v5) + -1) <= (((((min(((min((v0*v1), v2) + (v3*v4)) + v1), v5) - ((v3*v4) + (v0*v1))) + 2)/4)*4) + ((v3*v4) + (v0*v1)))) && (((min((v6 - ((v7*v8) + v9)), v10) + (v7*v8)) + v9) <= min((((v7*v8) + v9) + v10), v6)))
(((min(((min((v0*v1), v2) + (v3*v4)) + v1), v5) + -1) <= (((((min(((min((v0*v1), v2) + (v3*v4)) + v1), v5) - ((v3*v4) + (v0*v1))) + 2)/4)*4) + ((v3*v4) + (v0*v1)))) && ((min((v6 - ((v7*v8) + v9)), v8) + (v7*v8)) <= min((v6 - v9), ((v7*v8) + v8))))
(((min(((min((v0*v1), v2) + (v3*v4)) + v1), v5) + -4) <= (((((min(((min((v0*v1), v2) + (v3*v4)) + v1), v5) - ((v3*v4) + (v0*v1))) + -1)/4)*4) + ((v3*v4) + (v0*v1)))) && (((min(((v6 + v7) - ((v8*4) + v9)), 4) + (v8*4)) + v9) <= min((v6 + v7), (((v8*4) + v9) + 4))))
(((min(((min((v0*v1), v2) + (v3*v4)) + v1), v5) + -4) <= (((((min(((min((v0*v1), v2) + (v3*v4)) + v1), v5) - ((v3*v4) + (v0*v1))) + -1)/4)*4) + ((v3*v4) + (v0*v1)))) && (((min(((v6 + v7) - ((v8*v9) + v10)), v11) + (v8*v9)) + v10) <= min((v6 + v7), (((v8*v9) + v10) + v11))))
(((min(((min((v0*v1), v2) + (v3*v4)) + v1), v5) + -4) <= (((((min(((min((v0*v1), v2) + (v3*v4)) + v1), v5) - ((v3*v4) + (v0*v1))) + -1)/4)*4) + ((v3*v4) + (v0*v1)))) && (((min(((v6 + v7) - ((v8*v9) + v10)), v9) + (v8*v9)) + v10) <= min((v6 + v7), (((v8*v9) + v10) + v9))))
(((min(((min((v0*v1), v2) + (v3*v4)) + v1), v5) + -4) <= (((((min(((min((v0*v1), v2) + (v3*v4)) + v1), v5) - ((v3*v4) + (v0*v1))) + -1)/4)*4) + ((v3*v4) + (v0*v1)))) && (((min((v6 - ((v7*v8) + v9)), v10) + (v7*v8)) + v9) <= min((((v7*v8) + v9) + v10), v6)))
(((min(((min((v0*v1), v2) + (v3*v4)) + v1), v5) + -4) <= (((((min(((min((v0*v1), v2) + (v3*v4)) + v1), v5) - ((v3*v4) + (v0*v1))) + -1)/4)*4) + ((v3*v4) + (v0*v1)))) && ((min((v6 - ((v7*4) + v8)), 4) + (v7*4)) <= min((v6 - v8), ((v7*4) + 4))))
(((min(((min((v0*v1), v2) + (v3*v4)) + v1), v5) + -4) <= (((((min(((min((v0*v1), v2) + (v3*v4)) + v1), v5) - ((v3*v4) + (v0*v1))) + -1)/4)*4) + ((v3*v4) + (v0*v1)))) && ((min(min(((v6*v7) + ((v8*v9) + v10)), ((v11 - (v12*v1)) + -1)), v2) + (v12*v1)) <= min(((v12*v1) + ((v6*v7) + ((v8*v9) + v10))), (v11 + -1))))
(((min(((min((v0*v1), v2) + (v3*v4)) + v1), v5) + -4) <= (((((min(((min((v0*v1), v2) + (v3*v4)) + v1), v5) - ((v3*v4) + (v0*v1))) + -1)/4)*4) + ((v3*v4) + (v0*v1)))) && (select((v6 < v7), min(((((v8*v9) + v7)*v9) + v10), (v11 + v12)), ((((v8*v9) + v7)*v9) + v10)) <= ((((v8*v9) + v7)*v9) + v10)))
(((min(((min((v0*v1), v2) + (v3*v4)) + v1), v5) + -4) <= (((((min(((min((v0*v1), v2) + (v3*v4)) + v1), v5) - ((v3*v4) + (v0*v1))) + -1)/4)*4) + ((v3*v4) + (v0*v1)))) && (select((v6 < v7), min((((v8*v9) + ((v10*v11) + ((v12*4) + v7)))*v13), v14), (((v8*v9) + ((v10*v11) + ((v12*4) + v7)))*v13)) <= (((v8*v9) + ((v10*v11) + ((v12*4) + v7)))*v13)))
(((min(((min((v0*v1), v2) + (v3*v4)) + v1), v5) + -4) <= (((((min(((min((v0*v1), v2) + (v3*v4)) + v1), v5) - ((v3*v4) + (v0*v1))) + -1)/4)*4) + ((v3*v4) + (v0*v1)))) && (select((v6 < v7), min((((v8*v9) + v7)*v10), (((v11 + v12) - v13) + 4)), (((v8*v9) + v7)*v10)) <= (((v8*v9) + v7)*v10)))
(((min(((min((v0*v1), v2) + (v3*v4)) + v1), v5) + -4) <= (((((min(((min((v0*v1), v2) + (v3*v4)) + v1), v5) - ((v3*v4) + (v0*v1))) + -1)/4)*4) + ((v3*v4) + (v0*v1)))) && (select((v6 < v7), min(((v8*v1) + (((v9*v10) + v7)*v11)), v12), ((v8*v1) + (((v9*v10) + v7)*v11))) <= ((v8*v1) + (((v9*v10) + v7)*v11))))
(((min(((min((v0*v1), v2) + (v3*v4)) + v1), v5) + -4) <= (((((min(((min((v0*v1), v2) + (v3*v4)) + v1), v5) - ((v3*v4) + (v0*v1))) + -1)/4)*4) + ((v3*v4) + (v0*v1)))) && (select((v6 < v7), min(((v8*v4) + (((v9*v10) + ((v11*4) + v7))*4)), v12), ((v8*v4) + (((v9*v10) + ((v11*4) + v7))*4))) <= ((v8*v4) + (((v9*v10) + ((v11*4) + v7))*4))))
(((min(((min((v0*v1), v2) + (v3*v4)) + v1), v5) + -4) <= (((((min(((min((v0*v1), v2) + (v3*v4)) + v1), v5) - ((v3*v4) + (v0*v1))) + -1)/4)*4) + ((v3*v4) + (v0*v1)))) && (select((v6 < v7), min(((v8*v4) + (v7*v9)), v10), ((v8*v4) + (v7*v9))) <= ((v8*v4) + (v7*v9))))
(((min(((min((v0*v1), v2) + (v3*v4)) + v1), v5) + -4) <= (((((min(((min((v0*v1), v2) + (v3*v4)) + v1), v5) - ((v3*v4) + (v0*v1))) + -1)/4)*4) + ((v3*v4) + (v0*v1)))) && (select((v6 < v7), min((v7*v8), v9), (v7*v8)) <= (v7*v8)))
(((min(((min((v0*v1), v2) + (v3*v4)) + v5), v6) + -3) <= ((((min(((min((v0*v1), v2) + (v3*v4)) + v5), v6) - ((v3*v4) + (v0*v1)))/4)*4) + ((v3*v4) + (v0*v1)))) && (((min(((v7 + v8) - ((v9*v10) + v11)), v10) + (v9*v10)) + v11) <= min((v7 + v8), (((v9*v10) + v11) + v10))))
(((min(((min(min(((min((v0*v1), v2) + (v3*v4)) + 16), v5), (v6 + v7)) + v8) - v9), 16) + (v8 + v6)) + -16) <= (v8 + v6))
(((min(((min(v0, v1) + ((v2*v3) + v4)) - v5), -2) + ((v2*v3) + v4)) + 2) <= ((v2*v3) + v4))
(((min(((min(v0, v1) + ((v2*v3) + v4)) - v5), -8) + ((v2*v3) + v4)) + 8) <= ((v2*v3) + v4))
(((min(((min(v0, v1) - (((min(v0, v2) + -1)/v1)*v1))*v3), 1) + (((v4*v2) + v5)*v3)) + -1) <= (((v4*v2) + v5)*v3))
(((min(((min(v0, v1) - (v2*v1))*v3), -31) + (((v4*v5) + v6)*v3)) + 31) <= (((v4*v5) + v6)*v3))
(((min(((v0 + v1) - ((v2*v3) + v4)), -3) + (v2*v3)) + 3) <= min((v2*v3), (((v0 + v1) - v4) + 3)))
(((min(((v0 + v1) - ((v2*v3) + v4)), -5) + (v2*v3)) + 5) <= min((v2*v3), (((v0 + v1) - v4) + 5)))
(((min(((v0 + v1) - ((v2*v3) + v4)), -6) + (v2*v3)) + 6) <= min((v2*v3), (((v0 + v1) - v4) + 6)))
(((min(((v0 + v1) - ((v2*v3) + v4)), -8) + (v2*v3)) + 8) <= min((v2*v3), (((v0 + v1) - v4) + 8)))
(((min(((v0 + v1) - ((v2*v3) + v4)), 0) + (v2*v3)) + v4) <= min(((v2*v3) + v4), (v0 + v1)))
(((min(((v0 + v1) - ((v2*v3) + v4)), v3) + (v2*v3)) + v4) <= min((v0 + v1), (((v2*v3) + v4) + v3)))
(((min(((v0 + v1) - ((v2*v3) + v4)), v5) + (v2*v3)) + v4) <= min((v0 + v1), (((v2*v3) + v4) + v5)))
(((min(((v0 + v1)/4), 1)*4) + -2) <= min((((v0 + v1)/4)*4), 2))
(((min(((v0 + v1)/4), 1)*4) + -5) <= min((((v0 + v1)/4)*4), -1))
(((min(((v0 + v1)/4), 1)*4) + -6) <= min((((v0 + v1)/4)*4), -2))
(((min(((v0 - ((((v1*v2) + v3)*v4) + v5))*v2), 1) + (((((v1*v2) + v3)*v4) + v5)*v2)) + -1) <= (((((v1*v2) + v3)*v4) + v5)*v2))
(((min(((v0 - (v1*4))*2), -23) + (v1*8)) + 23) <= min((v1*8), ((v0*2) + 23)))
(((min(((v0 - (v1*v2))*v3), 127) + v4) + -127) <= v4)
(((min(((v0 - (v1*v2))*v3), 33) + v4) + -33) <= v4)
(((min(((v0 - v1) - (v2*v3)), -1) + ((v2*v3) + v1)) + 1) <= (min((v2*v3), ((v0 - v1) + 1)) + v1))
(((min(((v0 - v1) - (v2*v3)), -4) + v4) + 4) <= v4)
(((min(((v0 - v1)*2), ((((v2*2) + v3)*4) + 1)) + (v1*2)) + -1) <= (((((v2*2) + v3)*2) + v1)*2))
(((min(((v0 - v1)*2), ((v2*16) + 1)) + (v1*2)) + -1) <= (((v2*8) + v1)*2))
(((min(((v0 - v1)*2), ((v2*4) + 1)) + (v1*2)) + -1) <= (((v2*2) + v1)*2))
(((min(((v0 - v1)*2), ((v2*v3) + v4)) + (v1*2)) + -2) <= (((((((min(((v0 - v1)*2), ((v2*v3) + v4)) + (v1*2)) - (((v2*v5) + v1)*2)) + 1)/4)*2) + ((v2*v5) + v1))*2))
(((min(((v0 - v1)*2), ((v2*v3) + v4)) + (v1*2)) + 4) <= (((((((min(((v0 - v1)*2), ((v2*v3) + v4)) + (v1*2)) - (((v2*v5) + v1)*2)) + 7)/4)*2) + ((v2*v5) + v1))*2))
(((min(((v0 - v1)*2), ((v2*v3) + v4)) + (v1*2)) + 8) <= (((((((min(((v0 - v1)*2), ((v2*v3) + v4)) + (v1*2)) - (((v2*v5) + v1)*2)) + 11)/4)*2) + ((v2*v5) + v1))*2))
(((min(((v0 - v1)*2), ((v2*v3) + v4)) + -1) <= ((v2*v3) + (((min((((v0 - v1)*2) - (v2*v3)), v4) + 2)/4)*4))) && (((min((v5 - ((v6*2) + v7)), 2) + (v6*2)) + v7) <= min((((v6*2) + v7) + 2), v5)))
(((min(((v0 - v1)*v2), ((min((v3*v4), v5) + (v6*v7)) + v8)) + -5) <= (((((min(((v0 - v1)*v2), ((min((v3*v4), v5) + (v6*v7)) + v8)) - ((v6*v7) + (v3*v4))) + -2)/4)*4) + ((v6*v7) + (v3*v4)))) && (((min((v9 - ((v10*v11) + v12)), -7) + (v10*v11)) + 7) <= min((v10*v11), ((v9 - v12) + 7))))
(((min(((v0 - v1)*v2), -1) + ((v3 + v1)*v2)) + 1) <= ((v3 + v1)*v2))
(((min(((v0 - v1)*v2), -1) + (v1*v2)) + 1) <= min((v1*v2), ((v0*v2) + 1)))
(((min(((v0 - v1)*v2), -11) + (v1*v2)) + 11) <= min((v1*v2), ((v0*v2) + 11)))
(((min(((v0 - v1)*v2), -7) + (v1*v2)) + 7) <= min((v1*v2), ((v0*v2) + 7)))
(((min(((v0 - v1)*v2), 1) + ((v3 + v1)*v2)) + -1) <= ((v3 + v1)*v2))
(((min(((v0 - v1)*v2), 385) + v3) + -385) <= v3)
(((min(((v0 - v1)/4), 0)*4) + -2) <= min((((v0 - v1)/4)*4), -2))
(((min(((v0*1000) + 1000), v1) + v2)*2) <= (min((min((v1 - (v0*1000)), 1000)*2), (((((min(((v0*1000) + 1000), v1) + 249)/250) - (v0*4))*500) + 1)) + (((v0*1000) + v2)*2)))
(((min(((v0*1000) + 1000), v1) + v2)*2) <= (min((min((v1 - (v0*1000)), 1000)*2), (((((min(((v0*1000) + 1000), v1) + 499)/500) - (v0*2))*1000) + 1)) + (((v0*1000) + v2)*2)))
(((min(((v0*16) + 16), v1) + -4) <= ((((min((v1 - (v0*16)), 16) + -1)/4) + (v0*4))*4)) && (((min(((v2 - (v3*6))*2), -35) + (v3*12)) + 35) <= min((v3*12), ((v2*2) + 35))))
(((min(((v0*16) + v1), v2) + -1) <= ((((min((v2 - (v0*16)), v1) + 2)/4) + (v0*4))*4)) && (((min((((v3 + v4)*2) - ((v5*16) + v6)), v7) + (v5*16)) + v6) <= min(((v3 + v4)*2), (((v5*16) + v6) + v7))))
(((min(((v0*16) + v1), v2) + -1) <= ((((min((v2 - (v0*16)), v1) + 2)/4) + (v0*4))*4)) && (((min(((v3*2) - ((v4*v5) + v6)), 16) + (v4*v5)) + v6) <= min((v3*2), (((v4*v5) + v6) + 16))))
(((min(((v0*16) + v1), v2) + -1) <= ((((min((v2 - (v0*16)), v1) + 2)/4) + (v0*4))*4)) && (((min((v3 - ((v4*16) + v5)), 4) + (v4*16)) + v5) <= min((((v4*16) + v5) + 4), v3)))
(((min(((v0*16) + v1), v2) + -1) <= ((((min((v2 - (v0*16)), v1) + 2)/4) + (v0*4))*4)) && (((min((v3 - ((v4*v5) + v6)), -4) + (v4*v5)) + 4) <= min((v4*v5), ((v3 - v6) + 4))))
(((min(((v0*16) + v1), v2) + -1) <= ((((min((v2 - (v0*16)), v1) + 2)/4) + (v0*4))*4)) && (((min((v3 - ((v4*v5) + v6)), v7) + (v4*v5)) + v6) <= min((((v4*v5) + v6) + v7), v3)))
(((min(((v0*16) + v1), v2) + -3) <= (((min((v2 - (v0*16)), v1)/4) + (v0*4))*4)) && (((min(((v3 + v4) - ((v5*v6) + v7)), -6) + (v5*v6)) + 6) <= min((v5*v6), (((v3 + v4) - v7) + 6))))
(((min(((v0*16) + v1), v2) + -3) <= (((min((v2 - (v0*16)), v1)/4) + (v0*4))*4)) && (((min(((v3 + v4) - ((v5*v6) + v7)), 0) + (v5*v6)) + v7) <= min(((v5*v6) + v7), (v3 + v4))))
(((min(((v0*16) + v1), v2) + -3) <= (((min((v2 - (v0*16)), v1)/4) + (v0*4))*4)) && (((min(((v3 + v4) - ((v5*v6) + v7)), 16) + (v5*v6)) + v7) <= min((v3 + v4), (((v5*v6) + v7) + 16))))
(((min(((v0*16) + v1), v2) + -3) <= (((min((v2 - (v0*16)), v1)/4) + (v0*4))*4)) && (((min(((v3 + v4) - ((v5*v6) + v7)), v8) + (v5*v6)) + v7) <= min((v3 + v4), (((v5*v6) + v7) + v8))))
(((min(((v0*20) + 20), v1) + -4) <= ((((min((v1 - (v0*20)), 20) + -1)/4) + (v0*5))*4)) && (((min(((v2 - (v3*8))*2), -7) + (v3*16)) + 7) <= min((v3*16), ((v2*2) + 7))))
(((min(((v0*32) + v1), v2) + -1) <= ((((min((v2 - (v0*32)), v1) + 2)/4) + (v0*8))*4)) && (((min((((v3 + v4)*2) - ((v5*8) + v6)), v7) + (v5*8)) + v6) <= min(((v3 + v4)*2), (((v5*8) + v6) + v7))))
(((min(((v0*32) + v1), v2) + -1) <= ((((min((v2 - (v0*32)), v1) + 2)/4) + (v0*8))*4)) && (((min(((v3 + v4) - ((v5*8) + v6)), -2) + (v5*8)) + 2) <= min((v5*8), (((v3 + v4) - v6) + 2))))
(((min(((v0*32) + v1), v2) + -1) <= ((((min((v2 - (v0*32)), v1) + 2)/4) + (v0*8))*4)) && (((min(((v3 + v4) - ((v5*v6) + v7)), 2) + (v5*v6)) + v7) <= min((v3 + v4), (((v5*v6) + v7) + 2))))
(((min(((v0*32) + v1), v2) + -1) <= ((((min((v2 - (v0*32)), v1) + 2)/4) + (v0*8))*4)) && (((min((v3 - ((v4*4) + v5)), -8) + (v4*4)) + 8) <= min((v4*4), ((v3 - v5) + 8))))
(((min(((v0*32) + v1), v2) + -1) <= ((((min((v2 - (v0*32)), v1) + 2)/4) + (v0*8))*4)) && (((min((v3 - ((v4*8) + v5)), -3) + (v4*8)) + 3) <= min((v4*8), ((v3 - v5) + 3))))
(((min(((v0*32) + v1), v2) + -1) <= ((((min((v2 - (v0*32)), v1) + 2)/4) + (v0*8))*4)) && (((min((v3 - ((v4*8) + v5)), -8) + (v4*8)) + 8) <= min((v4*8), ((v3 - v5) + 8))))
(((min(((v0*32) + v1), v2) + -1) <= ((((min((v2 - (v0*32)), v1) + 2)/4) + (v0*8))*4)) && (((min((v3 - ((v4*v5) + v6)), -1) + (v4*v5)) + 1) <= min((v4*v5), ((v3 - v6) + 1))))
(((min(((v0*32) + v1), v2) + -1) <= ((((min((v2 - (v0*32)), v1) + 2)/4) + (v0*8))*4)) && (((min((v3 - ((v4*v5) + v6)), -6) + (v4*v5)) + 6) <= min((v4*v5), ((v3 - v6) + 6))))
(((min(((v0*32) + v1), v2) + -1) <= ((((min((v2 - (v0*32)), v1) + 2)/4) + (v0*8))*4)) && (((min((v3 - ((v4*v5) + v6)), v7) + (v4*v5)) + v6) <= min((((v4*v5) + v6) + v7), v3)))
(((min(((v0*32) + v1), v2) + -1) <= ((((min((v2 - (v0*32)), v1) + 2)/4) + (v0*8))*4)) && ((min((v3 - ((v4*4) + v5)), 4) + (v4*4)) <= min((v3 - v5), ((v4*4) + 4))))
(((min(((v0*32) + v1), v2) + -1) <= ((((min((v2 - (v0*32)), v1) + 2)/4) + (v0*8))*4)) && ((min((v3 - ((v4*v5) + v6)), v5) + (v4*v5)) <= min((v3 - v6), ((v4*v5) + v5))))
(((min(((v0*32) + v1), v2) + -2) <= ((((min((v2 - (v0*32)), v1) + 1)/4) + (v0*8))*4)) && (((min(((v3 + v4) - ((v5*v6) + v7)), v6) + (v5*v6)) + v7) <= min((v3 + v4), (((v5*v6) + v7) + v6))))
(((min(((v0*32) + v1), v2) + -2) <= ((((min((v2 - (v0*32)), v1) + 1)/4) + (v0*8))*4)) && (((min(((v3 + v4) - ((v5*v6) + v7)), v8) + (v5*v6)) + v7) <= min((v3 + v4), (((v5*v6) + v7) + v8))))
(((min(((v0*32) + v1), v2) + -3) <= (((min((v2 - (v0*32)), v1)/4) + (v0*8))*4)) && (((min(((v3 + v4) - ((v5*4) + v6)), -4) + (v5*4)) + 4) <= min((v5*4), (((v3 + v4) - v6) + 4))))
(((min(((v0*32) + v1), v2) + -3) <= (((min((v2 - (v0*32)), v1)/4) + (v0*8))*4)) && (((min(((v3 + v4) - ((v5*8) + v6)), 0) + (v5*8)) + v6) <= min(((v5*8) + v6), (v3 + v4))))
(((min(((v0*32) + v1), v2) + -3) <= (((min((v2 - (v0*32)), v1)/4) + (v0*8))*4)) && (((min(((v3 + v4) - ((v5*v6) + v7)), -6) + (v5*v6)) + 6) <= min((v5*v6), (((v3 + v4) - v7) + 6))))
(((min(((v0*32) + v1), v2) + -3) <= (((min((v2 - (v0*32)), v1)/4) + (v0*8))*4)) && (((min(((v3 + v4) - ((v5*v6) + v7)), 0) + (v5*v6)) + v7) <= min(((v5*v6) + v7), (v3 + v4))))
(((min(((v0*32) + v1), v2) + -3) <= (((min((v2 - (v0*32)), v1)/4) + (v0*8))*4)) && (((min(((v3 + v4) - ((v5*v6) + v7)), v8) + (v5*v6)) + v7) <= min((v3 + v4), (((v5*v6) + v7) + v8))))
(((min(((v0*32) + v1), v2) + -3) <= (((min((v2 - (v0*32)), v1)/4) + (v0*8))*4)) && (((min((v3 - ((v4*2) + v5)), -2) + (v4*2)) + 2) <= min((v4*2), ((v3 - v5) + 2))))
(((min(((v0*32) + v1), v2) + -3) <= (((min((v2 - (v0*32)), v1)/4) + (v0*8))*4)) && (((min((v3 - ((v4*4) + v5)), 4) + (v4*4)) + v5) <= min((((v4*4) + v5) + 4), v3)))
(((min(((v0*32) + v1), v2) + -3) <= (((min((v2 - (v0*32)), v1)/4) + (v0*8))*4)) && (((min((v3 - ((v4*4) + v5)), v6) + (v4*4)) + v5) <= min((((v4*4) + v5) + v6), v3)))
(((min(((v0*32) + v1), v2) + 12) <= ((((min((v2 - (v0*32)), v1) + 15)/4) + (v0*8))*4)) && (((min(((v3 + v4) - ((v5*4) + v6)), 4) + (v5*4)) + v6) <= min((v3 + v4), (((v5*4) + v6) + 4))))
(((min(((v0*32) + v1), v2) + 12) <= ((((min((v2 - (v0*32)), v1) + 15)/4) + (v0*8))*4)) && (((min(((v3 + v4) - ((v5*v1) + v6)), v1) + (v5*v1)) + v6) <= min((v3 + v4), (((v5*v1) + v6) + v1))))
(((min(((v0*32) + v1), v2) + 12) <= ((((min((v2 - (v0*32)), v1) + 15)/4) + (v0*8))*4)) && (((min(((v3 + v4) - ((v5*v6) + v7)), v6) + (v5*v6)) + v7) <= min((v3 + v4), (((v5*v6) + v7) + v6))))
(((min(((v0*36) + 36), v1) + v2)*2) <= (min((min((v1 - (v0*36)), 36)*2), (((((min(((v0*36) + 36), v1) + 17)/18) - (v0*2))*36) + 1)) + (((v0*36) + v2)*2)))
(((min(((v0*36) + v1), v2) + 12) <= ((((min((v2 - (v0*36)), v1) + 15)/4) + (v0*9))*4)) && (((min(((v3 + v4) - ((v5*4) + v6)), 4) + (v5*4)) + v6) <= min((v3 + v4), (((v5*4) + v6) + 4))))
(((min(((v0*36) + v1), v2) + 12) <= ((((min((v2 - (v0*36)), v1) + 15)/4) + (v0*9))*4)) && (((min((v3 - ((v4*v5) + v6)), v7) + (v4*v5)) + v6) <= min((((v4*v5) + v6) + v7), v3)))
(((min(((v0*4) + ((v1*v2) + v3)), (v4 + v3)) + -2) <= (((((min(((v0*4) + ((v1*v2) + v3)), (v4 + v3)) - (min((v1*v2), (v4 + -4)) + v3)) + -1)/2)*2) + (min((v1*v2), (v4 + -4)) + v3))) && (((min(((v5 + v6) - ((v7*4) + v8)), -4) + (v7*4)) + 4) <= min((v7*4), (((v5 + v6) - v8) + 4))))
(((min(((v0*4) + ((v1*v2) + v3)), (v4 + v3)) + -4) <= (((((min(((v0*4) + ((v1*v2) + v3)), (v4 + v3)) - (min((v1*v2), (v4 + -4)) + v3)) + -1)/4)*4) + (min((v1*v2), (v4 + -4)) + v3))) && (((min(((v5 + v6) - ((v7*v2) + v8)), v2) + (v7*v2)) + v8) <= min((v5 + v6), (((v7*v2) + v8) + v2))))
(((min(((v0*4) + ((v1*v2) + v3)), (v4 + v3)) + -4) <= (((((min(((v0*4) + ((v1*v2) + v3)), (v4 + v3)) - (min((v1*v2), (v4 + -4)) + v3)) + -1)/4)*4) + (min((v1*v2), (v4 + -4)) + v3))) && (((min(((v5 + v6) - ((v7*v8) + v9)), -2) + (v7*v8)) + 2) <= min((v7*v8), (((v5 + v6) - v9) + 2))))
(((min(((v0*4) + ((v1*v2) + v3)), (v4 + v3)) + -4) <= (((((min(((v0*4) + ((v1*v2) + v3)), (v4 + v3)) - (min((v1*v2), (v4 + -4)) + v3)) + -1)/4)*4) + (min((v1*v2), (v4 + -4)) + v3))) && (((min(((v5 + v6) - ((v7*v8) + v9)), v8) + (v7*v8)) + v9) <= min((v5 + v6), (((v7*v8) + v9) + v8))))
(((min(((v0*4) + ((v1*v2) + v3)), (v4 + v3)) + -4) <= (((((min(((v0*4) + ((v1*v2) + v3)), (v4 + v3)) - (min((v1*v2), (v4 + -4)) + v3)) + -1)/4)*4) + (min((v1*v2), (v4 + -4)) + v3))) && (((min((v5 - ((v6*v2) + v7)), 0) + (v6*v2)) + v7) <= min(((v6*v2) + v7), v5)))
(((min(((v0*4) + ((v1*v2) + v3)), (v4 + v3)) + -4) <= (((((min(((v0*4) + ((v1*v2) + v3)), (v4 + v3)) - (min((v1*v2), (v4 + -4)) + v3)) + -1)/4)*4) + (min((v1*v2), (v4 + -4)) + v3))) && (((min((v5 - ((v6*v7) + v8)), v9) + (v6*v7)) + v8) <= min((((v6*v7) + v8) + v9), v5)))
(((min(((v0*4) + ((v1*v2) + v3)), (v4 + v3)) + -4) <= (((((min(((v0*4) + ((v1*v2) + v3)), (v4 + v3)) - (min((v1*v2), (v4 + -4)) + v3)) + -1)/4)*4) + (min((v1*v2), (v4 + -4)) + v3))) && ((min((v5 - ((v6*v7) + v8)), v7) + (v6*v7)) <= min((v5 - v8), ((v6*v7) + v7))))
(((min(((v0*4) + ((v1*v2) + v3)), (v4 + v3)) + -4) <= (((((min(((v0*4) + ((v1*v2) + v3)), (v4 + v3)) - (min((v1*v2), (v4 + -4)) + v3)) + -1)/4)*4) + (min((v1*v2), (v4 + -4)) + v3))) && (select((v5 < v6), min(((((v7*4) + v6)*v8) + v9), (v10 + v11)), ((((v7*4) + v6)*v8) + v9)) <= ((((v7*4) + v6)*v8) + v9)))
(((min(((v0*4) + ((v1*v2) + v3)), (v4 + v3)) + -4) <= (((((min(((v0*4) + ((v1*v2) + v3)), (v4 + v3)) - (min((v1*v2), (v4 + -4)) + v3)) + -1)/4)*4) + (min((v1*v2), (v4 + -4)) + v3))) && (select((v5 < v6), min(((v7*v8) + (v6*4)), v9), ((v7*v8) + (v6*4))) <= ((v7*v8) + (v6*4))))
(((min(((v0*40) + 40), v1) + -4) <= ((((min((v1 - (v0*40)), 40) + -1)/4) + (v0*10))*4)) && (((min((((v2 + v3)*v4) - ((v5*4) + v6)), -11) + (v5*4)) + 11) <= min((v5*4), ((((v2 + v3)*v4) - v6) + 11))))
(((min(((v0*64) + v1), v2) + -1) <= ((((min((v2 - (v0*64)), v1) + 2)/4) + (v0*16))*4)) && (((min((((v3 + v4)*2) - ((v5*v6) + v7)), v8) + (v5*v6)) + v7) <= min(((v3 + v4)*2), (((v5*v6) + v7) + v8))))
(((min(((v0*64) + v1), v2) + -1) <= ((((min((v2 - (v0*64)), v1) + 2)/4) + (v0*16))*4)) && (((min(((v3 + v4) - ((v5*4) + v6)), 4) + (v5*4)) + v6) <= min((v3 + v4), (((v5*4) + v6) + 4))))
(((min(((v0*64) + v1), v2) + -1) <= ((((min((v2 - (v0*64)), v1) + 2)/4) + (v0*16))*4)) && (((min((v3 - ((v4*2) + v5)), -30) + (v4*2)) + 30) <= min((v4*2), ((v3 - v5) + 30))))
(((min(((v0*64) + v1), v2) + -1) <= ((((min((v2 - (v0*64)), v1) + 2)/4) + (v0*16))*4)) && (((min((v3 - ((v4*2) + v5)), -5) + (v4*2)) + 5) <= min((v4*2), ((v3 - v5) + 5))))
(((min(((v0*64) + v1), v2) + -1) <= ((((min((v2 - (v0*64)), v1) + 2)/4) + (v0*16))*4)) && (((min((v3 - ((v4*4) + v5)), -28) + (v4*4)) + 28) <= min((v4*4), ((v3 - v5) + 28))))
(((min(((v0*64) + v1), v2) + -1) <= ((((min((v2 - (v0*64)), v1) + 2)/4) + (v0*16))*4)) && (((min((v3 - ((v4*4) + v5)), -8) + (v4*4)) + 8) <= min((v4*4), ((v3 - v5) + 8))))
(((min(((v0*64) + v1), v2) + -1) <= ((((min((v2 - (v0*64)), v1) + 2)/4) + (v0*16))*4)) && (((min((v3 - ((v4*4) + v5)), v6) + (v4*4)) + v5) <= min((((v4*4) + v5) + v6), v3)))
(((min(((v0*64) + v1), v2) + -1) <= ((((min((v2 - (v0*64)), v1) + 2)/4) + (v0*16))*4)) && (((min((v3 - ((v4*v5) + v6)), -3) + (v4*v5)) + 3) <= min((v4*v5), ((v3 - v6) + 3))))
(((min(((v0*64) + v1), v2) + -1) <= ((((min((v2 - (v0*64)), v1) + 2)/4) + (v0*16))*4)) && (((min((v3 - ((v4*v5) + v6)), v7) + (v4*v5)) + v6) <= min((((v4*v5) + v6) + v7), v3)))
(((min(((v0*8) + v1), v2) + -1) <= ((((min((v2 - (v0*8)), v1) + 2)/4) + (v0*2))*4)) && (((min((((v3 + v4)*2) - ((v5*v6) + v7)), v8) + (v5*v6)) + v7) <= min(((v3 + v4)*2), (((v5*v6) + v7) + v8))))
(((min(((v0*8) + v1), v2) + -1) <= ((((min((v2 - (v0*8)), v1) + 2)/4) + (v0*2))*4)) && (((min((v3 - ((v4*8) + v5)), -3) + (v4*8)) + 3) <= min((v4*8), ((v3 - v5) + 3))))
(((min(((v0*8) + v1), v2) + -1) <= ((((min((v2 - (v0*8)), v1) + 2)/4) + (v0*2))*4)) && (((min((v3 - ((v4*v5) + v6)), v7) + (v4*v5)) + v6) <= min((((v4*v5) + v6) + v7), v3)))
(((min(((v0*8) + v1), v2) + -2) <= ((((min((v2 - (v0*8)), v1) + 1)/4) + (v0*2))*4)) && (select((v3 < v4), (min((((v5*4) + v4)*8), ((v6*2) + v7)) + (((v8*v9) + v10)*2)), (((((v5*4) + v4)*4) + ((v8*v9) + v10))*2)) <= (((((v5*4) + v4)*4) + ((v8*v9) + v10))*2)))
(((min(((v0*v1) + 4), v2) + 10) <= ((v0*v1) + (((min((v2 - (v0*v1)), 4) + 13)/4)*4))) && (((min((((v3 + v4)*v5) - ((v6*v7) + v8)), v9) + (v6*v7)) + v8) <= min(((v3 + v4)*v5), (((v6*v7) + v8) + v9))))
(((min(((v0*v1) + v1), v2) + (v3*2)) + -3) <= ((((((min(((v0*v1) + v1), v2) + (v3*2)) - (((v0*v4) + v3)*2))/4)*2) + ((v0*v4) + v3))*2))
(((min(((v0*v1) + v1), v2) + -4) <= ((v0*v1) + (((min((v2 - (v0*v1)), v1) + -1)/4)*4))) && (((min((((v3 + v4)*v5) - ((v6*v7) + v8)), v9) + (v6*v7)) + v8) <= min(((v3 + v4)*v5), (((v6*v7) + v8) + v9))))
(((min(((v0*v1) + v1), v2) + -4) <= ((v0*v1) + (((min((v2 - (v0*v1)), v1) + -1)/4)*4))) && (((min(((v3 + v4) - ((v5*4) + v6)), -2) + (v5*4)) + 2) <= min((v5*4), (((v3 + v4) - v6) + 2))))
(((min(((v0*v1) + v1), v2) + -4) <= ((v0*v1) + (((min((v2 - (v0*v1)), v1) + -1)/4)*4))) && (((min(((v3 - (v4*2))*2), -3) + (v4*4)) + 3) <= min((v4*4), ((v3*2) + 3))))
(((min(((v0*v1) + v1), v2) + -4) <= ((v0*v1) + (((min((v2 - (v0*v1)), v1) + -1)/4)*4))) && (((min((v3 - ((v4*2) + v5)), -2) + (v4*2)) + 2) <= min((v4*2), ((v3 - v5) + 2))))
(((min(((v0*v1) + v1), v2) + -4) <= ((v0*v1) + (((min((v2 - (v0*v1)), v1) + -1)/4)*4))) && (((min((v3 - ((v4*4) + v5)), -6) + (v4*4)) + 6) <= min((v4*4), ((v3 - v5) + 6))))
(((min(((v0*v1) + v1), v2) + -4) <= ((v0*v1) + (((min((v2 - (v0*v1)), v1) + -1)/4)*4))) && (((min((v3 - ((v4*4) + v5)), 0) + (v4*4)) + v5) <= min(((v4*4) + v5), v3)))
(((min(((v0*v1) + v1), v2) + -4) <= ((v0*v1) + (((min((v2 - (v0*v1)), v1) + -1)/4)*4))) && (((min((v3 - ((v4*v5) + v6)), v1) + (v4*v5)) + v6) <= min((((v4*v5) + v6) + v1), v3)))
(((min(((v0*v1) + v1), v2) + -4) <= ((v0*v1) + (((min((v2 - (v0*v1)), v1) + -1)/4)*4))) && (((min((v3 - ((v4*v5) + v6)), v5) + (v4*v5)) + v6) <= min((((v4*v5) + v6) + v5), v3)))
(((min(((v0*v1) + v1), v2) + -4) <= ((v0*v1) + (((min((v2 - (v0*v1)), v1) + -1)/4)*4))) && (((min((v3 - ((v4*v5) + v6)), v7) + (v4*v5)) + v6) <= min((((v4*v5) + v6) + v7), v3)))
(((min(((v0*v1) + v1), v2) + -4) <= ((v0*v1) + (((min((v2 - (v0*v1)), v1) + -1)/4)*4))) && ((min(((v3 - (v4*4))*2), v5) + (v4*8)) <= min((v3*2), ((v4*8) + v5))))
(((min(((v0*v1) + v2), v3) + (((v4*v5) + v6)*2)) + 8) <= (((((((min(((v0*v1) + v2), v3) + (((v4*v5) + v6)*2)) - (((v0*8) + ((v4*v5) + v6))*2)) + 11)/4)*2) + ((v0*8) + ((v4*v5) + v6)))*2))
(((min(((v0*v1) + v2), v3) + -1) <= ((v0*v1) + (((min((v3 - (v0*v1)), v2) + 2)/4)*4))) && (((min((((v4 + v5)*2) - ((v6*v7) + v8)), v1) + (v6*v7)) + v8) <= min(((v4 + v5)*2), (((v6*v7) + v8) + v1))))
(((min(((v0*v1) + v2), v3) + -1) <= ((v0*v1) + (((min((v3 - (v0*v1)), v2) + 2)/4)*4))) && (((min((((v4 + v5)*2) - ((v6*v7) + v8)), v9) + (v6*v7)) + v8) <= min(((v4 + v5)*2), (((v6*v7) + v8) + v9))))
(((min(((v0*v1) + v2), v3) + -1) <= ((v0*v1) + (((min((v3 - (v0*v1)), v2) + 2)/4)*4))) && (((min(((v4 + v5) - ((v6*4) + v7)), -6) + (v6*4)) + 6) <= min((v6*4), (((v4 + v5) - v7) + 6))))
(((min(((v0*v1) + v2), v3) + -1) <= ((v0*v1) + (((min((v3 - (v0*v1)), v2) + 2)/4)*4))) && (((min(((v4 + v5) - ((v6*v7) + v8)), v7) + (v6*v7)) + v8) <= min((v4 + v5), (((v6*v7) + v8) + v7))))
(((min(((v0*v1) + v2), v3) + -1) <= ((v0*v1) + (((min((v3 - (v0*v1)), v2) + 2)/4)*4))) && (((min(((v4*2) - ((v5*v6) + v7)), v8) + (v5*v6)) + v7) <= min((v4*2), (((v5*v6) + v7) + v8))))
(((min(((v0*v1) + v2), v3) + -1) <= ((v0*v1) + (((min((v3 - (v0*v1)), v2) + 2)/4)*4))) && (((min((v4 - ((v5*v6) + v7)), -3) + (v5*v6)) + 3) <= min((v5*v6), ((v4 - v7) + 3))))
(((min(((v0*v1) + v2), v3) + -1) <= ((v0*v1) + (((min((v3 - (v0*v1)), v2) + 2)/4)*4))) && (((min((v4 - ((v5*v6) + v7)), 2) + (v5*v6)) + v7) <= min((((v5*v6) + v7) + 2), v4)))
(((min(((v0*v1) + v2), v3) + -1) <= ((v0*v1) + (((min((v3 - (v0*v1)), v2) + 2)/4)*4))) && (((min((v4 - ((v5*v6) + v7)), v8) + (v5*v6)) + v7) <= min((((v5*v6) + v7) + v8), v4)))
(((min(((v0*v1) + v2), v3) + -2) <= ((v0*v1) + (((min((v3 - (v0*v1)), v2) + 1)/4)*4))) && (((min(((v4 + v5) - ((v6*v7) + v8)), v9) + (v6*v7)) + v8) <= min((v4 + v5), (((v6*v7) + v8) + v9))))
(((min(((v0*v1) + v2), v3) + -3) <= ((v0*v1) + ((min((v3 - (v0*v1)), v2)/4)*4))) && (((min(((v4 + v5) - ((v6*4) + v7)), -2) + (v6*4)) + 2) <= min((v6*4), (((v4 + v5) - v7) + 2))))
(((min(((v0*v1) + v2), v3) + -3) <= ((v0*v1) + ((min((v3 - (v0*v1)), v2)/4)*4))) && (((min(((v4 + v5) - ((v6*4) + v7)), v8) + (v6*4)) + v7) <= min((v4 + v5), (((v6*4) + v7) + v8))))
(((min(((v0*v1) + v2), v3) + -3) <= ((v0*v1) + ((min((v3 - (v0*v1)), v2)/4)*4))) && (((min((v4 - ((v5*v6) + v7)), -5) + (v5*v6)) + 5) <= min((v5*v6), ((v4 - v7) + 5))))
(((min(((v0*v1) + v2), v3) + -3) <= ((v0*v1) + ((min((v3 - (v0*v1)), v2)/4)*4))) && (((min((v4 - ((v5*v6) + v7)), v6) + (v5*v6)) + v7) <= min((((v5*v6) + v7) + v6), v4)))
(((min(((v0*v1) + v2), v3) + 10) <= ((v0*v1) + (((min((v3 - (v0*v1)), v2) + 13)/4)*4))) && (((min((((v4 + v5)*v6) - ((v7*v8) + v9)), v10) + (v7*v8)) + v9) <= min(((v4 + v5)*v6), (((v7*v8) + v9) + v10))))
(((min(((v0*v1) + v2), v3) + 10) <= ((v0*v1) + (((min((v3 - (v0*v1)), v2) + 13)/4)*4))) && (((min(((v4*v5) - ((v6*4) + v7)), v8) + (v6*4)) + v7) <= min((v4*v5), (((v6*4) + v7) + v8))))
(((min(((v0*v1) + v2), v3) + 10) <= ((v0*v1) + (((min((v3 - (v0*v1)), v2) + 13)/4)*4))) && ((min(((v4 - (v5*2))*2), v6) + (v5*4)) <= min((v4*2), ((v5*4) + v6))))
(((min(((v0*v1) + v2), v3) + 12) <= ((v0*v1) + (((min((v3 - (v0*v1)), v2) + 15)/4)*4))) && (((min(((v4 + v5) - ((v6*v7) + v8)), v7) + (v6*v7)) + v8) <= min((v4 + v5), (((v6*v7) + v8) + v7))))
(((min(((v0*v1) + v2), v3) + 12) <= ((v0*v1) + (((min((v3 - (v0*v1)), v2) + 15)/4)*4))) && (((min((v4 - ((v5*v6) + v7)), v8) + (v5*v6)) + v7) <= min((((v5*v6) + v7) + v8), v4)))
(((min(((v0*v1) + v2), v3) + 3) <= ((v0*v1) + (((min((v3 - (v0*v1)), v2) + 6)/4)*4))) && (((min(((v4 - (v5*4))*2), -9) + (v5*8)) + 9) <= min((v5*8), ((v4*2) + 9))))
(((min(((v0*v1) + v2), v3) + 3) <= ((v0*v1) + (((min((v3 - (v0*v1)), v2) + 6)/4)*4))) && (((min((max(((((v4 + v5) + v6)/v7)*4), v8) - (((v9 + v10)*4) + v11)), -47) + ((v9 + v10)*4)) + 47) <= min(((v9 + v10)*4), ((max(((((v4 + v5) + v6)/v7)*4), v8) - v11) + 47))))
(((min(((v0*v1) + v2), v3) + 3) <= ((v0*v1) + (((min((v3 - (v0*v1)), v2) + 6)/4)*4))) && (((min((max(((((v4 + v5) + v6)/v7)*4), v8) - (((v9 + v10)*v11) + v12)), -49) + ((v9 + v10)*v11)) + 49) <= min(((v9 + v10)*v11), ((max(((((v4 + v5) + v6)/v7)*4), v8) - v12) + 49))))
(((min(((v0*v1) + v2), v3) + 4) <= ((v0*v1) + (((min((v3 - (v0*v1)), v2) + 7)/4)*4))) && (((min(((v4 + v5) - ((v6*v7) + v8)), -2) + (v6*v7)) + 2) <= min((v6*v7), (((v4 + v5) - v8) + 2))))
(((min(((v0*v1) + v2), v3) + 8) <= ((v0*v1) + (((min((v3 - (v0*v1)), v2) + 11)/4)*4))) && (((min(((v4*2) - ((v5*v6) + v7)), -2) + (v5*v6)) + 2) <= min((v5*v6), (((v4*2) - v7) + 2))))
(((min(((v0*v1) + v2), v3) + 8) <= ((v0*v1) + (((min((v3 - (v0*v1)), v2) + 11)/4)*4))) && ((min(((v4 - (v5*18))*2), v6) + (v5*36)) <= min((v4*2), ((v5*36) + v6))))
(((min(((v0*v1) - ((v2*v1) + v3)), v4) + (v2*v1)) + v3) <= min((v0*v1), (((v2*v1) + v3) + v4)))
(((min(((v0/v1)*v1), (v0 + -3)) + v2) + 3) <= min((((max(v0, 3)/v1)*v1) + (min(v0, 3) + v2)), (v0 + v2)))
(((min(((v0/v1)*v1), -26) + (v2 + v3)) + 26) <= (v2 + v3))
(((min((min((((v0*32) + (v1*v2)) + v3), v4) - v5), 32) + (v6 + v5)) + -32) <= (v6 + v5))
(((min((min((((v0*v1) + (v2*v3)) + 16), v4) - v5), 16) + (v6 + v5)) + -16) <= (v6 + v5))
(((min((min((((v0*v1) + (v2*v3)) + 16), v4) - v5), 16) + (v6 + v7)) + -16) <= (v6 + v7))
(((min((min((((v0*v1) + (v2*v3)) + 16), v4) - v5), 16) + v6) + -16) <= v6)
(((min((min((((v0*v1) + (v2*v3)) + 8), v4) - v5), 8) + (v6 + v5)) + -8) <= (v6 + v5))
(((min((min((((v0*v1) + (v2*v3)) + v4), v5) - v6), 2) + (v7 + v8)) + -2) <= (v7 + v8))
(((min((min((((v0*v1) + (v2*v3)) + v4), v5) - v6), 21) + (v7 + v8)) + -21) <= (v7 + v8))
(((min((min((((v0*v1) + (v2*v3)) + v4), v5) - v6), 24) + (v7 + v6)) + -24) <= (v7 + v6))
(((min((min((((v0*v1) + (v2*v3)) + v4), v5) - v6), 4) + (v7 + v8)) + -4) <= (v7 + v8))
(((min((min(((min((((v0*v1) + v2)*v3), v4) + (v5*v6)) + 8), v7) - v8), 8) + (v9 + v8)) + -8) <= (v9 + v8))
(((min((min(((min(((v0*v1) + (v2*v3)), v4) + (v5*v6)) + 8), v7) - v8), 8) + (v9 + v10)) + -8) <= (v9 + v10))
(((min((min(((min(((v0*v1) + (v2*v3)), v4) + (v5*v6)) + 8), v7) - v8), 8) + (v9 + v8)) + -8) <= (v9 + v8))
(((min((min(((min((min((v0*v1), v2) + (v3*v4)), v5) + (v6*v7)) + 16), v8) - v9), 16) + (v10 + v9)) + -16) <= (v10 + v9))
(((min((min(((min((min((v0*v1), v2) + (v3*v4)), v5) + (v6*v7)) + 8), v8) - v9), 8) + (v10 + v11)) + -8) <= (v10 + v11))
(((min((min(((min((min((v0*v1), v2) + (v3*v4)), v5) + (v6*v7)) + 8), v8) - v9), 8) + (v10 + v9)) + -8) <= (v10 + v9))
(((min((min(((min((min((v0*v1), v2) + (v3*v4)), v5) + (v6*v7)) + v8), v9) - v10), 15) + (v11 + v10)) + -15) <= (v11 + v10))
(((min((min(((min((min((v0*v1), v2) + (v3*v4)), v5) + (v6*v7)) + v8), v9) - v10), 24) + (v11 + v12)) + -24) <= (v11 + v12))
(((min((min(((min((v0*32), v1) + (v2*v3)) + v4), v5) - v6), 32) + (v7 + v6)) + -32) <= (v7 + v6))
(((min((min(((min((v0*v1), v2) + (v3*v4)) + 16), v5) - v6), 16) + (v7 + v6)) + -16) <= (v7 + v6))
(((min((min(((min((v0*v1), v2) + (v3*v4)) + 16), v5) - v6), 16) + (v7 + v8)) + -16) <= (v7 + v8))
(((min((min(((min((v0*v1), v2) + (v3*v4)) + 16), v5) - v6), 16) + v7) + -16) <= v7)
(((min((min(((min((v0*v1), v2) + (v3*v4)) + 32), v5) - v6), 32) + (v7 + v6)) + -32) <= (v7 + v6))
(((min((min(((min((v0*v1), v2) + (v3*v4)) + 32), v5) - v6), 32) + (v7 + v8)) + -32) <= (v7 + v8))
(((min((min(((min((v0*v1), v2) + (v3*v4)) + 61), v5) - v6), 61) + (v7 + v6)) + -61) <= (v7 + v6))
(((min((min(((min((v0*v1), v2) + (v3*v4)) + 8), v5) - v6), 8) + (v7 + v6)) + -8) <= (v7 + v6))
(((min((min(((min((v0*v1), v2) + (v3*v4)) + v5), v6) - v7), 13) + (v8 + v7)) + -13) <= (v8 + v7))
(((min((min(((min((v0*v1), v2) + (v3*v4)) + v5), v6) - v7), 13) + (v8 + v9)) + -13) <= (v8 + v9))
(((min((min(((min((v0*v1), v2) + (v3*v4)) + v5), v6) - v7), 14) + (v8 + v7)) + -14) <= (v8 + v7))
(((min((min(((min((v0*v1), v2) + (v3*v4)) + v5), v6) - v7), 2) + (v8 + v9)) + -2) <= (v8 + v9))
(((min((min(((min((v0*v1), v2) + (v3*v4)) + v5), v6) - v7), 21) + (v8 + v9)) + -21) <= (v8 + v9))
(((min((min(((min((v0*v1), v2) + (v3*v4)) + v5), v6) - v7), 24) + (v8 + v7)) + -24) <= (v8 + v7))
(((min((min(((min((v0*v1), v2) + (v3*v4)) + v5), v6) - v7), 27) + (v8 + v7)) + -27) <= (v8 + v7))
(((min((min(((min((v0*v1), v2) + (v3*v4)) + v5), v6) - v7), 39) + (v8 + v9)) + -39) <= (v8 + v9))
(((min((min(((min((v0*v1), v2) + (v3*v4)) + v5), v6) - v7), 4) + (v8 + v9)) + -4) <= (v8 + v9))
(((min((min(((min((v0*v1), v2) + (v3*v4)) + v5), v6) - v7), 48) + (v8 + v7)) + -48) <= (v8 + v7))
(((min((min(((min((v0*v1), v2) + (v3*v4)) + v5), v6) - v7), 48) + (v8 + v9)) + -48) <= (v8 + v9))
(((min((min(((min((v0*v1), v2) + (v3*v4)) + v5), v6) - v7), 55) + (v8 + v7)) + -55) <= (v8 + v7))
(((min((min(((min((v0*v1), v2) + (v3*v4)) + v5), v6) - v7), 56) + (v8 + v7)) + -56) <= (v8 + v7))
(((min((min(((min((v0*v1), v2) + (v3*v4)) + v5), v6) - v7), 56) + (v8 + v9)) + -56) <= (v8 + v9))
(((min((min(((min((v0*v1), v2) + (v3*v4)) + v5), v6) - v7), 64) + (v8 + v7)) + -64) <= (v8 + v7))
(((min((min(((min((v0*v1), v2) + (v3*v4)) + v5), v6) - v7), 7) + (v8 + v9)) + -7) <= (v8 + v9))
(((min((min(((min((v0*v1), v2) + (v3*v4)) + v5), v6) - v7), 96) + (v8 + v7)) + -96) <= (v8 + v7))
(((min((min(((v0 + v1) - ((v2*v3) + v4)), v3)*v5), 1) + (((v2*v3) + v4)*v5)) + -1) <= (((v2*v3) + v4)*v5))
(((min((min(((v0 + v1) - v2), v3) - ((((v0 + v1) - v2)/v4)*v4)), -1) + v2) + 1) <= v2)
(((min((min(((v0 + v1)*v2), (v3 + v4)) - (((((((v0 + v1)*v2) - v3) + v5)/v6)*v6) + v3)), -5) + v3) + 5) <= v3)
(((min((min(((v0*v1) + 16), v2) - max(min(((v0*v1) + v3), v2), ((v0*v1) + 109))), v4) + (v5 + v6)) + 6) <= (v5 + v6))
(((min((min(((v0*v1) + 16), v2) - max(min(((v0*v1) + v3), v2), ((v0*v1) + 45))), v4) + (v5 + v6)) + 6) <= (v5 + v6))
(((min((min(((v0*v1) + 32), v2) - max(min(((v0*v1) + v3), v2), ((v0*v1) + 81))), v4) + (v5 + v6)) + 5) <= (v5 + v6))
(((min((min(((v0*v1) + 32), v2) - max(min(((v0*v1) + v3), v2), ((v0*v1) + 85))), v4) + (v5 + v6)) + 6) <= (v5 + v6))
(((min((min(((v0*v1) + 32), v2) - max(min(((v0*v1) + v3), v2), ((v0*v1) + 86))), v4) + (v5 + v6)) + 13) <= (v5 + v6))
(((min((min(((v0*v1) + 32), v2) - max(min(((v0*v1) + v3), v2), ((v0*v1) + 86))), v4) + (v5 + v6)) + 8) <= (v5 + v6))
(((min((min((v0 + v1), (v2 + v3)) - ((((((v0 + v1) - v2) + v4)/v5)*v5) + v2)), -2) + v2) + 2) <= v2)
(((min((min((v0 + v1), (v2 + v3)) - ((((((v0 + v1) - v2) + v4)/v5)*v5) + v2)), -7) + v2) + 7) <= v2)
(((min((min((v0 - (((v1*v2) + v3)*v4)), v4)*v2), 1) + (((((v1*v2) + v3)*v4) + v5)*v2)) + -1) <= (((((v1*v2) + v3)*v4) + v5)*v2))
(((min((min((v0 - (((v1*v2) + v3)*v4)), v5)*v2), -41) + (((((v1*v2) + v3)*v4) + v6)*v2)) + 41) <= (((((v1*v2) + v3)*v4) + v6)*v2))
(((min((min((v0 - (v1*v2)), v2)*v3), 1) + (((v1*v2) + v4)*v3)) + -1) <= (((v1*v2) + v4)*v3))
(((min((min((v0 - (v1*v2)), v3) - ((((v4 - v5) + v6)/v7)*v7)), 53) + (v8 + v5)) + -53) <= (v8 + v5))
(((min((min((v0 - v1), v2) - ((((v0 - v1) + v3)/v2)*v2)), -5) + (v1 + v4)) + 5) <= (v1 + v4))
(((min((min((v0 - v1), v2) - ((((v0 - v1) + v3)/v2)*v2)), -9) + (v1 + v4)) + 9) <= (v1 + v4))
(((min((min((v0 - v1), v2) - ((((v0 - v1) + v3)/v2)*v2)), 8) + (v1 + v4)) + -8) <= (v1 + v4))
(((min((min((v0 - v1), v2) - ((((v0 - v1) + v3)/v4)*v4)), -12) + (v1 + v5)) + 12) <= (v1 + v5))
(((min((min((v0*v1), (v2 + -4)) + v3), (min(((((v4 + v5)/4)*4) + ((v0*v1) + v3)), (v2 + v3)) + -7))/2) <= (min((min((v0*v1), (v2 + -4)) + v3), (min(((((v4 + v5)/4)*4) + ((v0*v1) + v3)), (v2 + v3)) + -4))/2)) && (((min((((((min(((((v4 + v5)/4)*4) + ((v0*v1) + v3)), (v2 + v3)) - (min((v0*v1), (v2 + -4)) + v3)) + -1)/4)*4) + (min((v0*v1), (v2 + -4)) + v3)), (min(((((v4 + v5)/4)*4) + ((v0*v1) + v3)), (v2 + v3)) + -4)) + -3)/2) <= min(((min(((((v4 + v5)/4)*4) + ((v0*v1) + v3)), (v2 + v3)) + -7)/2), (((min((v0*v1), (v2 + -4)) + v3)/2) + (((((min(((((v4 + v5)/4)*4) + ((v0*v1) + v3)), (v2 + v3)) + -1)/2) - ((min((v0*v1), (v2 + -4)) + v3)/2))/4)*4)))))
(((min((min((v0*v1), (v2 + -4)) + v3), (min(((v4*4) + ((v0*v1) + v3)), (v2 + v3)) + -7))/2) <= (min((min((v0*v1), (v2 + -4)) + v3), (min(((v4*4) + ((v0*v1) + v3)), (v2 + v3)) + -4))/2)) && (((min((((((min(((v4*4) + ((v0*v1) + v3)), (v2 + v3)) - (min((v0*v1), (v2 + -4)) + v3)) + -1)/4)*4) + (min((v0*v1), (v2 + -4)) + v3)), (min(((v4*4) + ((v0*v1) + v3)), (v2 + v3)) + -4)) + -3)/2) <= min(((min(((v4*4) + ((v0*v1) + v3)), (v2 + v3)) + -7)/2), (((min((v0*v1), (v2 + -4)) + v3)/2) + (((((min(((v4*4) + ((v0*v1) + v3)), (v2 + v3)) + -1)/2) - ((min((v0*v1), (v2 + -4)) + v3)/2))/4)*4)))))
(((min((min(v0, 14) - (((min(v0, v1) + v2)/v3)*v3)), 14) + ((v4*v1) + v5)) + -14) <= ((v4*v1) + v5))
(((min((min(v0, v1) - (((min(v0, v2) + v3)/8)*8)), -8) + ((v4*v2) + v5)) + 8) <= ((v4*v2) + v5))
(((min((min(v0, v1) - (((min(v0, v2) + v3)/v1)*v1)), -10) + ((v4*v2) + v5)) + 10) <= ((v4*v2) + v5))
(((min((min(v0, v1) - (((min(v0, v2) + v3)/v1)*v1)), -11) + ((v4*v2) + v5)) + 11) <= ((v4*v2) + v5))
(((min((min(v0, v1) - (((min(v0, v2) + v3)/v1)*v1)), -14) + ((v4*v2) + v5)) + 14) <= ((v4*v2) + v5))
(((min((min(v0, v1) - (((min(v0, v2) + v3)/v4)*v4)), -17) + ((v5*v2) + v6)) + 17) <= ((v5*v2) + v6))
(((min((min(v0, v1) - (v2*v1)), -21) + ((v3*v4) + v5)) + 21) <= ((v3*v4) + v5))
(((min((min(v0, v1) - (v2*v1)), -30) + ((v3*v4) + v5)) + 30) <= ((v3*v4) + v5))
(((min((min(v0, v1) - (v2*v3)), -22) + ((((v4*v5) + v6)*v7) + v8)) + 22) <= ((((v4*v5) + v6)*v7) + v8))
(((min((min(v0, v1) - max((v2*8), (min(min(((v2*8) + v3), v0), v4) + 8))), -8) + v5) + 8) <= v5)
(((min((min(v0, v1)*v2), 1) + (((v3*v1) + v4)*v2)) + -1) <= (((v3*v1) + v4)*v2))
(((min((v0 + v1), v2) + v0) + v3) <= (max(min((v4*v3), (((((v5 + v6) + v7)/v8)*v3) + v9)), (v0 + v3)) + v2))
(((min((v0 - ((((v1 + v2)*2) + v3)*v4)), -2) + (((((v1 + v2)*2) + v3)*v4) + v5)) + 2) <= (((((v1 + v2)*2) + v3)*v4) + v5))
(((min((v0 - (((v1*v2) + v3)*v4)), -4) + ((((v1*v2) + v3)*v4) + v5)) + 4) <= ((((v1*v2) + v3)*v4) + v5))
(((min((v0 - (((v1*v2) + v3)*v4)), -5) + v5) + 5) <= v5)
(((min((v0 - (((v1*v2) + v3)*v4)), -9) + ((((v1*v2) + v3)*v4) + v5)) + 9) <= ((((v1*v2) + v3)*v4) + v5))
(((min((v0 - (((v1*v2) + v3)*v4)), 16) + ((((v1*v2) + v3)*v4) + v5)) + -234) <= ((((v1*v2) + v3)*v4) + v5))
(((min((v0 - (((v1*v2) + v3)*v4)), 32) + ((((v1*v2) + v3)*v4) + v5)) + -189) <= ((((v1*v2) + v3)*v4) + v5))
(((min((v0 - (((v1*v2) + v3)*v4)), 32) + ((((v1*v2) + v3)*v4) + v5)) + -92) <= ((((v1*v2) + v3)*v4) + v5))
(((min((v0 - (((v1*v2) + v3)*v4)), 32) + v5) + -95) <= v5)
(((min((v0 - (((v1*v2) + v3)*v4)), 4) + ((((v1*v2) + v3)*v4) + v5)) + -12) <= ((((v1*v2) + v3)*v4) + v5))
(((min((v0 - (((v1*v2) + v3)*v4)), 8) + ((((v1*v2) + v3)*v4) + v5)) + -8) <= ((((v1*v2) + v3)*v4) + v5))
(((min((v0 - ((v1*2) + v2)), -2) + (v1*2)) + 2) <= min((v1*2), ((v0 - v2) + 2)))
(((min((v0 - ((v1*4) + v2)), -4) + (v1*4)) + 4) <= min((v1*4), ((v0 - v2) + 4)))
(((min((v0 - ((v1*4) + v2)), 1) + (v1*4)) + v2) <= min((((((min((v0 - ((v1*4) + v2)), 1) + 2)/4)*4) + ((v1*4) + v2)) + 1), v0))
(((min((v0 - ((v1*v2) + v3)), (min((((v4*v5) + v6)*v5), v7) + v5)) + (v1*v2)) + v3) <= min((((min((((v4*v5) + v6)*v5), v7) + (v1*v2)) + v3) + v5), v0))
(((min((v0 - ((v1*v2) + v3)), -1) + (v1*v2)) + 1) <= min((v1*v2), ((v0 - v3) + 1)))
(((min((v0 - ((v1*v2) + v3)), -11) + (v1*v2)) + 11) <= min((v1*v2), ((v0 - v3) + 11)))
(((min((v0 - ((v1*v2) + v3)), -12) + (v1*v2)) + 12) <= min((v1*v2), ((v0 - v3) + 12)))
(((min((v0 - ((v1*v2) + v3)), -14) + (v1*v2)) + 14) <= min((v1*v2), ((v0 - v3) + 14)))
(((min((v0 - ((v1*v2) + v3)), -15) + (v1*v2)) + 15) <= min((v1*v2), ((v0 - v3) + 15)))
(((min((v0 - ((v1*v2) + v3)), -16) + (v1*v2)) + 16) <= min((v1*v2), ((v0 - v3) + 16)))
(((min((v0 - ((v1*v2) + v3)), -18) + (v1*v2)) + 18) <= min((v1*v2), ((v0 - v3) + 18)))
(((min((v0 - ((v1*v2) + v3)), -2) + (v1*v2)) + 2) <= min((v1*v2), ((v0 - v3) + 2)))
(((min((v0 - ((v1*v2) + v3)), -20) + (v1*v2)) + 20) <= min((v1*v2), ((v0 - v3) + 20)))
(((min((v0 - ((v1*v2) + v3)), -3) + (v1*v2)) + 3) <= min((v1*v2), ((v0 - v3) + 3)))
(((min((v0 - ((v1*v2) + v3)), -4) + (v1*v2)) + 4) <= min((v1*v2), ((v0 - v3) + 4)))
(((min((v0 - ((v1*v2) + v3)), -5) + (v1*v2)) + 5) <= min((v1*v2), ((v0 - v3) + 5)))
(((min((v0 - ((v1*v2) + v3)), -6) + (v1*v2)) + 6) <= min((v1*v2), ((v0 - v3) + 6)))
(((min((v0 - ((v1*v2) + v3)), -8) + (v1*v2)) + 8) <= min((v1*v2), ((v0 - v3) + 8)))
(((min((v0 - ((v1*v2) + v3)), -9) + (v1*v2)) + 9) <= min((v1*v2), ((v0 - v3) + 9)))
(((min((v0 - ((v1*v2) + v3)), 0) + (v1*v2)) + v3) <= min(((v1*v2) + v3), v0))
(((min((v0 - ((v1*v2) + v3)), v2) + (v1*v2)) + v3) <= min((((v1*v2) + v3) + v2), v0))
(((min((v0 - ((v1*v2) + v3)), v2) + (v1*v2)) <= min((v0 - v3), ((v1*v2) + v2))) && (select((v4 < v5), min((((v6*v2) + v5)*v7), v8), (((v6*v2) + v5)*v7)) <= (((v6*v2) + v5)*v7)))
(((min((v0 - ((v1*v2) + v3)), v2) + (v1*v2)) <= min((v0 - v3), ((v1*v2) + v2))) && (select((v4 < v5), min((((v6*v7) + v5)*v8), v9), (((v6*v7) + v5)*v8)) <= (((v6*v7) + v5)*v8)))
(((min((v0 - ((v1*v2) + v3)), v4) + (v1*v2)) + v3) <= min((((v1*v2) + v3) + v4), v0))
(((min((v0 - (v1*v2)), -11) + ((v1*v2) + v3)) + 11) <= ((v1*v2) + v3))
(((min((v0 - (v1*v2)), -12) + ((v1*v2) + v3)) + 12) <= ((v1*v2) + v3))
(((min((v0 - (v1*v2)), -13) + ((v1*v2) + v3)) + 13) <= ((v1*v2) + v3))
(((min((v0 - (v1*v2)), -15) + ((v1*v2) + v3)) + 15) <= ((v1*v2) + v3))
(((min((v0 - (v1*v2)), -28) + ((v1*v2) + v3)) + 28) <= ((v1*v2) + v3))
(((min((v0 - (v1*v2)), -4) + ((v1*v2) + v3)) + -12) <= ((v1*v2) + v3))
(((min((v0 - (v1*v2)), -4) + ((v1*v2) + v3)) + 4) <= ((v1*v2) + v3))
(((min((v0 - (v1*v2)), -5) + ((v1*v2) + v3)) + 5) <= ((v1*v2) + v3))
(((min((v0 - (v1*v2)), -5) + v3) + 5) <= v3)
(((min((v0 - (v1*v2)), -6) + ((v1*v2) + v3)) + 6) <= ((v1*v2) + v3))
(((min((v0 - (v1*v2)), -7) + ((v1*v2) + v3)) + 7) <= ((v1*v2) + v3))
(((min((v0 - (v1*v2)), -8) + ((v1*v2) + v3)) + 8) <= ((v1*v2) + v3))
(((min((v0 - (v1*v2)), -8) + v3) + 8) <= v3)
(((min((v0 - (v1*v2)), -9) + ((v1*v2) + v3)) + 9) <= ((v1*v2) + v3))
(((min((v0 - (v1*v2)), 16) + ((v1*v2) + v3)) + -103) <= ((v1*v2) + v3))
(((min((v0 - (v1*v2)), 16) + ((v1*v2) + v3)) + -107) <= ((v1*v2) + v3))
(((min((v0 - (v1*v2)), 16) + ((v1*v2) + v3)) + -108) <= ((v1*v2) + v3))
(((min((v0 - (v1*v2)), 16) + ((v1*v2) + v3)) + -110) <= ((v1*v2) + v3))
(((min((v0 - (v1*v2)), 16) + ((v1*v2) + v3)) + -111) <= ((v1*v2) + v3))
(((min((v0 - (v1*v2)), 16) + ((v1*v2) + v3)) + -112) <= ((v1*v2) + v3))
(((min((v0 - (v1*v2)), 16) + ((v1*v2) + v3)) + -16) <= ((v1*v2) + v3))
(((min((v0 - (v1*v2)), 16) + ((v1*v2) + v3)) + -38) <= ((v1*v2) + v3))
(((min((v0 - (v1*v2)), 16) + ((v1*v2) + v3)) + -41) <= ((v1*v2) + v3))
(((min((v0 - (v1*v2)), 16) + ((v1*v2) + v3)) + -44) <= ((v1*v2) + v3))
(((min((v0 - (v1*v2)), 16) + ((v1*v2) + v3)) + -45) <= ((v1*v2) + v3))
(((min((v0 - (v1*v2)), 16) + ((v1*v2) + v3)) + -48) <= ((v1*v2) + v3))
(((min((v0 - (v1*v2)), 16) + ((v1*v2) + v3)) + -89) <= ((v1*v2) + v3))
(((min((v0 - (v1*v2)), 16) + ((v1*v2) + v3)) + -94) <= ((v1*v2) + v3))
(((min((v0 - (v1*v2)), 16) + ((v1*v2) + v3)) + -96) <= ((v1*v2) + v3))
(((min((v0 - (v1*v2)), 16) + (v3 + v4)) + -48) <= (v3 + v4))
(((min((v0 - (v1*v2)), 16) + (v3 + v4)) + -96) <= (v3 + v4))
(((min((v0 - (v1*v2)), 23) + (v3 + v4)) + -23) <= (v3 + v4))
(((min((v0 - (v1*v2)), 28) + ((v1*v2) + v3)) + -28) <= ((v1*v2) + v3))
(((min((v0 - (v1*v2)), 28) + (v3 + v4)) + -28) <= (v3 + v4))
(((min((v0 - (v1*v2)), 29) + (v3 + v4)) + -29) <= (v3 + v4))
(((min((v0 - (v1*v2)), 3) + (v3 + v4)) + -3) <= (v3 + v4))
(((min((v0 - (v1*v2)), 30) + (v3 + v4)) + -30) <= (v3 + v4))
(((min((v0 - (v1*v2)), 32) + ((v1*v2) + v3)) + -190) <= ((v1*v2) + v3))
(((min((v0 - (v1*v2)), 32) + ((v1*v2) + v3)) + -32) <= ((v1*v2) + v3))
(((min((v0 - (v1*v2)), 32) + ((v1*v2) + v3)) + -63) <= ((v1*v2) + v3))
(((min((v0 - (v1*v2)), 32) + ((v1*v2) + v3)) + -64) <= ((v1*v2) + v3))
(((min((v0 - (v1*v2)), 32) + ((v1*v2) + v3)) + -76) <= ((v1*v2) + v3))
(((min((v0 - (v1*v2)), 32) + ((v1*v2) + v3)) + -78) <= ((v1*v2) + v3))
(((min((v0 - (v1*v2)), 32) + ((v1*v2) + v3)) + -81) <= ((v1*v2) + v3))
(((min((v0 - (v1*v2)), 32) + ((v1*v2) + v3)) + -92) <= ((v1*v2) + v3))
(((min((v0 - (v1*v2)), 32) + ((v1*v2) + v3)) + -95) <= ((v1*v2) + v3))
(((min((v0 - (v1*v2)), 32) + ((v1*v2) + v3)) + -96) <= ((v1*v2) + v3))
(((min((v0 - (v1*v2)), 4) + ((v1*v2) + v3)) + -124) <= ((v1*v2) + v3))
(((min((v0 - (v1*v2)), 42) + (v3 + v4)) + -42) <= (v3 + v4))
(((min((v0 - (v1*v2)), 45) + (v3 + v4)) + -45) <= (v3 + v4))
(((min((v0 - (v1*v2)), 50) + ((v1*v2) + v3)) + -50) <= ((v1*v2) + v3))
(((min((v0 - (v1*v2)), 55) + (v3 + v4)) + -55) <= (v3 + v4))
(((min((v0 - (v1*v2)), 63) + ((v1*v2) + v3)) + -63) <= ((v1*v2) + v3))
(((min((v0 - (v1*v2)), 7) + ((v1*v2) + v3)) + -7) <= ((v1*v2) + v3))
(((min((v0 - (v1*v2)), 8) + ((v1*v2) + v3)) + -119) <= ((v1*v2) + v3))
(((min((v0 - (v1*v2)), 8) + ((v1*v2) + v3)) + -24) <= ((v1*v2) + v3))
(((min((v0 - (v1*v2)), 8) + ((v1*v2) + v3)) + -56) <= ((v1*v2) + v3))
(((min((v0 - (v1*v2)), 8) + ((v1*v2) + v3)) + -8) <= ((v1*v2) + v3))
(((min((v0 - (v1*v2)), 8) + (v3 + v4)) + -120) <= (v3 + v4))
(((min((v0 - v1), -1) + (v2 + v1)) + 1) <= (v2 + v1))
(((min((v0 - v1), -10) + (min(v2, v3) + v1)) + 10) <= (min(v2, v3) + v1))
(((min((v0 - v1), -10) + (v2 + v1)) + 10) <= (v2 + v1))
(((min((v0 - v1), -11) + (v2 + v1)) + 11) <= (v2 + v1))
(((min((v0 - v1), -12) + (((v2*v3) + v4) + v1)) + 12) <= (((v2*v3) + v4) + v1))
(((min((v0 - v1), -12) + (v2 + v1)) + 12) <= (v2 + v1))
(((min((v0 - v1), -13) + (v2 + v1)) + 13) <= (v2 + v1))
(((min((v0 - v1), -14) + (v2 + v1)) + 14) <= (v2 + v1))
(((min((v0 - v1), -17) + (v2 + v1)) + 17) <= (v2 + v1))
(((min((v0 - v1), -18) + (v2 + v1)) + 18) <= (v2 + v1))
(((min((v0 - v1), -2) + (v2 + v1)) + 2) <= (v2 + v1))
(((min((v0 - v1), -24) + (v2 + v1)) + 24) <= (v2 + v1))
(((min((v0 - v1), -4) + (v2 + v1)) + 4) <= (v2 + v1))
(((min((v0 - v1), -5) + (((v2*v3) + v4) + v1)) + 5) <= (((v2*v3) + v4) + v1))
(((min((v0 - v1), -5) + (v2 + v1)) + 5) <= (v2 + v1))
(((min((v0 - v1), -6) + (((v2*v3) + v4) + v1)) + 6) <= (((v2*v3) + v4) + v1))
(((min((v0 - v1), -6) + (v2 + v1)) + 6) <= (v2 + v1))
(((min((v0 - v1), -7) + (v2 + v1)) + 7) <= (v2 + v1))
(((min((v0 - v1), -8) + (((v2*v3) + v4) + v1)) + 8) <= (((v2*v3) + v4) + v1))
(((min((v0 - v1), -8) + (v2 + v1)) + 8) <= (v2 + v1))
(((min((v0 - v1), -9) + (((v2*v3) + v4) + v1)) + 9) <= (((v2*v3) + v4) + v1))
(((min((v0 - v1), -9) + (v2 + v1)) + 9) <= (v2 + v1))
(((min((v0 - v1), 16) + (v2 + v1)) + -16) <= (v2 + v1))
(((min((v0 - v1), 16) + (v2 + v3)) + -16) <= (v2 + v3))
(((min((v0*2), ((((((v1*v2) + v3)/v4) + ((v5/2)*2))*2) + v6)) + -1) <= (min(((((v1*v2) + v3)/v4)*2), ((v0*2) + v7)) + (((min((v0*2), ((((((v1*v2) + v3)/v4) + ((v5/2)*2))*2) + v6)) - min(((((v1*v2) + v3)/v4)*2), ((v0*2) + v7)))/2)*2))) && (((min((v8 - ((v9*2) + v10)), -10) + (v9*2)) + 10) <= min((v9*2), ((v8 - v10) + 10))))
(((min((v0*2), (((((v1 + v2)/v3) + ((v4/2)*2))*2) + 3)) + -1) <= (min((((v1 + v2)/v3)*2), ((v0*2) + v5)) + (((min((v0*2), (((((v1 + v2)/v3) + ((v4/2)*2))*2) + 3)) - min((((v1 + v2)/v3)*2), ((v0*2) + v5)))/2)*2))) && (((min((v6 - ((v7*3) + v8)), -3) + (v7*3)) + 3) <= min((v7*3), ((v6 - v8) + 3))))
(((min((v0*2), (((((v1 + v2)/v3) + ((v4/2)*2))*2) + v5)) + -1) <= (min((((v1 + v2)/v3)*2), ((v0*2) + v6)) + (((min((v0*2), (((((v1 + v2)/v3) + ((v4/2)*2))*2) + v5)) - min((((v1 + v2)/v3)*2), ((v0*2) + v6)))/2)*2))) && (((min((v7 - ((v8*2) + v9)), 2) + (v8*2)) + v9) <= min((((v8*2) + v9) + 2), v7)))
(((min((v0*2), ((((v1*2) + v2)*16) + 1)) + (((v3*v4) + v5)*2)) + -1) <= (((((v1*2) + v2)*8) + ((v3*v4) + v5))*2))
(((min((v0*2), ((v1*16) + 1)) + (v2*2)) + -1) <= (((v1*8) + v2)*2))
(((min((v0*2), ((v1*v2) + v3)) + ((((v4*v5) + v6)/4)*2)) + 6) <= (((((((min((v0*2), ((v1*v2) + v3)) + ((((v4*v5) + v6)/4)*2)) - (((((v4*v5) + v6)/4) + (v1*v7))*2)) + 9)/4)*2) + ((((v4*v5) + v6)/4) + (v1*v7)))*2))
(((min((v0*2), ((v1*v2) + v3)) + (((v4*v2) + v5)*2)) + 3) <= (((((((min((v0*2), ((v1*v2) + v3)) + (((v4*v2) + v5)*2)) - (((v1*v6) + ((v4*v2) + v5))*2)) + 6)/4)*2) + ((v1*v6) + ((v4*v2) + v5)))*2))
(((min((v0*2), ((v1*v2) + v3)) + (((v4*v5) + v6)*2)) + -1) <= (((((((min((v0*2), ((v1*v2) + v3)) + (((v4*v5) + v6)*2)) - (((v1*v7) + ((v4*v5) + v6))*2)) + 2)/4)*2) + ((v1*v7) + ((v4*v5) + v6)))*2))
(((min((v0*2), ((v1*v2) + v3)) + (((v4*v5) + v6)*2)) + -3) <= ((((((min((v0*2), ((v1*v2) + v3)) + (((v4*v5) + v6)*2)) - (((v1*v7) + ((v4*v5) + v6))*2))/4)*2) + ((v1*v7) + ((v4*v5) + v6)))*2))
(((min((v0*2), ((v1*v2) + v3)) + (((v4*v5) + v6)*2)) + 26) <= (((((((min((v0*2), ((v1*v2) + v3)) + (((v4*v5) + v6)*2)) - (((v1*v7) + ((v4*v5) + v6))*2)) + 29)/4)*2) + ((v1*v7) + ((v4*v5) + v6)))*2))
(((min((v0*2), ((v1*v2) + v3)) + (((v4*v5) + v6)*2)) + 48) <= (((((((min((v0*2), ((v1*v2) + v3)) + (((v4*v5) + v6)*2)) - (((v1*v7) + ((v4*v5) + v6))*2)) + 51)/4)*2) + ((v1*v7) + ((v4*v5) + v6)))*2))
(((min((v0*2), ((v1*v2) + v3)) + ((v4 + v5)*2)) + 30) <= (((((((min((v0*2), ((v1*v2) + v3)) + ((v4 + v5)*2)) - (((v1*v6) + (v4 + v5))*2)) + 33)/4)*2) + ((v1*v6) + (v4 + v5)))*2))
(((min((v0*2), ((v1*v2) + v3)) + 4) <= ((v1*v2) + (((min(((v0*2) - (v1*v2)), v3) + 7)/4)*4))) && (((min(((v4 + v5) - ((v6*v7) + v8)), -2) + (v6*v7)) + 2) <= min((v6*v7), (((v4 + v5) - v8) + 2))))
(((min((v0*8), (((v1 - v2)*2) + v3)) + (v2*2)) + 8) <= (((((((min((v0*8), (((v1 - v2)*2) + v3)) + (v2*2)) - (((v0*4) + v2)*2)) + 11)/4)*2) + ((v0*4) + v2))*2))
(((min((v0*v1), ((((v2*v1) + ((v3*v4) + v5))*v1) + v6)) + 26) <= (min((((v3*v4) + v5)*v1), ((v0*v1) + v7)) + ((((min((v0*v1), ((((v2*v1) + ((v3*v4) + v5))*v1) + v6)) - min((((v3*v4) + v5)*v1), ((v0*v1) + v7))) + 29)/4)*4))) && (((min(((v8 + v9) - ((v10*v11) + v12)), v11) + (v10*v11)) + v12) <= min((v8 + v9), (((v10*v11) + v12) + v11))))
(((min((v0*v1), ((min((v2*v3), v4) + (v5*v6)) + v7)) + -5) <= (((((min((v0*v1), ((min((v2*v3), v4) + (v5*v6)) + v7)) - ((v5*v6) + (v2*v3))) + -2)/4)*4) + ((v5*v6) + (v2*v3)))) && (((min(((v8 + v9) - ((v10*v11) + v12)), v11) + (v10*v11)) + v12) <= min((v8 + v9), (((v10*v11) + v12) + v11))))
(((min((v0*v1), ((min((v2*v3), v4) + (v5*v6)) + v7)) + 18) <= (((((min((v0*v1), ((min((v2*v3), v4) + (v5*v6)) + v7)) - ((v5*v6) + (v2*v3))) + 21)/4)*4) + ((v5*v6) + (v2*v3)))) && (((min(((v8 + v9) - ((v10*4) + v11)), 4) + (v10*4)) + v11) <= min((v8 + v9), (((v10*4) + v11) + 4))))
(((min((v0*v1), ((min((v2*v3), v4) + (v5*v6)) + v7)) + 3) <= (((((min((v0*v1), ((min((v2*v3), v4) + (v5*v6)) + v7)) - ((v5*v6) + (v2*v3))) + 6)/4)*4) + ((v5*v6) + (v2*v3)))) && (((min(((v8 + v9) - ((v10*v11) + v12)), v11) + (v10*v11)) + v12) <= min((v8 + v9), (((v10*v11) + v12) + v11))))
(((min((v0*v1), ((v2*2) + v3)) + (((v4*v1) + v5)*2)) + 4) <= (((((((min((v0*v1), ((v2*2) + v3)) + (((v4*v1) + v5)*2)) - (((v0*4) + ((v4*v1) + v5))*2)) + 7)/4)*2) + ((v0*4) + ((v4*v1) + v5)))*2))
(((min((v0*v1), ((v2*v3) + v4)) + 4) <= ((v2*v3) + (((min(((v0*v1) - (v2*v3)), v4) + 7)/4)*4))) && (((min(((v5 + v6) - ((v7*v8) + v9)), v10) + (v7*v8)) + v9) <= min((v5 + v6), (((v7*v8) + v9) + v10))))
(((min((v0*v1), (min(((v0*v1) + v1), v2) + v3)) + v4)/4) <= (((v0*v1) + v4)/4))
(((min((v0*v1), 1) + ((v2 + v3)*v1)) + -1) <= ((v2 + v3)*v1))
(((min((v0*v1), v2) + v3)/4) <= ((v2 + v3)/4))
(((min(min(((((min(((v0*v1) + 16), v2) + v3)/v4) - (v0*v5))*v4), v6), 16) + ((v0*v1) + v7)) + -28) <= ((v0*v1) + v7))
(((min(min(((((v0 + v1)/v2)*v2) + v3), v4), 5) + (v5*v6)) + -5) <= (v5*v6))
(((min(min((((v0 + v1)/v2)*v2), (v3 + 4)), 4) + v4) + -4) <= v4)
(((min(min((((v0 + v1)/v2)*v2), (v3 + v4)), 4) + ((v5*v6) + v7)) + -4) <= ((v5*v6) + v7))
(((min(min((((v0 + v1)/v2)*v2), v3), 4) + ((v4*v5) + v6)) + -4) <= ((v4*v5) + v6))
(((min(select((v0 < (v1 + v2)), min((v1 - v0), v3), -1), -1) + (v0 + v4)) + 1) <= (v0 + v4))
(((min(select((v0 < v1), min(v2, v3), -3), -3) + ((((v4*v5) + v6)*v7) + v8)) + 3) <= ((((v4*v5) + v6)*v7) + v8))
(((min(select((v0 < v1), min(v2, v3), -3), -3) + ((v4*v5) + v6)) + 3) <= ((v4*v5) + v6))
(((min(select((v0 < v1), min(v2, v3), -4), -4) + ((v4*v5) + v6)) + 4) <= ((v4*v5) + v6))
(((min(v0, -1) + ((v1*v2) + v3)) + 1) <= ((v1*v2) + v3))
(((min(v0, -13) + ((v1*v2) + v3)) + 13) <= ((v1*v2) + v3))
(((min(v0, -15) + v1) + 15) <= v1)
(((min(v0, -3) + v1) + 3) <= v1)
(((min(v0, -4) + ((v1*v2) + v3)) + 4) <= ((v1*v2) + v3))
(((min(v0, -4) + (v1 + v2)) + 4) <= (v1 + v2))
(((min(v0, -7) + ((v1*v2) + v3)) + 7) <= ((v1*v2) + v3))
(((min(v0, -8) + ((v1*v2) + v3)) + 8) <= ((v1*v2) + v3))
(((min(v0, 1) + v1) + -1) <= v1)
(((min(v0, 16) + ((v1*v2) + v3)) + -112) <= ((v1*v2) + v3))
(((min(v0, 16) + ((v1*v2) + v3)) + -16) <= ((v1*v2) + v3))
(((min(v0, 16) + ((v1*v2) + v3)) + -48) <= ((v1*v2) + v3))
(((min(v0, 32) + ((v1*v2) + v3)) + -32) <= ((v1*v2) + v3))
(((min(v0, 32) + ((v1*v2) + v3)) + -92) <= ((v1*v2) + v3))
(((min(v0, 32) + ((v1*v2) + v3)) + -96) <= ((v1*v2) + v3))
(((min(v0, 4) + ((v1*v2) + v3)) + -4) <= ((v1*v2) + v3))
(((min(v0, 4) + v1) + -4) <= v1)
(((min(v0, 50) + ((v1*v2) + v3)) + -50) <= ((v1*v2) + v3))
(((min(v0, 63) + ((v1*v2) + v3)) + -63) <= ((v1*v2) + v3))
(((min(v0, v1) + v2)/4) <= ((v1 + v2)/4))
(((select((v0 < v1), min(v2, -1), -1) + ((v3*v4) + v5)) + 1) <= ((v3*v4) + v5))
(((v0 + -3) <= ((((v0 - v1)/4)*4) + v1)) && (select((v2 < v3), min(v4, v5), v5) <= v5))
(((v0 + -4) <= (((((v0 - v1) + -1)/4)*4) + v1)) && ((v2 + -2) <= (((((v2 - v3) + 5)/8)*8) + v3)))
(((v0 + -4) <= (((((v0 - v1) + -1)/4)*4) + v1)) && (select((v2 < v3), min((((v4*v5) + v3)*v6), (v7 + v8)), (((v4*v5) + v3)*v6)) <= (((v4*v5) + v3)*v6)))
(((v0 + 2) <= (min(v0, 4) + (((max(v0, 4) + -1)/2)*2))) && (((min((v1 - ((v2*2) + v3)), 2) + (v2*2)) + v3) <= min((((v2*2) + v3) + 2), v1)))
(((v0 + 3) <= (min(v0, 4) + (((max(v0, 4) + 2)/4)*4))) && (((min((v1 - ((v2*2) + v3)), v4) + (v2*2)) + v3) <= min((((v2*2) + v3) + v4), v1)))
(((v0 + 3) <= (min(v0, 4) + (((max(v0, 4) + 2)/4)*4))) && (((min((v1 - ((v2*4) + v3)), 3) + (v2*4)) + v3) <= min((((v2*4) + v3) + 3), v1)))
(((v0 + v1)/2) <= ((max(((min((v2 - ((v3*v4) + v5)), (min(v6, v7) + v8)) + (v3*v4)) + v5), v0) + v1)/2))
(((v0 <= (((min((((v0 + 7)/4)*4), (v0 + 4)) + -1)/4)*4)) && (select((v1 < v2), min(max((v3 + v4), v5), (((v2 + v6)*4) + v7)), (((v2 + v6)*4) + v7)) <= (((v2 + v6)*4) + v7))) && (((min((max((v3 + v4), v5) - (((v2 + v6)*4) + v7)), 4) + ((v2 + v6)*4)) + v7) <= min(max((v3 + v4), v5), ((((v2 + v6)*4) + v7) + 4))))
(((v0 <= (((min((((v0 + 7)/4)*4), (v0 + 4)) + -1)/4)*4)) && (select((v1 < v2), min(max((v3 + v4), v5), (((v2 + v6)*v7) + v8)), (((v2 + v6)*v7) + v8)) <= (((v2 + v6)*v7) + v8))) && (((min((max((v3 + v4), v5) - (((v2 + v6)*v7) + v8)), v7) + ((v2 + v6)*v7)) + v8) <= min(max((v3 + v4), v5), ((((v2 + v6)*v7) + v8) + v7))))
(((v0*4) + -8) <= (((v0 + -1)/2)*8))
((max(((((((v0*v1) + v2) + v3)*v4) - v5)/8), 1) + -2) <= max((((((((v0*v1) + v2) + v3)*v4) - v5) + -15)/8), 0))
((max(((((v0 + v1) - v2) + 9)/4), v3) + -1) <= max(((((v0 + v1) - v2) + 6)/4), v3))
((max(((((v0 + v1)*2) - v2)/4), -3) + 2) <= max((((((v0 + v1)*2) - v2) + 9)/4), 0))
((max(((((v0 + v1)*v2) - v3)/4), -2) + 1) <= max((((((v0 + v1)*v2) - v3) + 5)/4), 0))
((max(((((v0 + v1)*v2) - v3)/8), -2) + 1) <= max((((((v0 + v1)*v2) - v3) + 9)/8), 0))
((max(((((v0 - v1)*v2) + 11)/9), v3) + -1) <= max(((((v0 - v1)*v2) + 3)/9), v3))
((max(((((v0 - v1)*v2) + 123)/125), v3) + -1) <= max(((((v0 - v1)*v2) + -2)/125), v3))
((max(((((v0 - v1)*v2) + 37)/21), v3) + -1) <= max(((((v0 - v1)*v2) + 17)/21), v3))
((max(((((v0*2) - v1) + 2)/4), v2) + -1) <= max(((((v0*2) - v1) + -1)/4), v2))
((max(((((v0*v1) - v2) + 11)/7), v3) + -1) <= max(((((v0*v1) - v2) + 5)/7), v3))
((max(((((v0*v1) - v2) + 30)/32), v3) + -1) <= max(((((v0*v1) - v2) + -1)/32), v3))
((max(((((v0*v1) - v2) + 6)/8), v3) + -1) <= max(((((v0*v1) - v2) + -1)/8), v3))
((max((((0 - v0)/2) + v1), -1) + -1) <= max((((-1 - v0)/2) + v1), -1))
((max((((0 - v0)/2) + v1), 0) + -1) <= max((((-1 - v0)/2) + v1), 0))
((max((((1 - v0)/2) + v1), -1) + -1) <= max((((0 - v0)/2) + v1), -1))
((max((((v0 + v1) - v2)/13), -2) + 1) <= max(((((v0 + v1) - v2) + 14)/13), 0))
((max((((v0 + v1) - v2)/14), -2) + 1) <= max(((((v0 + v1) - v2) + 15)/14), 0))
((max((((v0 + v1) - v2)/16), -2) + 1) <= max(((((v0 + v1) - v2) + 17)/16), 0))
((max((((v0 + v1) - v2)/2), -11) + 10) <= max(((((v0 + v1) - v2) + 21)/2), 0))
((max((((v0 + v1) - v2)/2), -14) + 13) <= max(((((v0 + v1) - v2) + 27)/2), 0))
((max((((v0 + v1) - v2)/2), -19) + 18) <= max(((((v0 + v1) - v2) + 37)/2), 0))
((max((((v0 + v1) - v2)/2), -2) + 1) <= max(((((v0 + v1) - v2) + 3)/2), 0))
((max((((v0 + v1) - v2)/2), -3) + 2) <= max(((((v0 + v1) - v2) + 5)/2), 0))
((max((((v0 + v1) - v2)/2), -4) + 3) <= max(((((v0 + v1) - v2) + 7)/2), 0))
((max((((v0 + v1) - v2)/2), -5) + 4) <= max(((((v0 + v1) - v2) + 9)/2), 0))
((max((((v0 + v1) - v2)/2), -6) + 5) <= max(((((v0 + v1) - v2) + 11)/2), 0))
((max((((v0 + v1) - v2)/2), -7) + 6) <= max(((((v0 + v1) - v2) + 13)/2), 0))
((max((((v0 + v1) - v2)/2), -8) + 7) <= max(((((v0 + v1) - v2) + 15)/2), 0))
((max((((v0 + v1) - v2)/2), -9) + 8) <= max(((((v0 + v1) - v2) + 17)/2), 0))
((max((((v0 + v1) - v2)/2), 7) + -8) <= max(((((v0 + v1) - v2) + -15)/2), 0))
((max((((v0 + v1) - v2)/4), -2) + 1) <= max(((((v0 + v1) - v2) + 5)/4), 0))
((max((((v0 + v1) - v2)/4), -3) + 2) <= max(((((v0 + v1) - v2) + 9)/4), 0))
((max((((v0 + v1) - v2)/4), -4) + 3) <= max(((((v0 + v1) - v2) + 13)/4), 0))
((max((((v0 + v1) - v2)/4), -5) + 4) <= max(((((v0 + v1) - v2) + 17)/4), 0))
((max((((v0 + v1) - v2)/4), 3) + -4) <= max(((((v0 + v1) - v2) + -15)/4), 0))
((max((((v0 + v1) - v2)/4), 5) + -6) <= max(((((v0 + v1) - v2) + -23)/4), 0))
((max((((v0 + v1) - v2)/7), -2) + 1) <= max(((((v0 + v1) - v2) + 8)/7), 0))
((max((((v0 + v1) - v2)/8), -2) + 1) <= max(((((v0 + v1) - v2) + 9)/8), 0))
((max((((v0 + v1) - v2)/8), -3) + 2) <= max(((((v0 + v1) - v2) + 17)/8), 0))
((max((((v0 + v1) - v2)/8), 2) + -3) <= max(((((v0 + v1) - v2) + -23)/8), 0))
((max((((v0 - v1) + 1)/2), v2) + -1) <= max(((v0 - v1)/2), v2))
((max((((v0 - v1) + 10)/4), v2) + -1) <= max((((v0 - v1) + 7)/4), v2))
((max((((v0 - v1) + 10)/7), v2) + -1) <= max((((v0 - v1) + 4)/7), v2))
((max((((v0 - v1) + 10)/8), v2) + -1) <= max((((v0 - v1) + 3)/8), v2))
((max((((v0 - v1) + 10)/9), v2) + -1) <= max((((v0 - v1) + 2)/9), v2))
((max((((v0 - v1) + 11)/10), v2) + -1) <= max((((v0 - v1) + 2)/10), v2))
((max((((v0 - v1) + 11)/12), v2) + -1) <= max(((v0 - v1)/12), v2))
((max((((v0 - v1) + 11)/8), v2) + -1) <= max((((v0 - v1) + 4)/8), v2))
((max((((v0 - v1) + 11)/9), v2) + -1) <= max((((v0 - v1) + 3)/9), v2))
((max((((v0 - v1) + 12)/10), v2) + -1) <= max((((v0 - v1) + 3)/10), v2))
((max((((v0 - v1) + 12)/7), v2) + -1) <= max((((v0 - v1) + 6)/7), v2))
((max((((v0 - v1) + 12)/8), v2) + -1) <= max((((v0 - v1) + 5)/8), v2))
((max((((v0 - v1) + 12)/9), v2) + -1) <= max((((v0 - v1) + 4)/9), v2))
((max((((v0 - v1) + 13)/10), v2) + -1) <= max((((v0 - v1) + 4)/10), v2))
((max((((v0 - v1) + 13)/11), v2) + -1) <= max((((v0 - v1) + 3)/11), v2))
((max((((v0 - v1) + 13)/4), v2) + -1) <= max((((v0 - v1) + 10)/4), v2))
((max((((v0 - v1) + 13)/6), v2) + -1) <= max((((v0 - v1) + 8)/6), v2))
((max((((v0 - v1) + 13)/8), v2) + -1) <= max((((v0 - v1) + 6)/8), v2))
((max((((v0 - v1) + 13)/9), v2) + -1) <= max((((v0 - v1) + 5)/9), v2))
((max((((v0 - v1) + 14)/10), v2) + -1) <= max((((v0 - v1) + 5)/10), v2))
((max((((v0 - v1) + 14)/11), v2) + -1) <= max((((v0 - v1) + 4)/11), v2))
((max((((v0 - v1) + 14)/12), v2) + -1) <= max((((v0 - v1) + 3)/12), v2))
((max((((v0 - v1) + 14)/13), v2) + -1) <= max((((v0 - v1) + 2)/13), v2))
((max((((v0 - v1) + 14)/4), v2) + -1) <= max((((v0 - v1) + 11)/4), v2))
((max((((v0 - v1) + 14)/6), v2) + -1) <= max((((v0 - v1) + 9)/6), v2))
((max((((v0 - v1) + 14)/8), v2) + -1) <= max((((v0 - v1) + 7)/8), v2))
((max((((v0 - v1) + 14)/9), v2) + -1) <= max((((v0 - v1) + 6)/9), v2))
((max((((v0 - v1) + 15)/10), v2) + -1) <= max((((v0 - v1) + 6)/10), v2))
((max((((v0 - v1) + 15)/16), v2) + -1) <= max(((v0 - v1)/16), v2))
((max((((v0 - v1) + 15)/9), v2) + -1) <= max((((v0 - v1) + 7)/9), v2))
((max((((v0 - v1) + 16)/10), v2) + -1) <= max((((v0 - v1) + 7)/10), v2))
((max((((v0 - v1) + 16)/11), v2) + -1) <= max((((v0 - v1) + 6)/11), v2))
((max((((v0 - v1) + 17)/10), v2) + -1) <= max((((v0 - v1) + 8)/10), v2))
((max((((v0 - v1) + 17)/11), v2) + -1) <= max((((v0 - v1) + 7)/11), v2))
((max((((v0 - v1) + 17)/12), v2) + -1) <= max((((v0 - v1) + 6)/12), v2))
((max((((v0 - v1) + 17)/13), v2) + -1) <= max((((v0 - v1) + 5)/13), v2))
((max((((v0 - v1) + 17)/14), v2) + -1) <= max((((v0 - v1) + 4)/14), v2))
((max((((v0 - v1) + 17)/4), v2) + -1) <= max((((v0 - v1) + 14)/4), v2))
((max((((v0 - v1) + 18)/12), v2) + -1) <= max((((v0 - v1) + 7)/12), v2))
((max((((v0 - v1) + 18)/16), v2) + -1) <= max((((v0 - v1) + 3)/16), v2))
((max((((v0 - v1) + 18)/17), v2) + -1) <= max((((v0 - v1) + 2)/17), v2))
((max((((v0 - v1) + 18)/7), v2) + -1) <= max((((v0 - v1) + 12)/7), v2))
((max((((v0 - v1) + 18)/8), v2) + -1) <= max((((v0 - v1) + 11)/8), v2))
((max((((v0 - v1) + 19)/12), v2) + -1) <= max((((v0 - v1) + 8)/12), v2))
((max((((v0 - v1) + 19)/16), v2) + -1) <= max((((v0 - v1) + 4)/16), v2))
((max((((v0 - v1) + 19)/17), v2) + -1) <= max((((v0 - v1) + 3)/17), v2))
((max((((v0 - v1) + 2)/4), v2) + -1) <= max((((v0 - v1) + -1)/4), v2))
((max((((v0 - v1) + 20)/15), v2) + -1) <= max((((v0 - v1) + 6)/15), v2))
((max((((v0 - v1) + 20)/16), v2) + -1) <= max((((v0 - v1) + 5)/16), v2))
((max((((v0 - v1) + 20)/17), v2) + -1) <= max((((v0 - v1) + 4)/17), v2))
((max((((v0 - v1) + 20)/18), v2) + -1) <= max((((v0 - v1) + 3)/18), v2))
((max((((v0 - v1) + 20)/19), v2) + -1) <= max((((v0 - v1) + 2)/19), v2))
((max((((v0 - v1) + 21)/17), v2) + -1) <= max((((v0 - v1) + 4)/17), v2))
((max((((v0 - v1) + 21)/17), v2) + -1) <= max((((v0 - v1) + 5)/17), v2))
((max((((v0 - v1) + 21)/18), v2) + -1) <= max((((v0 - v1) + 4)/18), v2))
((max((((v0 - v1) + 22)/13), v2) + -1) <= max((((v0 - v1) + 10)/13), v2))
((max((((v0 - v1) + 22)/9), v2) + -1) <= max((((v0 - v1) + 14)/9), v2))
((max((((v0 - v1) + 23)/17), v2) + -1) <= max((((v0 - v1) + 7)/17), v2))
((max((((v0 - v1) + 23)/18), v2) + -1) <= max((((v0 - v1) + 6)/18), v2))
((max((((v0 - v1) + 23)/19), v2) + -1) <= max((((v0 - v1) + 5)/19), v2))
((max((((v0 - v1) + 23)/7), v2) + -1) <= max((((v0 - v1) + 17)/7), v2))
((max((((v0 - v1) + 24)/14), v2) + -1) <= max((((v0 - v1) + 11)/14), v2))
((max((((v0 - v1) + 24)/18), v2) + -1) <= max((((v0 - v1) + 7)/18), v2))
((max((((v0 - v1) + 24)/19), v2) + -1) <= max((((v0 - v1) + 5)/19), v2))
((max((((v0 - v1) + 24)/19), v2) + -1) <= max((((v0 - v1) + 6)/19), v2))
((max((((v0 - v1) + 24)/22), v2) + -1) <= max((((v0 - v1) + 3)/22), v2))
((max((((v0 - v1) + 25)/14), v2) + -1) <= max((((v0 - v1) + 12)/14), v2))
((max((((v0 - v1) + 25)/16), v2) + -1) <= max((((v0 - v1) + 10)/16), v2))
((max((((v0 - v1) + 26)/11), v2) + -1) <= max((((v0 - v1) + 16)/11), v2))
((max((((v0 - v1) + 26)/12), v2) + -1) <= max((((v0 - v1) + 15)/12), v2))
((max((((v0 - v1) + 26)/20), v2) + -1) <= max((((v0 - v1) + 7)/20), v2))
((max((((v0 - v1) + 26)/21), v2) + -1) <= max((((v0 - v1) + 6)/21), v2))
((max((((v0 - v1) + 27)/12), v2) + -1) <= max((((v0 - v1) + 16)/12), v2))
((max((((v0 - v1) + 27)/20), v2) + -1) <= max((((v0 - v1) + 8)/20), v2))
((max((((v0 - v1) + 28)/8), v2) + -1) <= max((((v0 - v1) + 21)/8), v2))
((max((((v0 - v1) + 29)/13), v2) + -1) <= max((((v0 - v1) + 16)/13), v2))
((max((((v0 - v1) + 29)/13), v2) + -1) <= max((((v0 - v1) + 17)/13), v2))
((max((((v0 - v1) + 29)/4), v2) + -1) <= max((((v0 - v1) + 26)/4), v2))
((max((((v0 - v1) + 3)/4), v2) + -1) <= max(((v0 - v1)/4), v2))
((max((((v0 - v1) + 30)/11), v2) + -1) <= max((((v0 - v1) + 20)/11), v2))
((max((((v0 - v1) + 30)/13), v2) + -1) <= max((((v0 - v1) + 18)/13), v2))
((max((((v0 - v1) + 30)/14), v2) + -1) <= max((((v0 - v1) + 17)/14), v2))
((max((((v0 - v1) + 30)/18), v2) + -1) <= max((((v0 - v1) + 13)/18), v2))
((max((((v0 - v1) + 30)/19), v2) + -1) <= max((((v0 - v1) + 12)/19), v2))
((max((((v0 - v1) + 30)/21), v2) + -1) <= max((((v0 - v1) + 10)/21), v2))
((max((((v0 - v1) + 31)/18), v2) + -1) <= max((((v0 - v1) + 14)/18), v2))
((max((((v0 - v1) + 31)/32), v2) + -1) <= max(((v0 - v1)/32), v2))
((max((((v0 - v1) + 32)/12), v2) + -1) <= max((((v0 - v1) + 21)/12), v2))
((max((((v0 - v1) + 33)/7), v2) + -1) <= max((((v0 - v1) + 27)/7), v2))
((max((((v0 - v1) + 34)/32), v2) + -1) <= max((((v0 - v1) + 3)/32), v2))
((max((((v0 - v1) + 34)/33), v2) + -1) <= max((((v0 - v1) + 2)/33), v2))
((max((((v0 - v1) + 35)/23), v2) + -1) <= max((((v0 - v1) + 12)/23), v2))
((max((((v0 - v1) + 36)/21), v2) + -1) <= max((((v0 - v1) + 16)/21), v2))
((max((((v0 - v1) + 37)/34), v2) + -1) <= max((((v0 - v1) + 3)/34), v2))
((max((((v0 - v1) + 37)/34), v2) + -1) <= max((((v0 - v1) + 4)/34), v2))
((max((((v0 - v1) + 37)/4), v2) + -1) <= max((((v0 - v1) + 34)/4), v2))
((max((((v0 - v1) + 38)/22), v2) + -1) <= max((((v0 - v1) + 17)/22), v2))
((max((((v0 - v1) + 38)/33), v2) + -1) <= max((((v0 - v1) + 6)/33), v2))
((max((((v0 - v1) + 4)/3), v2) + -1) <= max((((v0 - v1) + 2)/3), v2))
((max((((v0 - v1) + 4)/5), v2) + -1) <= max(((v0 - v1)/5), v2))
((max((((v0 - v1) + 40)/35), v2) + -1) <= max((((v0 - v1) + 5)/35), v2))
((max((((v0 - v1) + 41)/25), v2) + -1) <= max((((v0 - v1) + 17)/25), v2))
((max((((v0 - v1) + 42)/25), v2) + -1) <= max((((v0 - v1) + 17)/25), v2))
((max((((v0 - v1) + 42)/25), v2) + -1) <= max((((v0 - v1) + 18)/25), v2))
((max((((v0 - v1) + 43)/35), v2) + -1) <= max((((v0 - v1) + 9)/35), v2))
((max((((v0 - v1) + 43)/36), v2) + -1) <= max((((v0 - v1) + 8)/36), v2))
((max((((v0 - v1) + 44)/26), v2) + -1) <= max((((v0 - v1) + 19)/26), v2))
((max((((v0 - v1) + 44)/36), v2) + -1) <= max((((v0 - v1) + 9)/36), v2))
((max((((v0 - v1) + 46)/34), v2) + -1) <= max((((v0 - v1) + 13)/34), v2))
((max((((v0 - v1) + 46)/41), v2) + -1) <= max((((v0 - v1) + 6)/41), v2))
((max((((v0 - v1) + 5)/4), v2) + -1) <= max((((v0 - v1) + 2)/4), v2))
((max((((v0 - v1) + 5)/6), v2) + -1) <= max(((v0 - v1)/6), v2))
((max((((v0 - v1) + 52)/38), v2) + -1) <= max((((v0 - v1) + 15)/38), v2))
((max((((v0 - v1) + 52)/39), v2) + -1) <= max((((v0 - v1) + 14)/39), v2))
((max((((v0 - v1) + 57)/30), v2) + -1) <= max((((v0 - v1) + 28)/30), v2))
((max((((v0 - v1) + 58)/25), v2) + -1) <= max((((v0 - v1) + 34)/25), v2))
((max((((v0 - v1) + 58)/41), v2) + -1) <= max((((v0 - v1) + 18)/41), v2))
((max((((v0 - v1) + 6)/4), v2) + -1) <= max((((v0 - v1) + 3)/4), v2))
((max((((v0 - v1) + 6)/5), v2) + -1) <= max((((v0 - v1) + 2)/5), v2))
((max((((v0 - v1) + 7)/3), v2) + -1) <= max((((v0 - v1) + 5)/3), v2))
((max((((v0 - v1) + 7)/5), v2) + -1) <= max((((v0 - v1) + 3)/5), v2))
((max((((v0 - v1) + 7)/6), v2) + -1) <= max((((v0 - v1) + 2)/6), v2))
((max((((v0 - v1) + 7)/8), v2) + -1) <= max(((v0 - v1)/8), v2))
((max((((v0 - v1) + 79)/48), v2) + -1) <= max((((v0 - v1) + 32)/48), v2))
((max((((v0 - v1) + 8)/5), v2) + -1) <= max((((v0 - v1) + 4)/5), v2))
((max((((v0 - v1) + 8)/6), v2) + -1) <= max((((v0 - v1) + 3)/6), v2))
((max((((v0 - v1) + 8)/7), v2) + -1) <= max((((v0 - v1) + 2)/7), v2))
((max((((v0 - v1) + 8)/9), v2) + -1) <= max(((v0 - v1)/9), v2))
((max((((v0 - v1) + 9)/4), 0) + min((((v0 - v1) + 13)/4), 1)) <= (((v0 - v1) + 13)/4))
((max((((v0 - v1) + 9)/4), v2) + -1) <= max((((v0 - v1) + 6)/4), v2))
((max((((v0 - v1) + 9)/6), v2) + -1) <= max((((v0 - v1) + 4)/6), v2))
((max((((v0 - v1) + 9)/7), v2) + -1) <= max((((v0 - v1) + 3)/7), v2))
((max((((v0*2) - v1)/4), 2) + -3) <= max(((((v0*2) - v1) + -11)/4), 0))
((max((((v0*v1) + 11)/7), v2) + -1) <= max((((v0*v1) + 5)/7), v2))
((max((((v0*v1) + 46)/33), v2) + -1) <= max((((v0*v1) + 14)/33), v2))
((max((((v0*v1) + 61)/63), v2) + -1) <= max((((v0*v1) + -1)/63), v2))
((max((((v0*v1) - v2)/14), -2) + 1) <= max(((((v0*v1) - v2) + 15)/14), 0))
((max((((v0*v1) - v2)/4), -2) + 1) <= max(((((v0*v1) - v2) + 5)/4), 0))
((max((((v0*v1) - v2)/4), -5) + 4) <= max(((((v0*v1) - v2) + 17)/4), 0))
((max((((v0*v1) - v2)/7), -2) + 1) <= max(((((v0*v1) - v2) + 8)/7), 0))
((max((((v0*v1) - v2)/7), 1) + -2) <= max(((((v0*v1) - v2) + -13)/7), 0))
((max(((max((v0 + v1), v2) - v3)/4), -9) + 8) <= max((((max((v0 + v1), v2) - v3) + 33)/4), 0))
((max(((max((v0 + v1), v2) - v3)/8), -5) + 4) <= max((((max((v0 + v1), v2) - v3) + 33)/8), 0))
((max(((min(((min((v0*v1), v2) + (v3*v4)) + v1), v5) - ((v3*v4) + (v0*v1))) + (min((min(((min((v0*v1), v2) + (v3*v4)) + v1), v5) + -1), ((v3*v4) + (v0*v1))) + v6)), (min(((min((v0*v1), v2) + (v3*v4)) + v1), v5) + v6)) + -4) <= min((((((min(((min((v0*v1), v2) + (v3*v4)) + v1), v5) - ((v3*v4) + (v0*v1))) + -1)/4)*4) + (((v3*v4) + (v0*v1)) + v6)), ((min(((min((v0*v1), v2) + (v3*v4)) + v1), v5) + v6) + -4)))
((max(((v0 + 1)/2), v1) + -1) <= max((v0/2), v1))
((max(((v0 + 10)/4), v1) + -1) <= max(((v0 + 7)/4), v1))
((max(((v0 + 10)/7), v1) + -1) <= max(((v0 + 4)/7), v1))
((max(((v0 + 10)/9), v1) + -1) <= max(((v0 + 1)/9), v1))
((max(((v0 + 10)/9), v1) + -1) <= max(((v0 + 2)/9), v1))
((max(((v0 + 104)/77), v1) + -1) <= max(((v0 + 28)/77), v1))
((max(((v0 + 105)/77), v1) + -1) <= max(((v0 + 29)/77), v1))
((max(((v0 + 11)/4), 0) + -3) <= max((v0/4), -2))
((max(((v0 + 11)/9), v1) + -1) <= max(((v0 + 3)/9), v1))
((max(((v0 + 12)/10), v1) + -1) <= max(((v0 + 3)/10), v1))
((max(((v0 + 12)/5), v1) + -1) <= max(((v0 + 8)/5), v1))
((max(((v0 + 12)/9), v1) + -1) <= max(((v0 + 4)/9), v1))
((max(((v0 + 13)/10), v1) + -1) <= max(((v0 + 4)/10), v1))
((max(((v0 + 13)/4), v1) + -1) <= max(((v0 + 10)/4), v1))
((max(((v0 + 13)/6), v1) + -1) <= max(((v0 + 8)/6), v1))
((max(((v0 + 13)/8), v1) + -1) <= max(((v0 + 6)/8), v1))
((max(((v0 + 13)/9), v1) + -1) <= max(((v0 + 4)/9), v1))
((max(((v0 + 14)/10), v1) + -1) <= max(((v0 + 5)/10), v1))
((max(((v0 + 15)/11), v1) + -1) <= max(((v0 + 5)/11), v1))
((max(((v0 + 15)/16), v1) + -1) <= max((v0/16), v1))
((max(((v0 + 16)/10), v1) + -1) <= max(((v0 + 7)/10), v1))
((max(((v0 + 16)/11), v1) + -1) <= max(((v0 + 6)/11), v1))
((max(((v0 + 17)/16), v1) + -1) <= max(((v0 + 2)/16), v1))
((max(((v0 + 17)/6), 0) + -3) <= max((v0/6), -2))
((max(((v0 + 17)/8), v1) + -1) <= max(((v0 + 10)/8), v1))
((max(((v0 + 18)/16), v1) + -1) <= max(((v0 + 3)/16), v1))
((max(((v0 + 18)/17), v1) + -1) <= max(((v0 + 2)/17), v1))
((max(((v0 + 18)/4), v1) + -1) <= max(((v0 + 15)/4), v1))
((max(((v0 + 18)/8), v1) + -1) <= max(((v0 + 11)/8), v1))
((max(((v0 + 19)/11), v1) + -1) <= max(((v0 + 9)/11), v1))
((max(((v0 + 19)/12), v1) + -1) <= max(((v0 + 8)/12), v1))
((max(((v0 + 19)/17), v1) + -1) <= max(((v0 + 3)/17), v1))
((max(((v0 + 19)/7), v1) + -1) <= max(((v0 + 13)/7), v1))
((max(((v0 + 19)/8), v1) + -1) <= max(((v0 + 12)/8), v1))
((max(((v0 + 2)/3), v1) + -1) <= max((v0/3), v1))
((max(((v0 + 20)/12), v1) + -1) <= max(((v0 + 9)/12), v1))
((max(((v0 + 20)/17), v1) + -1) <= max(((v0 + 4)/17), v1))
((max(((v0 + 20)/18), v1) + -1) <= max(((v0 + 3)/18), v1))
((max(((v0 + 20)/21), v1) + -1) <= max((v0/21), v1))
((max(((v0 + 20)/8), v1) + -1) <= max(((v0 + 13)/8), v1))
((max(((v0 + 21)/10), v1) + -1) <= max(((v0 + 12)/10), v1))
((max(((v0 + 21)/18), v1) + -1) <= max(((v0 + 4)/18), v1))
((max(((v0 + 22)/13), v1) + -1) <= max(((v0 + 10)/13), v1))
((max(((v0 + 22)/17), v1) + -1) <= max(((v0 + 6)/17), v1))
((max(((v0 + 23)/10), v1) + -1) <= max(((v0 + 14)/10), v1))
((max(((v0 + 23)/13), v1) + -1) <= max(((v0 + 11)/13), v1))
((max(((v0 + 23)/7), v1) + -1) <= max(((v0 + 17)/7), v1))
((max(((v0 + 24)/16), v1) + -1) <= max(((v0 + 9)/16), v1))
((max(((v0 + 24)/17), v1) + -1) <= max(((v0 + 8)/17), v1))
((max(((v0 + 24)/18), v1) + -1) <= max(((v0 + 7)/18), v1))
((max(((v0 + 25)/14), v1) + -1) <= max(((v0 + 12)/14), v1))
((max(((v0 + 25)/17), v1) + -1) <= max(((v0 + 9)/17), v1))
((max(((v0 + 25)/8), v1) + -1) <= max(((v0 + 18)/8), v1))
((max(((v0 + 26)/20), v1) + -1) <= max(((v0 + 7)/20), v1))
((max(((v0 + 27)/11), v1) + -1) <= max(((v0 + 17)/11), v1))
((max(((v0 + 27)/15), v1) + -1) <= max(((v0 + 13)/15), v1))
((max(((v0 + 27)/17), v1) + -1) <= max(((v0 + 11)/17), v1))
((max(((v0 + 27)/6), v1) + -1) <= max(((v0 + 22)/6), v1))
((max(((v0 + 28)/8), v1) + -1) <= max(((v0 + 21)/8), v1))
((max(((v0 + 29)/13), v1) + -1) <= max(((v0 + 17)/13), v1))
((max(((v0 + 29)/18), v1) + -1) <= max(((v0 + 12)/18), v1))
((max(((v0 + 3)/2), 0) + -2) <= max((v0/2), -1))
((max(((v0 + 3)/4), v1) + -1) <= max((v0/4), v1))
((max(((v0 + 30)/19), v1) + -1) <= max(((v0 + 11)/19), v1))
((max(((v0 + 30)/19), v1) + -1) <= max(((v0 + 12)/19), v1))
((max(((v0 + 30)/21), v1) + -1) <= max(((v0 + 10)/21), v1))
((max(((v0 + 31)/12), v1) + -1) <= max(((v0 + 20)/12), v1))
((max(((v0 + 31)/15), v1) + -1) <= max(((v0 + 17)/15), v1))
((max(((v0 + 31)/32), v1) + -1) <= max((v0/32), v1))
((max(((v0 + 34)/32), v1) + -1) <= max(((v0 + 3)/32), v1))
((max(((v0 + 35)/23), v1) + -1) <= max(((v0 + 13)/23), v1))
((max(((v0 + 35)/33), v1) + -1) <= max(((v0 + 3)/33), v1))
((max(((v0 + 36)/33), v1) + -1) <= max(((v0 + 3)/33), v1))
((max(((v0 + 36)/8), v1) + -1) <= max(((v0 + 29)/8), v1))
((max(((v0 + 37)/33), v1) + -1) <= max(((v0 + 5)/33), v1))
((max(((v0 + 37)/34), v1) + -1) <= max(((v0 + 4)/34), v1))
((max(((v0 + 39)/33), v1) + -1) <= max(((v0 + 7)/33), v1))
((max(((v0 + 43)/9), v1) + -1) <= max(((v0 + 35)/9), v1))
((max(((v0 + 44)/10), v1) + -1) <= max(((v0 + 35)/10), v1))
((max(((v0 + 44)/19), v1) + -1) <= max(((v0 + 26)/19), v1))
((max(((v0 + 46)/35), v1) + -1) <= max(((v0 + 11)/35), v1))
((max(((v0 + 46)/37), v1) + -1) <= max(((v0 + 10)/37), v1))
((max(((v0 + 48)/20), v1) + -1) <= max(((v0 + 29)/20), v1))
((max(((v0 + 48)/35), v1) + -1) <= max(((v0 + 14)/35), v1))
((max(((v0 + 49)/35), v1) + -1) <= max(((v0 + 15)/35), v1))
((max(((v0 + 49)/38), v1) + -1) <= max(((v0 + 12)/38), v1))
((max(((v0 + 5)/2), 0) + -3) <= max((v0/2), -2))
((max(((v0 + 5)/4), v1) + -1) <= max(((v0 + 2)/4), v1))
((max(((v0 + 52)/36), v1) + -1) <= max(((v0 + 17)/36), v1))
((max(((v0 + 53)/19), v1) + -1) <= max(((v0 + 35)/19), v1))
((max(((v0 + 53)/36), v1) + -1) <= max(((v0 + 18)/36), v1))
((max(((v0 + 6)/4), v1) + -1) <= max(((v0 + 3)/4), v1))
((max(((v0 + 6)/5), v1) + -1) <= max(((v0 + 2)/5), v1))
((max(((v0 + 6)/7), v1) + -1) <= max((v0/7), v1))
((max(((v0 + 62)/63), v1) + -1) <= max(((v0 + -1)/63), v1))
((max(((v0 + 62)/63), v1) + -1) <= max((v0/63), v1))
((max(((v0 + 63)/38), v1) + -1) <= max(((v0 + 26)/38), v1))
((max(((v0 + 65)/64), v1) + -1) <= max(((v0 + 2)/64), v1))
((max(((v0 + 66)/64), v1) + -1) <= max(((v0 + 3)/64), v1))
((max(((v0 + 67)/23), v1) + -1) <= max(((v0 + 45)/23), v1))
((max(((v0 + 68)/65), v1) + -1) <= max(((v0 + 4)/65), v1))
((max(((v0 + 69)/65), v1) + -1) <= max(((v0 + 5)/65), v1))
((max(((v0 + 7)/2), 0) + -4) <= max((v0/2), -3))
((max(((v0 + 7)/3), v1) + -1) <= max(((v0 + 5)/3), v1))
((max(((v0 + 7)/5), v1) + -1) <= max(((v0 + 3)/5), v1))
((max(((v0 + 7)/8), v1) + -1) <= max((v0/8), v1))
((max(((v0 + 71)/66), v1) + -1) <= max(((v0 + 6)/66), v1))
((max(((v0 + 75)/67), v1) + -1) <= max(((v0 + 9)/67), v1))
((max(((v0 + 8)/5), v1) + -1) <= max(((v0 + 4)/5), v1))
((max(((v0 + 8)/6), v1) + -1) <= max(((v0 + 3)/6), v1))
((max(((v0 + 84)/70), v1) + -1) <= max(((v0 + 15)/70), v1))
((max(((v0 + 89)/72), v1) + -1) <= max(((v0 + 18)/72), v1))
((max(((v0 + 9)/2), 0) + -5) <= max((v0/2), -4))
((max(((v0 + 9)/4), v1) + -1) <= max(((v0 + 6)/4), v1))
((max(((v0 + 9)/8), v1) + -1) <= max(((v0 + 2)/8), v1))
((max(((v0 + v1)/v2), -3)*2) <= max((((v0 + v1)/v2)*2), -5))
((max(((v0 - v1)/10), -2) + 1) <= max((((v0 - v1) + 11)/10), 0))
((max(((v0 - v1)/10), -3) + 2) <= max((((v0 - v1) + 21)/10), 0))
((max(((v0 - v1)/10), -4) + 3) <= max((((v0 - v1) + 31)/10), 0))
((max(((v0 - v1)/11), -2) + 1) <= max((((v0 - v1) + 12)/11), 0))
((max(((v0 - v1)/11), -3) + 2) <= max((((v0 - v1) + 23)/11), 0))
((max(((v0 - v1)/12), -2) + 1) <= max((((v0 - v1) + 13)/12), 0))
((max(((v0 - v1)/13), -3) + 2) <= max((((v0 - v1) + 27)/13), 0))
((max(((v0 - v1)/16), -2) + 1) <= max((((v0 - v1) + 17)/16), 0))
((max(((v0 - v1)/17), -2) + 1) <= max((((v0 - v1) + 18)/17), 0))
((max(((v0 - v1)/19), -2) + 1) <= max((((v0 - v1) + 20)/19), 0))
((max(((v0 - v1)/2), -10) + 9) <= max((((v0 - v1) + 19)/2), 0))
((max(((v0 - v1)/2), -11) + 10) <= max((((v0 - v1) + 21)/2), 0))
((max(((v0 - v1)/2), -13) + 12) <= max((((v0 - v1) + 25)/2), 0))
((max(((v0 - v1)/2), -14) + 13) <= max((((v0 - v1) + 27)/2), 0))
((max(((v0 - v1)/2), -15) + 14) <= max((((v0 - v1) + 29)/2), 0))
((max(((v0 - v1)/2), -2) + 1) <= max((((v0 - v1) + 3)/2), 0))
((max(((v0 - v1)/2), -23) + 22) <= max((((v0 - v1) + 45)/2), 0))
((max(((v0 - v1)/2), -26) + 25) <= max((((v0 - v1) + 51)/2), 0))
((max(((v0 - v1)/2), -27) + 26) <= max((((v0 - v1) + 53)/2), 0))
((max(((v0 - v1)/2), -3) + 2) <= max((((v0 - v1) + 5)/2), 0))
((max(((v0 - v1)/2), -4) + 3) <= max((((v0 - v1) + 7)/2), 0))
((max(((v0 - v1)/2), -5) + 4) <= max((((v0 - v1) + 9)/2), 0))
((max(((v0 - v1)/2), -6) + 5) <= max((((v0 - v1) + 11)/2), 0))
((max(((v0 - v1)/2), -63) + 62) <= max((((v0 - v1) + 125)/2), 0))
((max(((v0 - v1)/2), -7) + 6) <= max((((v0 - v1) + 13)/2), 0))
((max(((v0 - v1)/2), -8) + 7) <= max((((v0 - v1) + 15)/2), 0))
((max(((v0 - v1)/2), -9) + 8) <= max((((v0 - v1) + 17)/2), 0))
((max(((v0 - v1)/2), 1) + -2) <= max((((v0 - v1) + -3)/2), 0))
((max(((v0 - v1)/20), -2) + 1) <= max((((v0 - v1) + 21)/20), 0))
((max(((v0 - v1)/21), -2) + 1) <= max((((v0 - v1) + 22)/21), 0))
((max(((v0 - v1)/25), -2) + 1) <= max((((v0 - v1) + 26)/25), 0))
((max(((v0 - v1)/27), -2) + 1) <= max((((v0 - v1) + 28)/27), 0))
((max(((v0 - v1)/3), -2) + 1) <= max((((v0 - v1) + 4)/3), 0))
((max(((v0 - v1)/4), -12) + 11) <= max((((v0 - v1) + 45)/4), 0))
((max(((v0 - v1)/4), -2) + 1) <= max((((v0 - v1) + 5)/4), 0))
((max(((v0 - v1)/4), -3) + 2) <= max((((v0 - v1) + 9)/4), 0))
((max(((v0 - v1)/4), -4) + 3) <= max((((v0 - v1) + 13)/4), 0))
((max(((v0 - v1)/4), -5) + 4) <= max((((v0 - v1) + 17)/4), 0))
((max(((v0 - v1)/4), -6) + 5) <= max((((v0 - v1) + 21)/4), 0))
((max(((v0 - v1)/4), -7) + 6) <= max((((v0 - v1) + 25)/4), 0))
((max(((v0 - v1)/4), -8) + 7) <= max((((v0 - v1) + 29)/4), 0))
((max(((v0 - v1)/5), -2) + 1) <= max((((v0 - v1) + 6)/5), 0))
((max(((v0 - v1)/5), -3) + 2) <= max((((v0 - v1) + 11)/5), 0))
((max(((v0 - v1)/6), -2) + 1) <= max((((v0 - v1) + 7)/6), 0))
((max(((v0 - v1)/6), -3) + 2) <= max((((v0 - v1) + 13)/6), 0))
((max(((v0 - v1)/7), -2) + 1) <= max((((v0 - v1) + 8)/7), 0))
((max(((v0 - v1)/8), -2) + 1) <= max((((v0 - v1) + 9)/8), 0))
((max(((v0 - v1)/8), -3) + 2) <= max((((v0 - v1) + 17)/8), 0))
((max(((v0 - v1)/9), -2) + 1) <= max((((v0 - v1) + 10)/9), 0))
((max(((v0*2)/5), -3) + 2) <= max((((v0*2) + 11)/5), 0))
((max((v0/10), -2) + 1) <= max(((v0 + 11)/10), 0))
((max((v0/11), -2) + 1) <= max(((v0 + 12)/11), 0))
((max((v0/12), -2) + 1) <= max(((v0 + 13)/12), 0))
((max((v0/12), -3) + 2) <= max(((v0 + 25)/12), 0))
((max((v0/13), -2) + 1) <= max(((v0 + 14)/13), 0))
((max((v0/14), -2) + 1) <= max(((v0 + 15)/14), 0))
((max((v0/15), -2) + 1) <= max(((v0 + 16)/15), 0))
((max((v0/16), -2) + 1) <= max(((v0 + 17)/16), 0))
((max((v0/17), -2) + 1) <= max(((v0 + 18)/17), 0))
((max((v0/19), -2) + 1) <= max(((v0 + 20)/19), 0))
((max((v0/2), -10) + 9) <= max(((v0 + 19)/2), 0))
((max((v0/2), -11) + 10) <= max(((v0 + 21)/2), 0))
((max((v0/2), -12) + 11) <= max(((v0 + 23)/2), 0))
((max((v0/2), -13) + 12) <= max(((v0 + 25)/2), 0))
((max((v0/2), -14) + 13) <= max(((v0 + 27)/2), 0))
((max((v0/2), -15) + 14) <= max(((v0 + 29)/2), 0))
((max((v0/2), -16) + 15) <= max(((v0 + 31)/2), 0))
((max((v0/2), -2) + 1) <= max(((v0 + 3)/2), 0))
((max((v0/2), -23) + 22) <= max(((v0 + 45)/2), 0))
((max((v0/2), -26) + 25) <= max(((v0 + 51)/2), 0))
((max((v0/2), -27) + 26) <= max(((v0 + 53)/2), 0))
((max((v0/2), -3) + 2) <= max(((v0 + 5)/2), 0))
((max((v0/2), -4) + 3) <= max(((v0 + 7)/2), 0))
((max((v0/2), -5) + 4) <= max(((v0 + 9)/2), 0))
((max((v0/2), -6) + 5) <= max(((v0 + 11)/2), 0))
((max((v0/2), -7) + 6) <= max(((v0 + 13)/2), 0))
((max((v0/2), -8) + 7) <= max(((v0 + 15)/2), 0))
((max((v0/2), -9) + 8) <= max(((v0 + 17)/2), 0))
((max((v0/20), -2) + 1) <= max(((v0 + 21)/20), 0))
((max((v0/22), -2) + 1) <= max(((v0 + 23)/22), 0))
((max((v0/3), -2) + 1) <= max(((v0 + 4)/3), 0))
((max((v0/4), -14) + 13) <= max(((v0 + 53)/4), 0))
((max((v0/4), -2) + 1) <= max(((v0 + 5)/4), 0))
((max((v0/4), -3) + 2) <= max(((v0 + 9)/4), 0))
((max((v0/4), -4) + 3) <= max(((v0 + 13)/4), 0))
((max((v0/4), -5) + 4) <= max(((v0 + 17)/4), 0))
((max((v0/4), -6) + 5) <= max(((v0 + 21)/4), 0))
((max((v0/4), -7) + 6) <= max(((v0 + 25)/4), 0))
((max((v0/4), -8) + 7) <= max(((v0 + 29)/4), 0))
((max((v0/5), -2) + 1) <= max(((v0 + 6)/5), 0))
((max((v0/6), -2) + 1) <= max(((v0 + 7)/6), 0))
((max((v0/6), -3) + 2) <= max(((v0 + 13)/6), 0))
((max((v0/6), -4) + 3) <= max(((v0 + 19)/6), 0))
((max((v0/7), -2) + 1) <= max(((v0 + 8)/7), 0))
((max((v0/7), -3) + 2) <= max(((v0 + 15)/7), 0))
((max((v0/8), -2) + 1) <= max(((v0 + 9)/8), 0))
((max((v0/8), -3) + 2) <= max(((v0 + 17)/8), 0))
((max((v0/8), -4) + 3) <= max(((v0 + 25)/8), 0))
((max((v0/9), -2) + 1) <= max(((v0 + 10)/9), 0))
((max(max(select((((v0*v1) + v2) < ((v3 + v4) + v5)), (v6*v7), min((v6*v7), v8)), select(((((v0*v1) + v9) + v2) < ((v3 + v4) + v5)), (v6*v7), min((v6*v7), v8))), min((v6*v7), v8)) + -1022) <= (v6*v7))
((max(min((((((v0 + v1) + v2)/v3)*v4) - v5), ((v6*v4) + -5)), (min((((((v0 + v1) + v2)/v3)*v4) - ((v6*v4) + v5)), -5) + (v6*v4))) + 5) <= min((v6*v4), ((((((v0 + v1) + v2)/v3)*v4) - v5) + 5)))
((max(min((((v0*v1) + v2) + 8), v3), ((min((v3 - ((v0*v1) + v2)), 8) + (v0*v1)) + v2)) + -8) <= min(((v0*v1) + v2), (v3 + -8)))
((max(min((v0 - v1), ((v2*4) + -4)), (min((v0 - ((v2*4) + v1)), -4) + (v2*4))) + 4) <= min((v2*4), ((v0 - v1) + 4)))
((max(min((v0 - v1), ((v2*v3) + -4)), (min((v0 - ((v2*v3) + v1)), -4) + (v2*v3))) + 4) <= min((v2*v3), ((v0 - v1) + 4)))
((max(min((v0 - v1), ((v2*v3) + -9)), (min((v0 - ((v2*v3) + v1)), -9) + (v2*v3))) + 9) <= min((v2*v3), ((v0 - v1) + 9)))
((max(min((v0*v1), ((v2*v1) + -1)), (min(((v0 - v2)*v1), -1) + (v2*v1))) + 1) <= min((v2*v1), ((v0*v1) + 1)))
((min((((((((v0 - (v1*2)) + -1)/4)*2) + v1)*2) + 4), v0)*2) <= min((v0*2), ((((v0 + -1)/2)*4) + 5)))
((min(((((((min((((v0 + v1)/v2)*v3), ((v4*2) + v5)) + -1)/4)*2) + ((((min((((v0 + v1)/v2)*v3), ((v4*2) + v5)) + -1)/v3)*v2) + ((v6*v7) + v8)))*2) + 4), (min((((v0 + v1)/v2)*v3), ((v4*2) + v5)) + (((v6*v7) + v8)*2))) <= min(((((((min((((v0 + v1)/v2)*v3), ((v4*2) + v5)) + -1)/4)*2) + ((v6*v7) + v8))*2) + 4), (min((((v0 + v1)/v2)*v3), ((v4*2) + v5)) + (((v6*v7) + v8)*2)))) && (select((v9 < v10), (min((((v11*v12) + ((v13*2) + v10))*2), (((v14 - v15)*2) + v16)) + (v15*2)), ((((v11*v12) + ((v13*2) + v10)) + v15)*2)) <= ((((v11*v12) + ((v13*2) + v10)) + v15)*2)))
((min(((((((v0 - v1) + v2)/11)*11) + v1) + v3), v0) + 9) <= (min(((((v0 - v1) + 19)/11)*11), ((v0 - v1) + 9)) + v1))
((min(((((((v0 - v1) + v2)/128)*128) + v1) + v3), v0) + 3) <= (min(((((v0 - v1) + 130)/128)*128), ((v0 - v1) + 3)) + v1))
((min(((((((v0 - v1) + v2)/4)*4) + v1) + v3), v0) + -4) <= (((((v0 - v1) + -1)/4)*4) + v1))
((min((((((min((((v0 + v1)/v2)*v2), v3) + -1)/4)*4) + ((((min((((v0 + v1)/v2)*v2), v3) + -1)/v2)*v2) + ((v4*v5) + v6))) + v7), (min((((v0 + v1)/v2)*v2), v3) + ((v4*v5) + v6))) + -4) <= (min((((min((((v0 + v1)/v2)*v2), v3) + -1)/4)*4), (min((((v0 + v1)/v2)*v2), v3) + -4)) + ((v4*v5) + v6)))
((min((((((v0 - v1) + 22)/4)*4) + ((((((((v0 - v1) + 6)/4)*4) + v2)/v3)*v3) + v1)), ((((((v0 - v1) + 6)/4)*4) + v1) + 13)) <= (min(((((v0 - v1) + 22)/4)*4), (((((v0 - v1) + 6)/4)*4) + 13)) + v1)) && (select((v4 < v5), min(((v6*v7) + (v5*4)), v8), ((v6*v7) + (v5*4))) <= ((v6*v7) + (v5*4))))
((min((((((v0 - v1) + v2)/4)*4) + v1), (v0 + 6)) + -9) <= ((((v0 - v1)/4)*4) + v1))
((min((((((v0 - v1) + v2)/4)*4) + v1), (v0 + 8)) + -12) <= (((((v0 - v1) + -1)/4)*4) + v1))
((min((((((v0 - v1)/4)*4) + v1) + v2), v0) + min(min((v0 + v3), v1), (min((((((v0 - v1)/4)*4) + v1) + v2), v0) + 13))) <= (min(min((((((v0 - v1)/4)*4) + v1) + v2), v0), ((min((v0 + v3), v1) + ((((min((((((v0 - v1)/4)*4) + v1) + v2), v0) - min((v0 + v3), v1)) + 13)/4)*4)) + -10)) + min((v0 + v3), v1)))
((min((((((v0 - v1)/v2)*v2) + v1) + 3), v0) + 2) <= (min((v0 + v3), v1) + ((((min((((((v0 - v1)/v2)*v2) + v1) + 3), v0) - min((v0 + v3), v1)) + 3)/2)*2)))
((min((((((v0*2) + v1)*v2) + v3) + v4), v5) + -1) <= ((((min((v5 - ((((v0*2) + v1)*v2) + v3)), v4) + 2)/4)*4) + ((((v0*2) + v1)*v2) + v3)))
((min((((((v0*4) + ((v1*2) + v2))*8) + v3) + v4), v5) + -3) <= (((((min((((((v0*4) + ((v1*2) + v2))*8) + v3) + v4), v5) - v3)/4) - (((v0*4) + ((v1*2) + v2))*2))*4) + ((((v0*4) + ((v1*2) + v2))*8) + v3)))
((min((((((v0*4) + v1)*v2) + v3) + v4), v5) + -1) <= ((((min((v5 - ((((v0*4) + v1)*v2) + v3)), v4) + 2)/4)*4) + ((((v0*4) + v1)*v2) + v3)))
((min((((((v0*v1) + v2)*16) + v3) + v4), v5) + -3) <= (((((min((((((v0*v1) + v2)*16) + v3) + v4), v5) - v3)/4) - (((v0*v1) + v2)*4))*4) + ((((v0*v1) + v2)*16) + v3)))
((min((((((v0*v1) + v2)*v3) + v4) + v3), v5) + -4) <= ((((min((v5 - ((((v0*v1) + v2)*v3) + v4)), v3) + -1)/4)*4) + ((((v0*v1) + v2)*v3) + v4)))
((min((((((v0*v1) + v2)*v3) + v4) + v5), v6) <= min(((((min((v6 - ((((v0*v1) + v2)*v3) + v4)), v5) + 3)/4)*4) + ((((v0*v1) + v2)*v3) + v4)), v6)) && (((min((v7 - ((v8*4) + v9)), 4) + (v8*4)) + v9) <= min((((v8*4) + v9) + 4), v7)))
((min((((((v0*v1) + v2)/v3) + ((v4/v3)*v3)) + v5), v6) + -1) <= (min((((v0*v1) + v2)/v3), (v6 + v7)) + (((min((((((v0*v1) + v2)/v3) + ((v4/v3)*v3)) + v5), v6) - min((((v0*v1) + v2)/v3), (v6 + v7)))/2)*2)))
((min(((((max((((v0 + 3)/4)*4), v1)/4)*4) + (min((((v0 + 3)/4)*4), v1) + ((v2*v3) + v4))) + 4), ((((v0 + 3)/4)*4) + ((v2*v3) + v4))) + 1) <= (min((((v0 + 7)/4)*4), ((((v0 + 3)/4)*4) + 1)) + ((v2*v3) + v4)))
((min(((((max(v0, -13)/4)*4) + ((((max(v0, -13) + 16)/v1)*v1) + (min(v0, -13) + v2))) + v3), (max(v0, -13) + (min(v0, -13) + v2))) + 13) <= min(((((max(v0, -13)/4)*4) + (min(v0, -13) + v2)) + 16), (v0 + v2)))
((min(((((max(v0, 4) + v1)/4)*4) + (min(v0, 4) + v2)), (v0 + v2)) + 4) <= min(((((max(v0, 4) + 3)/4)*4) + (min(v0, 4) + v2)), ((v0 + v2) + 4)))
((min(((((max(v0, v1) + v2)/v1)*v1) + (min(v0, v1) + v3)), (v0 + v3)) + v1) <= (max(v0, v1) + (min(v0, v1) + v3)))
((min(((((min(((((v0 - v1) + v2)/v3)*v3), ((v0 - v1) + v4)) + 13)/4)*4) + ((((min(((((v0 - v1) + v2)/v3)*v3), ((v0 - v1) + v4)) + v5)/v6)*v6) + v1)), ((min(((((v0 - v1) + v2)/v3)*v3), ((v0 - v1) + v4)) + v1) + 10)) <= (min((((min(((((v0 - v1) + v2)/v3)*v3), ((v0 - v1) + v4)) + 13)/4)*4), (min(((((v0 - v1) + v2)/v3)*v3), ((v0 - v1) + v4)) + 10)) + v1)) && (select((v7 < v8), min(((v9*v10) + (v8*v11)), (v12 + v13)), ((v9*v10) + (v8*v11))) <= ((v9*v10) + (v8*v11))))
((min(((((min((((v0 + v1)/v2)*v2), v3) + -1)/4)*4) + ((((min((((v0 + v1)/v2)*v2), v3) + -1)/v2)*v2) + ((v4*v5) + v6))), ((min((((v0 + v1)/v2)*v2), v3) + ((v4*v5) + v6)) + -4)) <= (min((((min((((v0 + v1)/v2)*v2), v3) + -1)/4)*4), (min((((v0 + v1)/v2)*v2), v3) + -4)) + ((v4*v5) + v6))) && (select((v7 < v8), min(((v9*v10) + (v8*v11)), v12), ((v9*v10) + (v8*v11))) <= ((v9*v10) + (v8*v11))))
((min(((((v0 + -1)/4)*4) + ((((v0 + -1)/v1)*v1) + v2)), ((v0 + v2) + -4)) <= (min((((v0 + -1)/4)*4), (v0 + -4)) + v2)) && (select((v3 < v4), min((((v5*v6) + (v4*4)) + v7), v8), (((v5*v6) + (v4*4)) + v7)) <= (((v5*v6) + (v4*4)) + v7)))
((min(((((v0 + -1)/4)*4) + ((((v0 + -1)/v1)*v1) + v2)), ((v0 + v2) + -4)) <= (min((((v0 + -1)/4)*4), (v0 + -4)) + v2)) && (select((v3 < v4), min(((v5*v1) + ((v6*v7) + (((v8*4) + v4)*v9))), v10), ((v5*v1) + ((v6*v7) + (((v8*4) + v4)*v9)))) <= ((v5*v1) + ((v6*v7) + (((v8*4) + v4)*v9)))))
((min(((((v0 + 21)/4)*4) + (((((((v0 + 5)/4)*4) + v1)/v2)*v2) + ((v3*v4) + v5))), (((((v0 + 5)/4)*4) + ((v3*v4) + v5)) + 13)) <= (min((((v0 + 21)/4)*4), ((((v0 + 5)/4)*4) + 13)) + ((v3*v4) + v5))) && (select((v6 < v7), min(((v8*v9) + (v7*v10)), v11), ((v8*v9) + (v7*v10))) <= ((v8*v9) + (v7*v10))))
((min(((((v0 + v1) + v2)/v3)*2), ((((v1/v3) + ((v4/2)*2))*2) + 3)) + 2) <= (min(((((v0 + v1) + v2)/v3)*2), (((v1/v3)*2) + v2)) + ((((min(((((v0 + v1) + v2)/v3)*2), ((((v1/v3) + ((v4/2)*2))*2) + 3)) - min(((((v0 + v1) + v2)/v3)*2), (((v1/v3)*2) + v2))) + 3)/2)*2)))
((min(((((v0 + v1) - v2) - (v3*4))*2), v4) + (v3*8)) <= min((((v0 + v1) - v2)*2), ((v3*8) + v4)))
((min(((((v0 + v1) - v2) - (v3*8))*2), v4) + (v3*16)) <= min((((v0 + v1) - v2)*2), ((v3*16) + v4)))
((min(((((v0 + v1) - v2) - v3)*v4), v5) + (v3*v4)) <= min((((v0 + v1) - v2)*v4), ((v3*v4) + v5)))
((min(((((v0 + v1)/4)*4) + ((v2*v3) + v4)), (v5 + v4)) + -4) <= (((((min(((((v0 + v1)/4)*4) + ((v2*v3) + v4)), (v5 + v4)) - (min((v2*v3), (v5 + -4)) + v4)) + -1)/4)*4) + (min((v2*v3), (v5 + -4)) + v4)))
((min(((((v0 + v1)/v2) + ((v3/v2)*v2)) + v4), v5) + -1) <= (min(((v0 + v1)/v2), (v5 + v6)) + (((min(((((v0 + v1)/v2) + ((v3/v2)*v2)) + v4), v5) - min(((v0 + v1)/v2), (v5 + v6)))/2)*2)))
((min(((((v0 - v1) + v2)/4)*4), ((v3*v4) + v4)) + -4) <= ((v3*v4) + (((min((((((v0 - v1) + v2)/4)*4) - (v3*v4)), v4) + -1)/4)*4)))
((min(((((v0 - v1) + v2)/4)*4), ((v3*v4) + v5)) + 11) <= ((v3*v4) + (((min((((((v0 - v1) + v2)/4)*4) - (v3*v4)), v5) + 14)/4)*4)))
((min(((((v0 - v1) + v2)/8)*16), (((v0 - v1)*2) + v2)) + (v3*2)) <= ((((((v0 - v1) + v2)/8)*8) + v3)*2))
((min(((((v0*2) + v1)*16) + v2), v3) + -1) <= ((((min((v3 - (((v0*2) + v1)*16)), v2) + 2)/4) + (((v0*2) + v1)*4))*4))
((min(((((v0*2) + v1)*32) + v2), v3) + -1) <= ((((min((v3 - (((v0*2) + v1)*32)), v2) + 2)/4) + (((v0*2) + v1)*8))*4))
((min(((((v0*2) + v1)*8) + v2), v3) + -2) <= ((((min((v3 - (((v0*2) + v1)*8)), v2) + 1)/4) + (((v0*2) + v1)*2))*4))
((min(((((v0*4) + ((v1*2) + v2))*8) + v3), v4) + -3) <= (((min((v4 - (((v0*4) + ((v1*2) + v2))*8)), v3)/4) + (((v0*4) + ((v1*2) + v2))*2))*4))
((min(((((v0*4) + v1)*16) + v2), v3) + -1) <= ((((min((v3 - (((v0*4) + v1)*16)), v2) + 2)/4) + (((v0*4) + v1)*4))*4))
((min(((((v0*4) + v1)*8) + v2), v3) + -3) <= (((min((v3 - (((v0*4) + v1)*8)), v2)/4) + (((v0*4) + v1)*2))*4))
((min(((((v0*v1) + v2)*32) + v3), v4) + -3) <= (((min((v4 - (((v0*v1) + v2)*32)), v3)/4) + (((v0*v1) + v2)*8))*4))
((min(((((v0*v1) + v2)*v3) + v4), v5) + 3) <= ((((v0*v1) + v2)*v3) + (((min((v5 - (((v0*v1) + v2)*v3)), v4) + 6)/4)*4)))
((min(((((v0/4)*4) + ((v1*v2) + v3)) + 3), (v4 + v3)) <= (((((min(((((v0/4)*4) + ((v1*v2) + v3)) + 3), (v4 + v3)) - (min(((v1*v2) + 3), v4) + v3)) + 3)/4)*4) + (min(((v1*v2) + 3), v4) + v3))) && (((min(((v5 + v6) - ((v7*4) + v8)), -4) + (v7*4)) + 4) <= min((v7*4), (((v5 + v6) - v8) + 4))))
((min(((((v0/4)*4) + ((v1*v2) + v3)) + 3), (v4 + v3)) <= (((((min(((((v0/4)*4) + ((v1*v2) + v3)) + 3), (v4 + v3)) - (min(((v1*v2) + 3), v4) + v3)) + 3)/4)*4) + (min(((v1*v2) + 3), v4) + v3))) && (((min(((v5 + v6) - ((v7*v8) + v9)), -6) + (v7*v8)) + 6) <= min((v7*v8), (((v5 + v6) - v9) + 6))))
((min(((((v0/4)*4) + ((v1*v2) + v3)) + v4), (v5 + v3)) + 24) <= (((((min(((((v0/4)*4) + ((v1*v2) + v3)) + v4), (v5 + v3)) - (min((v1*v2), (v5 + v6)) + v3)) + 27)/4)*4) + (min((v1*v2), (v5 + v6)) + v3)))
((min(((((v0/4)*4) + ((v1*v2) + v3)) + v4), v5) + 24) <= (min(((v1*v2) + v3), (v5 + v6)) + ((((min(((((v0/4)*4) + ((v1*v2) + v3)) + v4), v5) - min(((v1*v2) + v3), (v5 + v6))) + 27)/4)*4)))
((min(((((v0/4)*4) + (v1 + v2)) + v3), v4) + 15) <= (min((v1 + v2), (v4 + v5)) + ((((min(((((v0/4)*4) + (v1 + v2)) + v3), v4) - min((v1 + v2), (v4 + v5))) + 18)/4)*4)))
((min(((((v0/4)*4) + (v1 + v2)) + v3), v4) + 24) <= (min((v1 + v2), (v4 + v5)) + ((((min(((((v0/4)*4) + (v1 + v2)) + v3), v4) - min((v1 + v2), (v4 + v5))) + 27)/4)*4)))
((min(((((v0/v1)*v1) + ((v2*v3) + v4)) + 3), (v5 + v4)) + 2) <= (((((min(((((v0/v1)*v1) + ((v2*v3) + v4)) + 3), (v5 + v4)) - (min(((v2*v3) + 3), v5) + v4)) + 3)/2)*2) + (min(((v2*v3) + 3), v5) + v4)))
((min(((((v0/v1)*v1) + ((v2*v3) + v4)) + 3), (v5 + v4)) + 2) <= (((((min(((((v0/v1)*v1) + ((v2*v3) + v4)) + 3), (v5 + v4)) - (min(((v2*v3) + v6), v5) + v4)) + 3)/2)*2) + (min(((v2*v3) + v6), v5) + v4)))
((min(((((v0/v1)*v1) + ((v2*v3) + v4)) + 3), v5) + 2) <= (min((((v2*v3) + v4) + 3), v5) + ((((min(((((v0/v1)*v1) + ((v2*v3) + v4)) + 3), v5) - min((((v2*v3) + v4) + 3), v5)) + 3)/2)*2)))
((min(((((v0/v1)*v1) + ((v2*v3) + v4)) + 3), v5) + 2) <= (min((((v2*v3) + v4) + v6), v5) + ((((min(((((v0/v1)*v1) + ((v2*v3) + v4)) + 3), v5) - min((((v2*v3) + v4) + v6), v5)) + 3)/2)*2)))
((min(((((v0/v1)*v1) + ((v2*v3) + v4)) + v5), (v6 + v4))*2) <= (min(((min(((((v0/v1)*v1) + ((v2*v3) + v4)) + v5), (v6 + v4)) - (min((v2*v3), (v6 + v7)) + v4))*2), (((((min(((((v0/v1)*v1) + ((v2*v3) + v4)) + v5), (v6 + v4)) - (min((v2*v3), (v6 + v7)) + v4)) + 14)/70)*140) + 111)) + ((min((v2*v3), (v6 + v7)) + v4)*2)))
((min((((min((((v0 - v1) + 6)/4), 1)*4) + v1) + -3), v0) <= min((v1 + 1), v0)) && ((min(((((((v0 - v1) + v2)/4)*4) + v1) + 1), v0) + 3) <= min(min((((((v0 - v1) + 6)/4)*4) + v1), (v0 + 3)), (((((min(((((v0 - v1) + 6)/4)*4), ((v0 - v1) + 3)) + -1)/4)*4) + v1) + 4))))
((min((((min((((v0 - v1) + 7)/4), 1)*4) + v1) + -4), v0) <= min(v0, v1)) && ((min((((((v0 - v1) + v2)/4)*4) + v1), v0) + 4) <= min((min(((((min(((((v0 - v1) + 7)/4)*4), ((v0 - v1) + 4)) + -1)/4)*4) + v1), v0) + 4), (((((v0 - v1) + 7)/4)*4) + v1))))
((min((((min(((v0*v1) + v1), v2) + v3) + 3)/4), (((((((((min(((v0*v1) + v1), v2) + v3) + -1)/4) - (v3/4))/v4) - (v0*4))*v4) + ((v3/4) + (v0*v5))) + v4)) + -1) <= (((min(((v0*v1) + v1), v2) + v3) + -1)/4))
((min((((min((v0*v1), (v2 + v3)) + v4)/4)*4), ((min((((v2 + v4) + v5)/4), ((((v0*v1) + v4)/4) + ((v6/4)*4)))*4) + 25)) <= min((((min((v0*v1), (v2 + v3)) + v4)/4)*4), ((min(min((((v2 + v4) + v5)/4), ((((v0*v1) + v4)/4) + ((v6/4)*4))), (((min((v0*v1), (v2 + v3)) + v4)/4) + 13))*4) + 25))) && (select((v7 < v8), (((min((v8*4), (v9 + v5)) + ((v10*v11) + v12))*v13) + -1), (((v8*4) + ((v10*v11) + v12))*v13)) <= ((select((v7 < v8), min((v8*4), (v9 + v5)), (v8*4)) + ((v10*v11) + v12))*v13)))
((min((((min((v0*v1), (v2 + v3)) + v4)/4)*4), ((min((((v2 + v4) + v5)/4), ((((v0*v1) + v4)/4) + ((v6/4)*4)))*4) + 25)) <= min((((min((v0*v1), (v2 + v3)) + v4)/4)*4), ((min(min((((v2 + v4) + v5)/4), ((((v0*v1) + v4)/4) + ((v6/4)*4))), (((min((v0*v1), (v2 + v3)) + v4)/4) + 13))*4) + 25))) && (select((v7 < v8), (((min((v8*v9), (v10 + v5)) + ((v11*v12) + v13))*v9) + -1), (((v8*v9) + ((v11*v12) + v13))*v9)) <= ((select((v7 < v8), min((v8*v9), (v10 + v5)), (v8*v9)) + ((v11*v12) + v13))*v9)))
((min((((v0 + -1)/4)*4), (v0 + -4)) + 8) <= (min(v0, 4) + (max(min(v0, 1000), 4) + (((max(v0, 4) + -1)/1000)*1000))))
((min((((v0 + -1)/4)*4), (v0 + -4)) + 8) <= (min(v0, 4) + (max(min(v0, 125), 4) + (((max(v0, 4) + -1)/125)*125))))
((min((((v0 + 11)/4)*4), ((((v0 + 3)/4)*4) + 6)) + -10) <= (((v0 + -1)/4)*4))
((min((((v0 + 3)/4)*4), ((((v0 + -1)/v1)*v1) + v1)) + -4) <= (((v0 + -1)/4)*4))
((min((((v0 + 3)/4)*4), ((((v0 + 11)/v1)*v1) + v2)) + 7) <= min((((v0 + 11)/4)*4), ((((v0 + 3)/4)*4) + 7)))
((min((((v0 + 3)/4)*4), ((((v0 + 3)/v1)*v1) + 14)) + -4) <= (((v0 + -1)/4)*4))
((min((((v0 + 3)/4)*4), ((((v0 + 3)/v1)*v1) + 6)) + -4) <= (((v0 + -1)/4)*4))
((min((((v0 + 3)/4)*4), ((v1*v2) + v3)) + 3) <= ((v1*v2) + (((min(((((v0 + 3)/4)*4) - (v1*v2)), v3) + 6)/4)*4)))
((min((((v0 + 7)/4)*4), ((((v0 + 15)/v1)*v1) + v2)) + 5) <= min((((v0 + 15)/4)*4), ((((v0 + 7)/4)*4) + 5)))
((min((((v0 + 7)/4)*4), ((((v0 + 3)/4)*4) + 1)) + -5) <= (((v0 + -1)/4)*4))
((min((((v0 + 7)/4)*4), ((((v0 + 3)/4)*4) + 2)) + -6) <= (((v0 + -1)/4)*4))
((min((((v0 + v1) + 1)/2), (((((v2*v3) + v0)/2) + ((((((v0 + v1) + -1)/2) - (((v2*v3) + v0)/2))/2)*2)) + 2)) + -1) <= (((v0 + v1) + -1)/2))
((min((((v0 + v1) + 3)/4), (((((v2*v3) + v0)/4) + ((((((v0 + v1) + -1)/4) - (((v2*v3) + v0)/4))/v4)*v4)) + v4)) + -1) <= (((v0 + v1) + -1)/4))
((min((((v0 + v1) + 7)/v2), ((((v3*v4) + v1)/v2) + ((v5/v2)*v2))) + 6) <= (((min((v3*v4), (v0 + v6)) + v1)/v2) + ((((min((((v0 + v1) + 7)/v2), ((((v3*v4) + v1)/v2) + ((v5/v2)*v2))) - ((min((v3*v4), (v0 + v6)) + v1)/v2)) + 7)/2)*2)))
((min((((v0 + v1) + v2)/4), ((((v3*v4) + v0)/4) + ((v5/4)*4))) + 2) <= (((min((v3*v4), (v1 + v2)) + v0)/4) + ((((min((((v0 + v1) + v2)/4), ((((v3*v4) + v0)/4) + ((v5/4)*4))) - ((min((v3*v4), (v1 + v2)) + v0)/4)) + 5)/4)*4)))
((min((((v0 + v1) + v2)/4), ((((v3*v4) + v0)/4) + ((v5/4)*4))) <= (((min((v3*v4), (v1 + v2)) + v0)/4) + ((((min((((v0 + v1) + v2)/4), ((((v3*v4) + v0)/4) + ((v5/4)*4))) - ((min((v3*v4), (v1 + v2)) + v0)/4)) + 3)/4)*4))) && (((min(((v6 + v7) - ((v8*v9) + v10)), v9) + (v8*v9)) + v10) <= min((v6 + v7), (((v8*v9) + v10) + v9))))
((min((((v0 + v1) + v2)/4), ((((v3*v4) + v0)/4) + ((v5/4)*4))) <= (((min((v3*v4), (v1 + v2)) + v0)/4) + ((((min((((v0 + v1) + v2)/4), ((((v3*v4) + v0)/4) + ((v5/4)*4))) - ((min((v3*v4), (v1 + v2)) + v0)/4)) + 3)/4)*4))) && ((min((v6 - ((v7*v8) + v9)), v8) + (v7*v8)) <= min((v6 - v9), ((v7*v8) + v8))))
((min((((v0 + v1) + v2)/v3), (((((((v0 + v1) + v4)/v3) - v5)/v3)*v3) + v5)) + 2) <= (min((((v0 + v1) + v2)/v3), v5) + ((((min((((v0 + v1) + v2)/v3), (((((((v0 + v1) + v4)/v3) - v5)/v3)*v3) + v5)) - min((((v0 + v1) + v2)/v3), v5)) + 3)/2)*2)))
((min((((v0 + v1) + v2)/v3), ((((v4*v5) + v1)/v3) + ((v6/v3)*v3))) + 2) <= (((min((v4*v5), (v0 + v2)) + v1)/v3) + ((((min((((v0 + v1) + v2)/v3), ((((v4*v5) + v1)/v3) + ((v6/v3)*v3))) - ((min((v4*v5), (v0 + v2)) + v1)/v3)) + 3)/2)*2)))
((min((((v0 + v1) + v2)/v3), ((((v4*v5) + v1)/v3) + ((v6/v7)*v7))) + 2) <= (((min((v4*v5), (v0 + v2)) + v1)/v3) + ((((min((((v0 + v1) + v2)/v3), ((((v4*v5) + v1)/v3) + ((v6/v7)*v7))) - ((min((v4*v5), (v0 + v2)) + v1)/v3)) + 3)/2)*2)))
((min((((v0 + v1) + v2)/v3), ((v1/v3) + ((v4/v3)*v3))) + 2) <= ((((min(v0, v5) + v1) + v2)/v3) + ((((min((((v0 + v1) + v2)/v3), ((v1/v3) + ((v4/v3)*v3))) - (((min(v0, v5) + v1) + v2)/v3)) + 3)/2)*2)))
((min((((v0 + v1)/16)*32), ((v0*2) + v1)) + (v2*2)) <= (((((v0 + v1)/16)*16) + v2)*2))
((min((((v0 + v1)/2)*4), ((v0*2) + v1)) + (v2*2)) <= (((((v0 + v1)/2)*2) + v2)*2))
((min((((v0 + v1)/4)*4), ((v2*v3) + v3)) + -4) <= ((v2*v3) + (((min(((((v0 + v1)/4)*4) - (v2*v3)), v3) + -1)/4)*4)))
((min((((v0 + v1)/4)*8), ((v0*2) + v1)) + (v2*2)) <= (((((v0 + v1)/4)*4) + v2)*2))
((min((((v0 - v1) - (v2*4))*2), v3) + (v2*8)) <= min(((v0 - v1)*2), ((v2*8) + v3)))
((min((((v0 - v1) - (v2*8))*2), v3) + (v2*16)) <= min(((v0 - v1)*2), ((v2*16) + v3)))
((min((((v0 - v1) - v2)*v3), v4) + (v2*v3)) <= min(((v0 - v1)*v3), ((v2*v3) + v4)))
((min((((v0*16) + v1) + v2), v3) + -3) <= (((((min((((v0*16) + v1) + v2), v3) - v1)/4) - (v0*4))*4) + ((v0*16) + v1)))
((min((((v0*16) + v1) + v2), v3) <= (min(min((v3 - ((v0*16) + v1)), (((((min((((v0*16) + v1) + v2), v3) - v1)/4) - (v0*4))*4) + 3)), v2) + ((v0*16) + v1))) && (((min(((v4 + v5) - ((v6*4) + v7)), 4) + (v6*4)) + v7) <= min((v4 + v5), (((v6*4) + v7) + 4))))
((min((((v0*2) + v1)*126), (v2 + v3)) + (min(v4, v5)*2)) <= ((min(v4, v5) + (((v0*2) + v1)*63))*2))
((min((((v0*2) + v1)*16), (((v2 - v3)*2) + v4)) + (v3*2)) <= (((((v0*2) + v1)*8) + v3)*2))
((min((((v0*2) + v1)*16), ((v2*2) + v3)) + (((v4*v5) + v6)*2)) <= (((((v0*2) + v1)*8) + ((v4*v5) + v6))*2))
((min((((v0*2) + v1)*16), ((v2*2) + v3)) + ((v4 + v5)*2)) <= (((((v0*2) + v1)*8) + (v4 + v5))*2))
((min((((v0*2) + v1)*16), (v2 + v3)) + (v4*2)) <= (((((v0*2) + v1)*8) + v4)*2))
((min((((v0*2) + v1)*20), ((v2*2) + v3)) + (((v4*v5) + v6)*2)) <= (((((v0*2) + v1)*10) + ((v4*v5) + v6))*2))
((min((((v0*2) + v1)*32), ((v2*2) + 32)) + (v3*2)) <= (((((v0*2) + v1)*16) + v3)*2))
((min((((v0*2) + v1)*32), (v2 + v3)) + (min(v4, v5)*2)) <= ((min(v4, v5) + (((v0*2) + v1)*16))*2))
((min((((v0*2) + v1)*32), (v2 + v3)) + (v4*2)) <= (((((v0*2) + v1)*16) + v4)*2))
((min((((v0*2) + v1)*4), ((((v2 + v3) - v4)*2) + v5)) + (v4*2)) <= (((((v0*2) + v1)*2) + v4)*2))
((min((((v0*2) + v1)*4), (((v2 - v3)*2) + v4)) + (v3*2)) <= (((((v0*2) + v1)*2) + v3)*2))
((min((((v0*2) + v1)*4), ((v2*2) + v3)) + (((v4*v5) + v6)*2)) <= (((((v0*2) + v1)*2) + ((v4*v5) + v6))*2))
((min((((v0*2) + v1)*4), ((v2*2) + v3)) + (v4*2)) <= (((((v0*2) + v1)*2) + v4)*2))
((min((((v0*2) + v1)*4), (v2 + -4)) <= ((((min((v2 - (((v0*2) + v1)*4)), 4) + -1)/4) + ((v0*2) + v1))*4)) && ((min((((v3 - v4) - (v5*125))*2), v6) + (v5*250)) <= min(((v3 - v4)*2), ((v5*250) + v6))))
((min((((v0*2) + v1)*4), (v2 + v3)) + (v4*2)) <= (((((v0*2) + v1)*2) + v4)*2))
((min((((v0*2) + v1)*8), ((((v2 + v3) - v4)*2) + v5)) + (v4*2)) <= (((((v0*2) + v1)*4) + v4)*2))
((min((((v0*2) + v1)*8), (((v2 - v3)*2) + v4)) + (v3*2)) <= (((((v0*2) + v1)*4) + v3)*2))
((min((((v0*2) + v1)*8), (v2 + v3)) + (min(v4, v5)*2)) <= ((min(v4, v5) + (((v0*2) + v1)*4))*2))
((min((((v0*2) + v1)*8), (v2 + v3)) + (v4*2)) <= (((((v0*2) + v1)*4) + v4)*2))
((min((((v0*32) + v1) + 32), v2) + -3) <= (((((min((((v0*32) + v1) + 32), v2) - v1)/4) - (v0*8))*4) + ((v0*32) + v1)))
((min((((v0*32) + v1) + v2), v3) + -3) <= (((((min((((v0*32) + v1) + v2), v3) - v1)/4) - (v0*8))*4) + ((v0*32) + v1)))
((min((((v0*32) + v1) + v2), v3) <= (min(min((v3 - ((v0*32) + v1)), (((((min((((v0*32) + v1) + v2), v3) - v1)/4) - (v0*8))*4) + 3)), v2) + ((v0*32) + v1))) && (((((min((v4 - ((v5*16) + v6)), 16) + (v7 + v6)) + v8)/4) + (v5*4)) <= (((min((v4 - v6), ((v5*16) + 16)) + (v7 + v6)) + v8)/4)))
((min((((v0*32) + v1) + v2), v3) <= (min(min((v3 - ((v0*32) + v1)), (((((min((((v0*32) + v1) + v2), v3) - v1)/8) - (v0*4))*8) + 7)), v2) + ((v0*32) + v1))) && (((((v4*16) + v5) + v6)*2) <= (min((v6*2), ((((v6 + -1)/8)*16) + 17)) + (((v4*16) + v5)*2))))
((min((((v0*36) + v1) + v2), v3) + -3) <= (((((min((((v0*36) + v1) + v2), v3) - v1)/4) - (v0*9))*4) + ((v0*36) + v1)))
((min((((v0*4) + ((v1*v2) + v3)) + v4), (v5 + v3)) <= (((((min((((v0*4) + ((v1*v2) + v3)) + v4), (v5 + v3)) - (min(((v1*v2) + v6), v5) + v3)) + 3)/4)*4) + (min(((v1*v2) + v6), v5) + v3))) && (((min((v7 - ((v8*8) + v9)), -8) + (v8*8)) + 8) <= min((v8*8), ((v7 - v9) + 8))))
((min((((v0*4) + ((v1*v2) + v3)) + v4), v5) + 24) <= (min(((v1*v2) + v3), (v5 + v6)) + ((((min((((v0*4) + ((v1*v2) + v3)) + v4), v5) - min(((v1*v2) + v3), (v5 + v6))) + 27)/4)*4)))
((min((((v0*4) + v1)*4), (((v2 - v3)*2) + v4)) + (v3*2)) <= (((((v0*4) + v1)*2) + v3)*2))
((min((((v0*4) + v1)*4), ((v2*2) + v3)) + (((v4*v5) + v6)*2)) <= (((((v0*4) + v1)*2) + ((v4*v5) + v6))*2))
((min((((v0*4) + v1)*4), (v2 + -4)) <= ((((min((v2 - (((v0*4) + v1)*4)), 4) + -1)/4) + ((v0*4) + v1))*4)) && (((min((((((v3 + v4) + -1)/4)*v5) - ((v6*v5) + v7)), v8) + (v6*v5)) + v7) <= min(((((v3 + v4) + -1)/4)*v5), (((v6*v5) + v7) + v8))))
((min((((v0*4) + v1)*4), (v2 + -4)) <= ((((min((v2 - (((v0*4) + v1)*4)), 4) + -1)/4) + ((v0*4) + v1))*4)) && (((min(((v3 + v4) - ((v5*v6) + v7)), v6) + (v5*v6)) + v7) <= min((v3 + v4), (((v5*v6) + v7) + v6))))
((min((((v0*4) + v1)*4), (v2 + v3)) + (min(v4, v5)*2)) <= ((min(v4, v5) + (((v0*4) + v1)*2))*2))
((min((((v0*500) + v1) + v2), v3) + -3) <= (((((min((((v0*500) + v1) + v2), v3) - v1)/4) - (v0*125))*4) + ((v0*500) + v1)))
((min((((v0*68) + v1) + v2), v3) + -3) <= (((((min((((v0*68) + v1) + v2), v3) - v1)/4) - (v0*17))*4) + ((v0*68) + v1)))
((min((((v0*8) + v1) + v2), v3) + -3) <= (((((min((((v0*8) + v1) + v2), v3) - v1)/4) - (v0*2))*4) + ((v0*8) + v1)))
((min((((v0*8) + v1)*8), ((v2*2) + v3)) + (v4*2)) <= (((((v0*8) + v1)*4) + v4)*2))
((min((((v0*8) + v1)*8), (v2 + v3)) + (min(v4, v5)*2)) <= ((min(v4, v5) + (((v0*8) + v1)*4))*2))
((min((((v0*v1) + ((v2*v3) + v4))*v1), (((v4 + v5)*v1) + v6)) + -4) <= (min((((v2*v3) + v4)*v1), (((v4 + v5)*v1) + -1)) + ((((min((((v0*v1) + ((v2*v3) + v4))*v1), (((v4 + v5)*v1) + v6)) - min((((v2*v3) + v4)*v1), (((v4 + v5)*v1) + -1))) + -1)/4)*4)))
((min((((v0*v1) + ((v2*v3) + v4))*v1), (((v4 + v5)*v1) + v6)) + -4) <= (min((((v2*v3) + v4)*v1), (((v4 + v5)*v1) + v7)) + ((((min((((v0*v1) + ((v2*v3) + v4))*v1), (((v4 + v5)*v1) + v6)) - min((((v2*v3) + v4)*v1), (((v4 + v5)*v1) + v7))) + -1)/4)*4)))
((min((((v0*v1) + (min(((v2*8) + v3), 125) + (v4*125)))*4), (v5 + v6)) + (min(v7, v8)*2)) <= ((min(v7, v8) + (((v0*v1) + ((v4*125) + ((v2*8) + v3)))*2))*2))
((min((((v0*v1) + v2) + 4), v3) + 10) <= ((((min((v3 - ((v0*v1) + v2)), 4) + 13)/4)*4) + ((v0*v1) + v2)))
((min((((v0*v1) + v2) + 4), v3) <= min(((((min((v3 - ((v0*v1) + v2)), 4) + 3)/4)*4) + ((v0*v1) + v2)), v3)) && (((min(((v4 + v5) - ((v6*v7) + v8)), v9) + (v6*v7)) + v8) <= min((v4 + v5), (((v6*v7) + v8) + v9))))
((min((((v0*v1) + v2) + 4), v3) <= min(((((min((v3 - ((v0*v1) + v2)), 4) + 3)/4)*4) + ((v0*v1) + v2)), v3)) && (((min((v4 - ((v5*v1) + v6)), -3) + (v5*v1)) + 3) <= min((v5*v1), ((v4 - v6) + 3))))
((min((((v0*v1) + v2) + 4), v3) <= min(((((min((v3 - ((v0*v1) + v2)), 4) + 3)/4)*4) + ((v0*v1) + v2)), v3)) && (((min((v4 - ((v5*v6) + v7)), v8) + (v5*v6)) + v7) <= min((((v5*v6) + v7) + v8), v4)))
((min((((v0*v1) + v2) + v1), v3) + -4) <= ((((min((v3 - ((v0*v1) + v2)), v1) + -1)/4)*4) + ((v0*v1) + v2)))
((min((((v0*v1) + v2) + v3), v4) + -1) <= ((((min((v4 - ((v0*v1) + v2)), v3) + 2)/4)*4) + ((v0*v1) + v2)))
((min((((v0*v1) + v2) + v3), v4) + -2) <= ((((min((v4 - ((v0*v1) + v2)), v3) + 1)/4)*4) + ((v0*v1) + v2)))
((min((((v0*v1) + v2) + v3), v4) + -3) <= (((min((v4 - ((v0*v1) + v2)), v3)/4)*4) + ((v0*v1) + v2)))
((min((((v0*v1) + v2) + v3), v4) + 10) <= ((((min((v4 - ((v0*v1) + v2)), v3) + 13)/4)*4) + ((v0*v1) + v2)))
((min((((v0*v1) + v2) + v3), v4) + 11) <= ((((min((v4 - ((v0*v1) + v2)), v3) + 14)/4)*4) + ((v0*v1) + v2)))
((min((((v0*v1) + v2) + v3), v4) + 2) <= ((((min((v4 - ((v0*v1) + v2)), v3) + 5)/4)*4) + ((v0*v1) + v2)))
((min((((v0*v1) + v2) + v3), v4) + 3) <= ((((min((v4 - ((v0*v1) + v2)), v3) + 6)/4)*4) + ((v0*v1) + v2)))
((min((((v0*v1) + v2) + v3), v4) + 4) <= ((((min((v4 - ((v0*v1) + v2)), v3) + 7)/4)*4) + ((v0*v1) + v2)))
((min((((v0*v1) + v2) + v3), v4) <= min(((((min((v4 - ((v0*v1) + v2)), v3) + 3)/4)*4) + ((v0*v1) + v2)), v4)) && (((min(((v5 + v6) - ((v7*v8) + v9)), v8) + (v7*v8)) + v9) <= min((v5 + v6), (((v7*v8) + v9) + v8))))
((min((((v0*v1) + v2) + v3), v4) <= min(((((min((v4 - ((v0*v1) + v2)), v3) + 3)/4)*4) + ((v0*v1) + v2)), v4)) && (((min((v5 - ((v6*4) + v7)), -12) + (v6*4)) + 12) <= min((v6*4), ((v5 - v7) + 12))))
((min((((v0*v1) + v2) + v3), v4) <= min(((((min((v4 - ((v0*v1) + v2)), v3) + 3)/4)*4) + ((v0*v1) + v2)), v4)) && (((min((v5 - ((v6*4) + v7)), -7) + (v6*4)) + 7) <= min((v6*4), ((v5 - v7) + 7))))
((min((((v0*v1) + v2) + v3), v4) <= min(((((min((v4 - ((v0*v1) + v2)), v3) + 3)/4)*4) + ((v0*v1) + v2)), v4)) && (((min((v5 - ((v6*4) + v7)), 4) + (v6*4)) + v7) <= min((((v6*4) + v7) + 4), v5)))
((min((((v0*v1) + v2) + v3), v4) <= min(((((min((v4 - ((v0*v1) + v2)), v3) + 3)/4)*4) + ((v0*v1) + v2)), v4)) && (((min((v5 - ((v6*7) + v7)), -7) + (v6*7)) + 7) <= min((v6*7), ((v5 - v7) + 7))))
((min((((v0*v1) + v2) + v3), v4) <= min(((((min((v4 - ((v0*v1) + v2)), v3) + 3)/4)*4) + ((v0*v1) + v2)), v4)) && (((min((v5 - ((v6*v7) + v8)), -9) + (v6*v7)) + 9) <= min((v6*v7), ((v5 - v8) + 9))))
((min((((v0*v1) + v2) + v3), v4) <= min(((((min((v4 - ((v0*v1) + v2)), v3) + 3)/4)*4) + ((v0*v1) + v2)), v4)) && (((min((v5 - ((v6*v7) + v8)), v9) + (v6*v7)) + v8) <= min((((v6*v7) + v8) + v9), v5)))
((min((((v0*v1) + v2) + v3), v4) <= min((min((((min((v4 - ((v0*v1) + v2)), v3) + 3)/4)*4), v3) + ((v0*v1) + v2)), v4)) && (((min(((v5 + v6) - ((v7*2) + v8)), -2) + (v7*2)) + 2) <= min((v7*2), (((v5 + v6) - v8) + 2))))
((min((((v0*v1) + v2) + v3), v4) <= min((min((((min((v4 - ((v0*v1) + v2)), v3) + 3)/4)*4), v3) + ((v0*v1) + v2)), v4)) && (((min((v5 - ((v6*v7) + v8)), 4) + (v6*v7)) + v8) <= min((((v6*v7) + v8) + 4), v5)))
((min((((v0*v1) + v2) + v3), v4) <= min((min((((min((v4 - ((v0*v1) + v2)), v3) + 3)/4)*4), v3) + ((v0*v1) + v2)), v4)) && (((min((v5 - ((v6*v7) + v8)), v7) + (v6*v7)) + v8) <= min((((v6*v7) + v8) + v7), v5)))
((min((((v0*v1) + v2)*126), (v3 + v4)) + (min(v5, v6)*2)) <= ((min(v5, v6) + (((v0*v1) + v2)*63))*2))
((min((((v0*v1) + v2)*16), ((v3*2) + v4)) + (v5*2)) <= (((((v0*v1) + v2)*8) + v5)*2))
((min((((v0*v1) + v2)*4), (((v3 - v4)*2) + v5)) + (v4*2)) <= (((((v0*v1) + v2)*2) + v4)*2))
((min((((v0*v1) + v2)*4), ((v3*2) + v4)) + (((v5*v6) + v7)*2)) <= (((((v0*v1) + v2)*2) + ((v5*v6) + v7))*2))
((min((((v0*v1) + v2)*4), ((v3*2) + v4)) + (v5*2)) <= (((((v0*v1) + v2)*2) + v5)*2))
((min((((v0*v1) + v2)*4), (v3 + -4)) <= ((((min((v3 - (((v0*v1) + v2)*4)), 4) + -1)/4) + ((v0*v1) + v2))*4)) && (((min(((v4 + v5) - ((v6*v7) + v8)), v7) + (v6*v7)) + v8) <= min((v4 + v5), (((v6*v7) + v8) + v7))))
((min((((v0*v1) + v2)*4), (v3 + -4)) <= ((((min((v3 - (((v0*v1) + v2)*4)), 4) + -1)/4) + ((v0*v1) + v2))*4)) && (((min((v4 - ((v5*v6) + v7)), v8) + (v5*v6)) + v7) <= min((((v5*v6) + v7) + v8), v4)))
((min((((v0*v1) + v2)*4), (v3 + v4)) + (min(v5, v6)*2)) <= ((min(v5, v6) + (((v0*v1) + v2)*2))*2))
((min((((v0*v1) + v2)*4), (v3 + v4)) + (v5*2)) <= (((((v0*v1) + v2)*2) + v5)*2))
((min((((v0*v1) + v2)*502), (v3 + v4)) + (min(v5, v6)*2)) <= ((min(v5, v6) + (((v0*v1) + v2)*251))*2))
((min((((v0*v1) + v2)*v1), ((((v3 + v4) - v5)*v1) + v6)) + (v5*v1)) <= ((((v0*v1) + v2) + v5)*v1))
((min((((v0*v1) + v2)*v1), (((v3 - v4)*v1) + v5)) + (v4*v1)) <= ((((v0*v1) + v2) + v4)*v1))
((min((((v0*v1) + v2)*v1), ((v3*v1) + v4)) + (v5*v1)) <= ((((v0*v1) + v2) + v5)*v1))
((min((((v0*v1) + v2)*v1), (v3 + v4)) + (v5*v1)) <= ((((v0*v1) + v2) + v5)*v1))
((min((((v0*v1) + v2)*v3), ((((v4 + v5) - v6)*v3) + v7)) + (v6*v3)) <= ((((v0*v1) + v2) + v6)*v3))
((min((((v0*v1) + v2)*v3), (((v4 - v5)*v3) + v6)) + ((v7 + v5)*v3)) <= ((((v0*v1) + v2) + (v7 + v5))*v3))
((min((((v0*v1) + v2)*v3), (((v4 - v5)*v3) + v6)) + (v5*v3)) <= ((((v0*v1) + v2) + v5)*v3))
((min((((v0*v1) + v2)*v3), ((v4*v3) + v5)) + (((v6*v7) + v8)*v3)) <= ((((v0*v1) + v2) + ((v6*v7) + v8))*v3))
((min((((v0*v1) + v2)*v3), ((v4*v3) + v5)) + (v6*v3)) <= ((((v0*v1) + v2) + v6)*v3))
((min((((v0*v1) + v2)*v3), (v4 + v5)) + (min(v6, v7)*v3)) <= ((min(v6, v7) + ((v0*v1) + v2))*v3))
((min((((v0*v1) + v2)*v3), (v4 + v5)) + (v6*v3)) <= ((((v0*v1) + v2) + v6)*v3))
((min(((max(((v0 + -1)/4), 0)*4) + ((min(((v0 + 3)/4), 1)*4) + ((v1*v2) + v3))), ((((v0 + 3)/4)*4) + ((v1*v2) + v3))) + -4) <= ((((v0 + -1)/4)*4) + ((v1*v2) + v3)))
((min(((min((((((v0 - v1) + v2)/v3)*v3) + v1), (v0 + v4)) - min((v0 + v5), v1))*2), (((((min((((((v0 - v1) + v2)/v3)*v3) + v1), (v0 + v4)) - min((v0 + v5), v1)) + -1)/v6)*v7) + v8)) + (min(min((v0 + v5), v1), (min((((((v0 - v1) + v2)/v3)*v3) + v1), (v0 + v4)) + -1))*2)) <= min((min((((((v0 - v1) + v2)/v3)*v3) + v1), (v0 + v4))*2), (((min((v0 + v5), v1) + ((((min((((((v0 - v1) + v2)/v3)*v3) + v1), (v0 + v4)) - min((v0 + v5), v1)) + -1)/2)*2))*2) + 5)))
((min(((min(((((v0 + v1)/v2)*v2) + ((v3*v4) + v5)), (v6 + v5)) - (min((v3*v4), (v6 + v7)) + v5))*v8), (((((min(((((v0 + v1)/v2)*v2) + ((v3*v4) + v5)), (v6 + v5)) - (min((v3*v4), (v6 + v7)) + v5)) + v9)/v10)*v11) + v12)) + ((min((v3*v4), (v6 + v7)) + v5)*v8)) <= (min(((((v0 + v1)/v2)*v2) + ((v3*v4) + v5)), (v6 + v5))*v8))
((min(((min((((v0 + v1) + v2)/v3), ((v1/v3) + ((v4/v3)*v3))) - (((min(v0, v5) + v1) + v2)/v3))*v6), (((((min((((v0 + v1) + v2)/v3), ((v1/v3) + ((v4/v3)*v3))) - (((min(v0, v5) + v1) + v2)/v3)) + v7)/v8)*v9) + v10)) + ((((min(v0, v5) + v1) + v2)/v3)*v6)) <= (min((((v0 + v1) + v2)/v3), ((v1/v3) + ((v4/v3)*v3)))*v6))
((min(((min(((v0*v1) + v2), v3) + (v4*v3))*4), (v5 + v6)) + (min(v7, v8)*2)) <= ((min(v7, v8) + (((v4*v3) + ((v0*v1) + v2))*2))*2))
((min(((min((min((((v0*v1) + v2)*v3), v4) + (v5*v6)), v7) + (v8*v9)) + v3), v10) + -4) <= (((((min(((min((min((((v0*v1) + v2)*v3), v4) + (v5*v6)), v7) + (v8*v9)) + v3), v10) - ((v8*v9) + ((v5*v6) + (((v0*v1) + v2)*v3)))) + -1)/4)*4) + ((v8*v9) + ((v5*v6) + (((v0*v1) + v2)*v3)))))
((min(((min((v0*v1), v2) + (v3*v4)) + v1), v5) + -1) <= (((((min(((min((v0*v1), v2) + (v3*v4)) + v1), v5) - ((v3*v4) + (v0*v1))) + 2)/4)*4) + ((v3*v4) + (v0*v1))))
((min(((min((v0*v1), v2) + (v3*v4)) + v1), v5) + -3) <= ((((min(((min((v0*v1), v2) + (v3*v4)) + v1), v5) - ((v3*v4) + (v0*v1)))/4)*4) + ((v3*v4) + (v0*v1))))
((min(((min((v0*v1), v2) + (v3*v4)) + v1), v5) + -4) <= (((((min(((min((v0*v1), v2) + (v3*v4)) + v1), v5) - ((v3*v4) + (v0*v1))) + -1)/4)*4) + ((v3*v4) + (v0*v1))))
((min(((min((v0*v1), v2) + (v3*v4)) + v5), v6) + -3) <= ((((min(((min((v0*v1), v2) + (v3*v4)) + v5), v6) - ((v3*v4) + (v0*v1)))/4)*4) + ((v3*v4) + (v0*v1))))
((min(((min((v0*v1), v2) + (v3*v4)) + v5), v6) + 12) <= (((((min(((min((v0*v1), v2) + (v3*v4)) + v5), v6) - ((v3*v4) + (v0*v1))) + 15)/4)*4) + ((v3*v4) + (v0*v1))))
((min(((min((v0*v1), v2) + (v3*v4)) + v5), v6) <= (((((min(((min((v0*v1), v2) + (v3*v4)) + v5), v6) - ((v3*v4) + (v0*v1))) + 3)/4)*4) + ((v3*v4) + (v0*v1)))) && (((min(((v7 + v8) - ((v9*v10) + v11)), v10) + (v9*v10)) + v11) <= min((v7 + v8), (((v9*v10) + v11) + v10))))
((min(((v0 + v1) + v2), v3)/2) <= (v3/2))
((min(((v0 + v1)*v2), (((((v3/v2)*v2) + ((v4*v5) + v0))*v2) + v6)) + 26) <= (min((((v4*v5) + v0)*v2), (((v0 + v1)*v2) + v7)) + ((((min(((v0 + v1)*v2), (((((v3/v2)*v2) + ((v4*v5) + v0))*v2) + v6)) - min((((v4*v5) + v0)*v2), (((v0 + v1)*v2) + v7))) + 29)/4)*4)))
((min(((v0 + v1)*v2), (((((v3/v2)*v2) + ((v4*v5) + v0))*v2) + v6)) + 48) <= (min((((v4*v5) + v0)*v2), (((v0 + v1)*v2) + v7)) + ((((min(((v0 + v1)*v2), (((((v3/v2)*v2) + ((v4*v5) + v0))*v2) + v6)) - min((((v4*v5) + v0)*v2), (((v0 + v1)*v2) + v7))) + 51)/4)*4)))
((min(((v0 + v1)/2), (((v2 + v3)/2) + ((v4/4)*4))) <= ((min((v2 + v3), (v0 + v1))/2) + ((((min(((v0 + v1)/2), (((v2 + v3)/2) + ((v4/4)*4))) - (min((v2 + v3), (v0 + v1))/2)) + 3)/4)*4))) && (((((min((v5 - ((v6*502) + v7)), v8) + v7) + v9)/2) + (v6*251)) <= ((min((((v6*502) + v7) + v8), v5) + v9)/2)))
((min(((v0 + v1)/v2), (((v3 + v4)/v2) + ((v5/4)*4))) <= ((min((v3 + v4), (v0 + v1))/v2) + ((((min(((v0 + v1)/v2), (((v3 + v4)/v2) + ((v5/4)*4))) - (min((v3 + v4), (v0 + v1))/v2)) + 3)/4)*4))) && (((((min((v6 - ((v7*v8) + v9)), v10) + (v7*v8)) + v9) + v11)/v2) <= ((min((((v7*v8) + v9) + v10), v6) + v11)/v2)))
((min(((v0 + v1)/v2), (((v3 + v4)/v2) + ((v5/4)*4))) <= ((min((v3 + v4), (v0 + v1))/v2) + ((((min(((v0 + v1)/v2), (((v3 + v4)/v2) + ((v5/4)*4))) - (min((v3 + v4), (v0 + v1))/v2)) + 3)/4)*4))) && (((min((v6 - ((v7*v8) + v9)), (min((min((v10*v11), v12) + (v13*v14)), v15) + v11)) + (v7*v8)) + v9) <= min((((min((min((v10*v11), v12) + (v13*v14)), v15) + (v7*v8)) + v9) + v11), v6)))
((min(((v0 + v1)/v2), (((v3 + v4)/v2) + ((v5/4)*4))) <= ((min((v3 + v4), (v0 + v1))/v2) + ((((min(((v0 + v1)/v2), (((v3 + v4)/v2) + ((v5/4)*4))) - (min((v3 + v4), (v0 + v1))/v2)) + 3)/4)*4))) && (((min((v6 - ((v7*v8) + v9)), v8) + (v7*v8)) + v9) <= min((((v7*v8) + v9) + v8), v6)))
((min(((v0 + v1)/v2), ((v3/v2) + ((v4/4)*4))) <= ((min((v0 + v1), v3)/v2) + ((((min(((v0 + v1)/v2), ((v3/v2) + ((v4/4)*4))) - (min((v0 + v1), v3)/v2)) + 3)/4)*4))) && (((min((v5 - ((v6*v7) + v8)), v7) + (v6*v7)) + v8) <= min((((v6*v7) + v8) + v7), v5)))
((min(((v0 - ((v1 + v2)*2))*2), v3) + ((v1 + v2)*4)) <= min((v0*2), (((v1 + v2)*4) + v3)))
((min(((v0 - ((v1 + v2)*4))*2), v3) + ((v1 + v2)*8)) <= min((v0*2), (((v1 + v2)*8) + v3)))
((min(((v0 - (v1*2))*2), v2) + (v1*4)) <= min((v0*2), ((v1*4) + v2)))
((min(((v0 - (v1*4))*2), v2) + (v1*8)) <= min((v0*2), ((v1*8) + v2)))
((min(((v0 - (v1*63))*2), (min((((v2*2) + v3)*v4), v5) + v6)) + (v1*126)) <= min((v0*2), ((min((((v2*2) + v3)*v4), v5) + (v1*126)) + v6)))
((min(((v0 - (v1*63))*2), (min((v2*v3), v4) + v5)) + (v1*126)) <= min((v0*2), ((min((v2*v3), v4) + (v1*126)) + v5)))
((min(((v0 - (v1*64))*2), v2) + (v1*128)) <= min((v0*2), ((v1*128) + v2)))
((min(((v0 - v1)*4), ((v2*v3) + v4)) + -3) <= ((v2*v3) + ((min((((v0 - v1)*4) - (v2*v3)), v4)/4)*4)))
((min(((v0 - v1)*4), ((v2*v3) + v4)) + -5) <= ((v2*v3) + (((min((((v0 - v1)*4) - (v2*v3)), v4) + -2)/4)*4)))
((min(((v0 - v1)*v2), ((v3*v4) + v5)) + -3) <= ((v3*v4) + ((min((((v0 - v1)*v2) - (v3*v4)), v5)/4)*4)))
((min(((v0 - v1)*v2), v3) + (v1*v2)) <= min((v0*v2), ((v1*v2) + v3)))
((min(((v0*1008) + v1), v2) + 16) <= (min(((((min(((v0*1008) + v1), v2) + 141)/126) - (v0*8))*126), (min((v2 - (v0*1008)), v1) + 16)) + (v0*1008)))
((min(((v0*126) + v1), v2) + 7) <= (min(((((min(((v0*126) + v1), v2) + 69)/63) - (v0*2))*63), (min((v2 - (v0*126)), v1) + 7)) + (v0*126)))
((min(((v0*16) + 16), v1) <= (min(min(((((min(((v0*16) + 16), v1) + 7)/8) - (v0*2))*8), (v1 - (v0*16))), 16) + (v0*16))) && (select((v2 < v3), min((((v4*v5) + ((v6*2) + v3))*8), v7), (((v4*v5) + ((v6*2) + v3))*8)) <= (((v4*v5) + ((v6*2) + v3))*8)))
((min(((v0*16) + 16), v1) <= (min(min(((((min(((v0*16) + 16), v1) + 7)/8) - (v0*2))*8), (v1 - (v0*16))), 16) + (v0*16))) && (select((v2 < v3), min(((v4*v5) + (((v6*8) + v3)*v7)), v8), ((v4*v5) + (((v6*8) + v3)*v7))) <= ((v4*v5) + (((v6*8) + v3)*v7))))
((min(((v0*16) + 16), v1) <= (min(min(((((min(((v0*16) + 16), v1) + 7)/8) - (v0*2))*8), (v1 - (v0*16))), 16) + (v0*16))) && (select((v2 < v3), min((v3*2), v4), (v3*2)) <= (v3*2)))
((min(((v0*16) + v1), v2) + -1) <= ((((min((v2 - (v0*16)), v1) + 2)/4) + (v0*4))*4))
((min(((v0*16) + v1), v2) + -2) <= ((((min((v2 - (v0*16)), v1) + 1)/4) + (v0*4))*4))
((min(((v0*16) + v1), v2) + -3) <= (((min((v2 - (v0*16)), v1)/4) + (v0*4))*4))
((min(((v0*3) + (min(((1 - v1)*2), 1) + (v1*2))), ((v2 - v3) + 3)) + -1) <= min((min((v1*2), 1) + (v0*3)), ((v2 - v3) + 2)))
((min(((v0*32) + 32), v1) <= (min(min(((((min(((v0*32) + 32), v1) + 15)/16) - (v0*2))*16), (v1 - (v0*32))), 32) + (v0*32))) && ((min(min(((v2*v3) + ((v4*2) + v5)), ((v6 - (v7*v8)) + v9)), v10) + (v7*v8)) <= min(((v7*v8) + ((v2*v3) + ((v4*2) + v5))), (v6 + v9))))
((min(((v0*32) + 32), v1) <= (min(min(((((min(((v0*32) + 32), v1) + 7)/8) - (v0*4))*8), (v1 - (v0*32))), 32) + (v0*32))) && ((min(min(((v2*32) + ((v3*8) + ((v4*4) + v5))), ((v6 - (v7*v8)) + v9)), v10) + (v7*v8)) <= min(((v7*v8) + ((v2*32) + ((v3*8) + ((v4*4) + v5)))), (v6 + v9))))
((min(((v0*32) + 32), v1) <= (min(min(((((min(((v0*32) + 32), v1) + 7)/8) - (v0*4))*8), (v1 - (v0*32))), 32) + (v0*32))) && ((min(min(((v2*v3) + ((v4*8) + v5)), ((v6 - (v7*v8)) + v9)), v10) + (v7*v8)) <= min(((v7*v8) + ((v2*v3) + ((v4*8) + v5))), (v6 + v9))))
((min(((v0*32) + v1), v2) + -1) <= ((((min((v2 - (v0*32)), v1) + 2)/4) + (v0*8))*4))
((min(((v0*32) + v1), v2) + -2) <= ((((min((v2 - (v0*32)), v1) + 1)/4) + (v0*8))*4))
((min(((v0*32) + v1), v2) + -3) <= (((min((v2 - (v0*32)), v1)/4) + (v0*8))*4))
((min(((v0*32) + v1), v2) + 12) <= ((((min((v2 - (v0*32)), v1) + 15)/4) + (v0*8))*4))
((min(((v0*36) + 36), v1) + -4) <= ((((min((v1 - (v0*36)), 36) + -1)/4) + (v0*9))*4))
((min(((v0*36) + v1), v2) + 12) <= ((((min((v2 - (v0*36)), v1) + 15)/4) + (v0*9))*4))
((min(((v0*4) + ((((v1*v2) + v3)*v4) + v5)), (v6 + v5)) + -4) <= (((((min(((v0*4) + ((((v1*v2) + v3)*v4) + v5)), (v6 + v5)) - (min((((v1*v2) + v3)*v4), (v6 + -4)) + v5)) + -1)/4)*4) + (min((((v1*v2) + v3)*v4), (v6 + -4)) + v5)))
((min(((v0*4) + ((v1*v2) + v3)), ((v4 + v3) + v5)) + -4) <= (((((min(((v0*4) + ((v1*v2) + v3)), ((v4 + v3) + v5)) - (min((v1*v2), (v4 + -1)) + v3)) + -1)/4)*4) + (min((v1*v2), (v4 + -1)) + v3)))
((min(((v0*4) + ((v1*v2) + v3)), ((v4 + v3) + v5)) + -4) <= (((((min(((v0*4) + ((v1*v2) + v3)), ((v4 + v3) + v5)) - (min((v1*v2), (v4 + v6)) + v3)) + -1)/4)*4) + (min((v1*v2), (v4 + v6)) + v3)))
((min(((v0*4) + ((v1*v2) + v3)), (v4 + v3)) + -4) <= (((((min(((v0*4) + ((v1*v2) + v3)), (v4 + v3)) - (min((v1*v2), (v4 + -4)) + v3)) + -1)/4)*4) + (min((v1*v2), (v4 + -4)) + v3)))
((min(((v0*4) + ((v1*v2) + v3)), (v4 + v3)) + 2) <= (((((min(((v0*4) + ((v1*v2) + v3)), (v4 + v3)) - (min((v1*v2), (v4 + v5)) + v3)) + 5)/4)*4) + (min((v1*v2), (v4 + v5)) + v3)))
((min(((v0*64) + v1), v2) + -1) <= ((((min((v2 - (v0*64)), v1) + 2)/4) + (v0*16))*4))
((min(((v0*64) + v1), v2) + -2) <= ((((min((v2 - (v0*64)), v1) + 1)/4) + (v0*16))*4))
((min(((v0*64) + v1), v2) + -3) <= (((min((v2 - (v0*64)), v1)/4) + (v0*16))*4))
((min(((v0*68) + 68), v1) + -4) <= ((((min((v1 - (v0*68)), 68) + -1)/4) + (v0*17))*4))
((min(((v0*8) + 2), v1) + 2) <= ((((min((v1 - (v0*8)), 2) + 5)/4) + (v0*2))*4))
((min(((v0*8) + 8), v1) + -4) <= ((((min((v1 - (v0*8)), 8) + -1)/4) + (v0*2))*4))
((min(((v0*8) + v1), v2) + -1) <= ((((min((v2 - (v0*8)), v1) + 2)/4) + (v0*2))*4))
((min(((v0*8) + v1), v2) + -3) <= (((min((v2 - (v0*8)), v1)/4) + (v0*2))*4))
((min(((v0*v1) + ((((v2*v1) + v3)*v4) + v5)), (v6 + v5)) + -2) <= (((((min(((v0*v1) + ((((v2*v1) + v3)*v4) + v5)), (v6 + v5)) - (min((((v2*v1) + v3)*v4), (v6 + v7)) + v5)) + -1)/2)*2) + (min((((v2*v1) + v3)*v4), (v6 + v7)) + v5)))
((min(((v0*v1) + ((v2*v3) + v4)), (v5 + v4)) + -2) <= (((((min(((v0*v1) + ((v2*v3) + v4)), (v5 + v4)) - (min((v2*v3), (v5 + v6)) + v4)) + -1)/2)*2) + (min((v2*v3), (v5 + v6)) + v4)))
((min(((v0*v1) + (v2 + v3)), v4)/2) <= (v4/2))
((min(((v0*v1) + 16), v2) + 7) <= max(min(((v0*v1) + v3), v2), ((v0*v1) + 40)))
((min(((v0*v1) + v1), v2) + -4) <= ((v0*v1) + (((min((v2 - (v0*v1)), v1) + -1)/4)*4)))
((min(((v0*v1) + v2), v3) + -1) <= ((v0*v1) + (((min((v3 - (v0*v1)), v2) + 2)/4)*4)))
((min(((v0*v1) + v2), v3) + -2) <= ((v0*v1) + (((min((v3 - (v0*v1)), v2) + 1)/4)*4)))
((min(((v0*v1) + v2), v3) + -3) <= ((v0*v1) + ((min((v3 - (v0*v1)), v2)/4)*4)))
((min(((v0*v1) + v2), v3) + 11) <= ((v0*v1) + (((min((v3 - (v0*v1)), v2) + 14)/4)*4)))
((min(((v0*v1) + v2), v3) + 12) <= ((v0*v1) + (((min((v3 - (v0*v1)), v2) + 15)/4)*4)))
((min(((v0*v1) + v2), v3) + 3) <= ((v0*v1) + (((min((v3 - (v0*v1)), v2) + 6)/4)*4)))
((min(((v0*v1) + v2), v3) + 4) <= ((v0*v1) + (((min((v3 - (v0*v1)), v2) + 7)/4)*4)))
((min(((v0*v1) + v2), v3) + 8) <= ((v0*v1) + (((min((v3 - (v0*v1)), v2) + 11)/4)*4)))
((min(((v0/2)*4), ((((((v0/2)*2) + v1)/v2)*v3) + v4)) + (((v5*v6) + v7)*2)) <= ((((v0/2)*2) + ((v5*v6) + v7))*2))
((min((min((((min(v0, v1) + v2) + v3)/8), v4)*8), (((min((((v5 + v6)/499)*499), (v7 + v8)) + (min((((min(v0, v1) + v2) + v3)/8), v4)*4))*2) + -5)) <= min((min((((min(v0, v1) + v2) + v3)/8), v4)*8), (((min(min((((v5 + v6)/499)*499), (v7 + v8)), 499) + (min((((min(v0, v1) + v2) + v3)/8), v4)*4))*2) + -5))) && (min(((((min((((v5 + v6)/499)*499), (v7 + v8)) + -1)/2)*4) + (((((min((((v5 + v6)/499)*499), (v7 + v8))*2) + v9)/v10)*v10) + (min((((min(v0, v1) + v2) + v3)/8), v4)*8))), (((min((((v5 + v6)/499)*499), (v7 + v8)) + (min((((min(v0, v1) + v2) + v3)/8), v4)*4))*2) + -5)) <= min(((((min((((v5 + v6)/499)*499), (v7 + v8)) + -1)/2) + (min((((min(v0, v1) + v2) + v3)/8), v4)*2))*4), (((min((((v5 + v6)/499)*499), (v7 + v8)) + (min((((min(v0, v1) + v2) + v3)/8), v4)*4))*2) + -5))))
((min((min((((v0*v1) + v2)*v3), v4) + (v5*v4)), v6) <= ((v5*v4) + (((v0*v1) + v2)*v3))) && (select((v7 < v8), min((v8*v1), v9), (v8*v1)) <= (v8*v1)))
((min((min(((min((min((v0*v1), v2) + (v3*v4)), v5) + (v6*v7)) + v1), v8) + v9), ((((((min(((min((min((v0*v1), v2) + (v3*v4)), v5) + (v6*v7)) + v1), v8) - ((v6*v7) + ((v3*v4) + (v0*v1)))) + -1)/v10)*v10) + (((v6*v7) + ((v3*v4) + (v0*v1))) + v9)) + v10)) + -4) <= min((((((min(((min((min((v0*v1), v2) + (v3*v4)), v5) + (v6*v7)) + v1), v8) - ((v6*v7) + ((v3*v4) + (v0*v1)))) + -1)/4)*4) + (((v6*v7) + ((v3*v4) + (v0*v1))) + v9)), ((min(((min((min((v0*v1), v2) + (v3*v4)), v5) + (v6*v7)) + v1), v8) + v9) + -4)))
((min((min(v0, -5) + v1), 4) + 5) <= min(v1, 9))
((min((min(v0, v1) + 3), (v2 + v3)) + -11) <= v1)
((min((v0 + v1), v2)/2) <= (v2/2))
((min((v0 - ((v1*v2) + v3)), v2) + (v1*v2)) <= min((v0 - v3), ((v1*v2) + v2)))
((min((v0*12), ((v1 - v2) + 5)) + 12) <= (min(((((min((v0*12), ((v1 - v2) + 5)) + 17)/6) - (v0*2))*6), (min(((v1 - v2) - (v0*12)), -5) + 17)) + (v0*12)))
((min((v0*16), ((((v1 + v2) - v3)*2) + v4)) + (v3*2)) <= (((v0*8) + v3)*2))
((min((v0*16), (((v1 - v2)*2) + v3)) + (v2*2)) <= (((v0*8) + v2)*2))
((min((v0*16), ((v1*2) + v2)) + (((v3*16) + v4)*2)) <= (((v0*8) + ((v3*16) + v4))*2))
((min((v0*2), ((((((v1*v2) + v3)/v4) + ((v5/2)*2))*2) + v6)) + -1) <= (min(((((v1*v2) + v3)/v4)*2), ((v0*2) + v7)) + (((min((v0*2), ((((((v1*v2) + v3)/v4) + ((v5/2)*2))*2) + v6)) - min(((((v1*v2) + v3)/v4)*2), ((v0*2) + v7)))/2)*2)))
((min((v0*2), (((((v1 + v2)/v3) + ((v4/2)*2))*2) + v5)) + -1) <= (min((((v1 + v2)/v3)*2), ((v0*2) + v6)) + (((min((v0*2), (((((v1 + v2)/v3) + ((v4/2)*2))*2) + v5)) - min((((v1 + v2)/v3)*2), ((v0*2) + v6)))/2)*2)))
((min((v0*2), ((min((v1*v2), v3) + (v4*v5)) + v6)) + -1) <= (((((min((v0*2), ((min((v1*v2), v3) + (v4*v5)) + v6)) - ((v4*v5) + (v1*v2))) + 2)/4)*4) + ((v4*v5) + (v1*v2))))
((min((v0*2), ((v1*2) + v2)) + (v3*4)) <= (((v3*2) + v0)*2))
((min((v0*2), ((v1*v2) + v3)) + -1) <= ((v1*v2) + (((min(((v0*2) - (v1*v2)), v3) + 2)/4)*4)))
((min((v0*250), (((v1 - v2)*2) + v3)) + (v2*2)) <= (((v0*125) + v2)*2))
((min((v0*32), ((v1*2) + v2)) + (((v3*v4) + v5)*2)) <= (((v0*16) + ((v3*v4) + v5))*2))
((min((v0*34), (((v1 - v2)*2) + v3)) + (v2*2)) <= (((v0*17) + v2)*2))
((min((v0*36), (((v1 - v2)*2) + v3)) + (v2*2)) <= (((v0*18) + v2)*2))
((min((v0*4), ((((((v1 + v2) + v3)/4) - v4)*2) + v5)) + (v4*2)) <= (((v0*2) + v4)*2))
((min((v0*4), ((((v1 + v2) - v3)*2) + v4)) + (v3*2)) <= (((v0*2) + v3)*2))
((min((v0*4), (((v1 - v2)*2) + v3)) + (v2*2)) <= (((v0*2) + v2)*2))
((min((v0*4), ((v1*2) + v2)) + (((v3*4) + v4)*2)) <= (((v0*2) + ((v3*4) + v4))*2))
((min((v0*4), ((v1*2) + v2)) + (((v3*v4) + v5)*2)) <= (((v0*2) + ((v3*v4) + v5))*2))
((min((v0*4), ((v1*v2) + v3)) + -3) <= ((v1*v2) + ((min(((v0*4) - (v1*v2)), v3)/4)*4)))
((min((v0*4), (v1 + v2)) + (v3*2)) <= (((v0*2) + v3)*2))
((min((v0*64), ((v1*2) + v2)) + (v3*2)) <= (((v0*32) + v3)*2))
((min((v0*64), (v1 + v2)) + (v3*2)) <= (((v0*32) + v3)*2))
((min((v0*8), ((((v1 + v2) - v3)*2) + v4)) + (v3*2)) <= (((v0*4) + v3)*2))
((min((v0*8), (((v1 - v2)*2) + v3)) + (v2*2)) <= (((v0*4) + v2)*2))
((min((v0*8), ((v1*2) + v2)) + (((v3*v4) + v5)*2)) <= (((v0*4) + ((v3*v4) + v5))*2))
((min((v0*8), ((v1*2) + v2)) + ((v3 + v4)*2)) <= (((v0*4) + (v3 + v4))*2))
((min((v0*8), (v1 + v2)) + (v3*2)) <= (((v0*4) + v3)*2))
((min((v0*v1), (((((v2/v1)*v1) + ((v3*v4) + v5))*v1) + v6)) + -2) <= (min((((v3*v4) + v5)*v1), ((v0*v1) + v7)) + ((((min((v0*v1), (((((v2/v1)*v1) + ((v3*v4) + v5))*v1) + v6)) - min((((v3*v4) + v5)*v1), ((v0*v1) + v7))) + 1)/4)*4)))
((min((v0*v1), (((((v2/v1)*v1) + ((v3*v4) + v5))*v1) + v6)) + 26) <= (min((((v3*v4) + v5)*v1), ((v0*v1) + v7)) + ((((min((v0*v1), (((((v2/v1)*v1) + ((v3*v4) + v5))*v1) + v6)) - min((((v3*v4) + v5)*v1), ((v0*v1) + v7))) + 29)/4)*4)))
((min((v0*v1), (((((v2/v1)*v1) + ((v3*v4) + v5))*v1) + v6)) + 48) <= (min((((v3*v4) + v5)*v1), ((v0*v1) + v7)) + ((((min((v0*v1), (((((v2/v1)*v1) + ((v3*v4) + v5))*v1) + v6)) - min((((v3*v4) + v5)*v1), ((v0*v1) + v7))) + 51)/4)*4)))
((min((v0*v1), ((((v2 + v3) - v4)*v1) + v5)) + (v4*v1)) <= ((v0 + v4)*v1))
((min((v0*v1), ((((v2*v1) + ((v3*v4) + v5))*v1) + v6)) + 26) <= (min((((v3*v4) + v5)*v1), ((v0*v1) + v7)) + ((((min((v0*v1), ((((v2*v1) + ((v3*v4) + v5))*v1) + v6)) - min((((v3*v4) + v5)*v1), ((v0*v1) + v7))) + 29)/4)*4)))
((min((v0*v1), (((v2 - v3)*v1) + v4)) + ((v5 + v3)*v1)) <= (((v5 + v3) + v0)*v1))
((min((v0*v1), (((v2 - v3)*v1) + v4)) + (v3*v1)) <= ((v0 + v3)*v1))
((min((v0*v1), ((min((v2*v3), v4) + (v5*v6)) + v7)) + 3) <= (((((min((v0*v1), ((min((v2*v3), v4) + (v5*v6)) + v7)) - ((v5*v6) + (v2*v3))) + 6)/4)*4) + ((v5*v6) + (v2*v3))))
((min((v0*v1), ((v2*v1) + v3)) + (((((v4*v1) + v5)*v6) + v7)*v1)) <= ((((((v4*v1) + v5)*v6) + v7) + v0)*v1))
((min((v0*v1), ((v2*v1) + v3)) + (((v4 + v5)/v6)*v1)) <= ((((v4 + v5)/v6) + v0)*v1))
((min((v0*v1), ((v2*v1) + v3)) + (((v4*v1) + v5)*v1)) <= ((((v4*v1) + v5) + v0)*v1))
((min((v0*v1), ((v2*v1) + v3)) + (((v4*v5) + v6)*v1)) <= ((((v4*v5) + v6) + v0)*v1))
((min((v0*v1), ((v2*v1) + v3)) + ((v4/v5)*v1)) <= (((v4/v5) + v0)*v1))
((min((v0*v1), ((v2*v1) + v3)) + (v4*v1)) <= ((v0 + v4)*v1))
((min((v0*v1), ((v2*v3) + v3)) + -4) <= ((v2*v3) + (((min(((v0*v1) - (v2*v3)), v3) + -1)/4)*4)))
((min((v0*v1), ((v2*v3) + v4)) + -3) <= ((v2*v3) + ((min(((v0*v1) - (v2*v3)), v4)/4)*4)))
((min((v0*v1), ((v2*v3) + v4)) + -5) <= ((v2*v3) + (((min(((v0*v1) - (v2*v3)), v4) + -2)/4)*4)))
((min((v0*v1), ((v2*v3) + v4)) + 3) <= ((v2*v3) + (((min(((v0*v1) - (v2*v3)), v4) + 6)/4)*4)))
((min((v0*v1), ((v2*v3) + v4)) + 4) <= ((v2*v3) + (((min(((v0*v1) - (v2*v3)), v4) + 7)/4)*4)))
((min((v0*v1), (v2 + v3)) + (((v4*v1) + v5)*v1)) <= ((((v4*v1) + v5) + v0)*v1))
((min((v0*v1), (v2 + v3)) + (((v4*v5) + v6)*v1)) <= ((((v4*v5) + v6) + v0)*v1))
((min((v0*v1), (v2 + v3)) + (v4*v1)) <= ((v0 + v4)*v1))
((min((v0*v1), (v2 + v3)) + (v4*v1)) <= ((v4 + v0)*v1))
((min((v0*v1), v2) + ((((v3*v4) + v5)/v1)*v1)) <= (((((v3*v4) + v5)/v1) + v0)*v1))
((min(max(v0, 4), ((v1*16) + 16)) + -4) <= ((((min((max(v0, 4) - (v1*16)), 16) + -1)/4) + (v1*4))*4))
((min(max(v0, 4), ((v1*32) + 32)) + -4) <= ((((min((max(v0, 4) - (v1*32)), 32) + -1)/4) + (v1*8))*4))
((min(max(v0, 4), ((v1*v2) + v2)) + -4) <= ((v1*v2) + (((min((max(v0, 4) - (v1*v2)), v2) + -1)/4)*4)))
((min(max(v0, v1), (((v2*1000) + v3) + v4)) <= (min(min((max(v0, v1) - ((v2*1000) + v3)), (((((min(max(v0, v1), (((v2*1000) + v3) + v4)) - v3)/125) - (v2*8))*125) + 124)), v4) + ((v2*1000) + v3))) && (((min((v5 - ((v6*v7) + v8)), v7) + (v6*v7)) + v8) <= min((((v6*v7) + v8) + v7), v5)))
((min(max(v0, v1), (((v2*1000) + v3) + v4)) <= (min(min((max(v0, v1) - ((v2*1000) + v3)), (((((min(max(v0, v1), (((v2*1000) + v3) + v4)) - v3)/250) - (v2*4))*250) + 249)), v4) + ((v2*1000) + v3))) && (((min((v5 - ((v6*v7) + v8)), v7) + (v6*v7)) + v8) <= min((((v6*v7) + v8) + v7), v5)))
((min(min((((v0*v1) + v2)*v1), ((v3 - (v4*v5)) + v6)), v7) + (v4*v5)) <= min((min((((v0*v1) + v2)*v1), v7) + (v4*v5)), (v3 + v6)))
((min(min(((v0*v1) + ((v2*v3) + ((v4*v5) + v6))), ((v7 - (v8*v9)) + v10)), v11) + (v8*v9)) <= min(((v8*v9) + ((v0*v1) + ((v2*v3) + ((v4*v5) + v6)))), (v7 + v10)))
((min(min(((v0*v1) + ((v2*v3) + v4)), ((v5 - (v6*v7)) + v8)), v9) + (v6*v7)) <= min(((v6*v7) + ((v0*v1) + ((v2*v3) + v4))), (v5 + v8)))
((min(min((v0 + 3), v1), v2) <= v1) && (v3 <= (((((v3 - v1) + 3)/4)*4) + v1)))
((min(min((v0 + v1), (v2 + v3)), v4)/2) <= (v4/2))
((min(min((v0*v1), (v2 - (v3*v4))), v5) + (v3*v4)) <= min((min((v0*v1), v5) + (v3*v4)), v2))
((min(v0, v1) <= select((((v2*v3) + v4) < v5), min(v0, v1), v0)) && (select((((v2*v3) + v4) < v5), max((v0 + v6), v7), (v0 + v6)) <= max((v0 + v6), v7)))
((select((0 < v0), min(((((v1*v2) + v0)*v3) + v4), (v5 + v6)), ((((v1*v2) + v0)*v3) + v4)) <= ((((v1*v2) + v0)*v3) + v4)) && (min(v7, 0) <= select((min(v7, 0) < ((min(v7, 0) + v8) + v9)), 3, min(v7, 0))))
((select((0 < v0), min(((v1*v2) + (v0*v3)), ((v4 - v5) + v6)), ((v1*v2) + (v0*v3))) <= ((v1*v2) + (v0*v3))) && (min(v7, 0) <= select((min(v7, 0) < ((min(v7, 0) + v8) + v9)), 3, min(v7, 0))))
((select((0 < v0), min(((v1*v2) + (v0*v3)), v4), ((v1*v2) + (v0*v3))) + v5) <= min(select((((v1*v2) + (v0*v3)) < (min(((min((v0*v3), v6) + (v1*v2)) + v3), v4) + -2)), (min((min(((min((v0*v3), v6) + (v1*v2)) + v3), v4) - ((v1*v2) + (v0*v3))), 0) + (((v1*v2) + (v0*v3)) + v5)), (((v1*v2) + (v0*v3)) + v5)), (((v1*v2) + (v0*v3)) + v5)))
((select((0 < v0), min(v1, v2), v2) <= v2) && (v3 <= select((2 < v4), (min(v4, 0) + v3), v3)))
((select((v0 < v1), (((min((((v2*v3) + v1)*v3), ((v4 - v5) + v6)) + v5)*v3) + -19), ((((((v2*v3) + v1)*v3) + v5)*v3) + -18)) + 18) <= ((select((v0 < v1), min((((v2*v3) + v1)*v3), ((v4 - v5) + v6)), (((v2*v3) + v1)*v3)) + v5)*v3))
((select((v0 < v1), (((min((((v2*v3) + v1)*v4), (v5 + v6)) + ((v7*v8) + v9))*v3) + -49), ((((((v2*v3) + v1)*v4) + ((v7*v8) + v9))*v3) + -48)) + 48) <= ((select((v0 < v1), min((((v2*v3) + v1)*v4), (v5 + v6)), (((v2*v3) + v1)*v4)) + ((v7*v8) + v9))*v3))
((select((v0 < v1), (((min(((v2*v3) + (v1*v4)), (((v5 + v6) - v7) + v8)) + v7)*v9) + -31), (((((v2*v3) + (v1*v4)) + v7)*v9) + -30)) + 30) <= ((select((v0 < v1), min(((v2*v3) + (v1*v4)), (((v5 + v6) - v7) + v8)), ((v2*v3) + (v1*v4))) + v7)*v9))
((select((v0 < v1), (((min(((v2*v3) + (v1*v4)), (v5 + v6)) + ((v7*v8) + v9))*v10) + -49), (((((v2*v3) + (v1*v4)) + ((v7*v8) + v9))*v10) + -48)) + 48) <= ((select((v0 < v1), min(((v2*v3) + (v1*v4)), (v5 + v6)), ((v2*v3) + (v1*v4))) + ((v7*v8) + v9))*v10))
((select((v0 < v1), (((min(((v2*v3) + (v1*v4)), v5) + v6)*2) + -1), ((((v2*v3) + (v1*v4)) + v6)*2)) <= ((((v2*v3) + (v1*v4)) + v6)*2)) && (min(v7, v0) <= select((v7 < ((v7 + v8) + -1)), max(v7, v9), min(v7, v0))))
((select((v0 < v1), min((((v2*v3) + v1)*2), ((v4 - v5) + v6)), (((v2*v3) + v1)*2)) <= (((v2*v3) + v1)*2)) && (((min(((v4 - v5) - (((v2*v3) + v1)*2)), -2) + ((((v2*v3) + v1)*2) + v5)) + 2) <= (min((((v2*v3) + v1)*2), ((v4 - v5) + 2)) + v5)))
((select((v0 < v1), min(((v1*v2) + v3), (v4 + v5)), ((v1*v2) + v3)) <= ((v1*v2) + v3)) && (((min(((v4 + v5) - ((v1*v2) + v3)), v2) + (v1*v2)) + v3) <= min((v4 + v5), (((v1*v2) + v3) + v2))))
((select((v0 < v1), min(((v1*v2) + v3), v4), ((v1*v2) + v3)) <= ((v1*v2) + v3)) && (((min((v4 - ((v1*v2) + v3)), v2) + (v1*v2)) + v3) <= min((((v1*v2) + v3) + v2), v4)))
((select((v0 < v1), min(((v2*v3) + ((v4*v5) + (v1*v6))), v7), ((v2*v3) + ((v4*v5) + (v1*v6)))) <= ((v2*v3) + ((v4*v5) + (v1*v6)))) && (min(v8, v0) <= select((v8 < ((v8 + v9) + v10)), max(v8, v11), min(v8, v0))))
((select((v0 < v1), min(((v2*v3) + (v1*v4)), (v5 + v6)), ((v2*v3) + (v1*v4))) <= ((v2*v3) + (v1*v4))) && (((min(((((min((min((v1*v4), v7) + (v2*v3)), (v5 + v8)) - ((v2*v3) + (v1*v4))) + v9)/2)*2), ((min((min((v1*v4), v7) + (v2*v3)), (v5 + v8)) - ((v2*v3) + (v1*v4))) + 2)) + (((v2*v3) + (v1*v4)) + (v10 + v11))) + -2) <= (min((min((v1*v4), v7) + (v2*v3)), (v5 + v8)) + (v10 + v11))))
((select((v0 < v1), min((min(((v2*v3) + ((v4*v5) + v1)), v6) + (v7*v6)), v8), ((v7*v6) + ((v2*v3) + ((v4*v5) + v1)))) <= ((v7*v6) + ((v2*v3) + ((v4*v5) + v1)))) && ((min(min(((v2*v3) + ((v4*v5) + v1)), ((v8 - (v7*v6)) + v9)), v10) + (v7*v6)) <= min((min(((v2*v3) + ((v4*v5) + v1)), v10) + (v7*v6)), (v8 + v9))))
((select((v0 < v1), min((v1*v2), ((v3 - v4) + v5)), (v1*v2)) <= (v1*v2)) && (((min((v3 - ((v1*v2) + v4)), v6) + (v1*v2)) + v4) <= min((((v1*v2) + v4) + v6), v3)))
((v0 + -1) <= (((((v0 - v1) + 2)/4)*4) + v1))
((v0 + -1) <= ((((v0 - v1)/2)*2) + v1))
((v0 + -12) <= ((((v0 - v1)/4)*4) + v1))
((v0 + -14) <= ((((v0 - v1)/4)*4) + v1))
((v0 + -2) <= (((((v0 - v1) + 1)/4)*4) + v1))
((v0 + -3) <= ((((v0 - v1)/4)*4) + v1))
((v0 + -4) <= (((((v0 - v1) + -1)/4)*4) + v1))
((v0 + -7) <= ((((v0 - v1)/8)*8) + v1))
((v0 + -9) <= ((((v0 - v1)/4)*4) + v1))
((v0 + 2) <= (((((v0 - v1) + 3)/2)*2) + v1))
((v0 + 3) <= (min(v0, 4) + (((max(v0, 4) + 2)/4)*4)))
((v0 + v1) <= max((max(((((min(((((v2 + v3)/v4)*v4) + v4), v5) + v3)/v6)*v6) + ((((v2 + v3)/v4)*v4) + v7)), v0) + v1), ((((v8 + v9)/v6)*v6) + ((((v8 + v3)/v10)*v10) + v7))))
((v0 + v1) <= max((max(v2, v0) + v1), v3))
((v0 + v1) <= max(max((v2 + v3), (v0 + v1)), v4))
((v0 + v1) <= max(max(max(min((v2 + v3), (v4 + v5)), (v6 + v7)), v6), (max(v6, v0) + v1)))
((v0 + v1) <= max(max(max(min((v2 + v3), v4), (v5 + v6)), v5), (max(v5, v0) + v1)))
((v0 + v1) <= max(min(((((v2 + v3)/v4)*v4) + ((((v2 + v5)/v6)*v6) + v0)), ((v0 + v2) + v5)), (max((((v2 + v5)/v4)*v4), v1) + v0)))
((v0 + v1) <= max(min((v2 + v3), (v4 + v5)), (max(min(((v4 + v5) + v6), v2), v0) + v1)))
((v0 + v1) <= max(min((v2 + v3), v4), (max(min((v4 + v5), v2), v0) + v1)))
((v0 + v1) <= select((v1 < (v2 + -2)), (min((v2 - v1), 0) + (v0 + v1)), (v0 + v1)))
((v0 + v1) <= select((v1 < (v2 + -4)), (min((v2 - v1), 0) + (v0 + v1)), (v0 + v1)))
((v0 <= (((min((((v0 + 7)/4)*4), (v0 + 4)) + -1)/4)*4)) && (((min((max((v1 + v2), v3) - ((v4*v5) + v6)), v5) + (v4*v5)) + v6) <= min(max((v1 + v2), v3), (((v4*v5) + v6) + v5))))
((v0 <= (min(v0, 1) + (((max(v0, 1) + 2)/4)*4))) && (select((v1 < v2), min(((v2 + v3)*v4), v5), ((v2 + v3)*v4)) <= ((v2 + v3)*v4)))
((v0 <= (min(v0, 2) + (((max(v0, 2) + 1)/4)*4))) && (select((v1 < v2), min(((v2 + v3)*v4), (v5 + v6)), ((v2 + v3)*v4)) <= ((v2 + v3)*v4)))
((v0 <= (min(v0, 4) + (((max(v0, 4) + -1)/4)*4))) && ((((min((v1 - ((v2*v3) + v4)), 1) + (v2*v3)) + v4) + -1) <= min(((v2*v3) + v4), (v1 + -1))))
((v0 <= select((v0 < (v1 + 5)), min((v1 + 9), v0), v0)) && (select((v2 < v3), min((v3*v4), v5), (v3*v4)) <= (v3*v4)))
(max((((((((v0 + v1) + -1)/v2)*v3) - v4)*v3)/7), -1) <= max(((((((((v0 + v1) + -1)/v2)*v3) - v4)*v3) + 1)/7), 0))
(max(((((((v0 + v1) + -1)/4)*v2) - v3)/4), -1) <= max((((((((v0 + v1) + -1)/4)*v2) - v3) + 1)/4), 0))
(max(((((((v0 + v1) + -1)/v2) - v3)*v2)/15), -1) <= max((((((((v0 + v1) + -1)/v2) - v3)*v2) + 1)/15), 0))
(max(((((((v0 + v1) + -1)/v2) - v3)*v2)/7), -1) <= max((((((((v0 + v1) + -1)/v2) - v3)*v2) + 1)/7), 0))
(max(((((((v0 + v1) + -1)/v2)*v2) - v3)/7), -1) <= max((((((((v0 + v1) + -1)/v2)*v2) - v3) + 1)/7), 0))
(max(((((((v0 + v1) + -1)/v2)*v3) - v4)/7), -1) <= max((((((((v0 + v1) + -1)/v2)*v3) - v4) + 1)/7), 0))
(max(((((((v0 + v1) + -1)/v2)*v3) - v4)/8), -1) <= max((((((((v0 + v1) + -1)/v2)*v3) - v4) + 1)/8), 0))
(max(((((((v0 + v1) + v2)/v3)*v4) - v5)/46), -1) <= max((((((((v0 + v1) + v2)/v3)*v4) - v5) + 1)/46), 0))
(max(((((v0 + v1) - v2)*v3)/17), -1) <= max((((((v0 + v1) - v2)*v3) + 1)/17), 0))
(max(((((v0 + v1)*v2) - v3)/10), -1) <= max((((((v0 + v1)*v2) - v3) + 1)/10), 0))
(max(((((v0 + v1)*v2) - v3)/18), -1) <= max((((((v0 + v1)*v2) - v3) + 1)/18), 0))
(max(((((v0 + v1)*v2) - v3)/5), -1) <= max((((((v0 + v1)*v2) - v3) + 1)/5), 0))
(max(((((v0 + v1)*v2) - v3)/8), -1) <= max((((((v0 + v1)*v2) - v3) + 1)/8), 0))
(max(((((v0 + v1)*v2) - v3)/9), -1) <= max((((((v0 + v1)*v2) - v3) + 1)/9), 0))
(max((((v0 + v1) - v2)/10), -1) <= max(((((v0 + v1) - v2) + 1)/10), 0))
(max((((v0 + v1) - v2)/11), -1) <= max(((((v0 + v1) - v2) + 1)/11), 0))
(max((((v0 + v1) - v2)/12), -1) <= max(((((v0 + v1) - v2) + 1)/12), 0))
(max((((v0 + v1) - v2)/13), -1) <= max(((((v0 + v1) - v2) + 1)/13), 0))
(max((((v0 + v1) - v2)/16), -1) <= max(((((v0 + v1) - v2) + 1)/16), 0))
(max((((v0 + v1) - v2)/17), -1) <= max(((((v0 + v1) - v2) + 1)/17), 0))
(max((((v0 + v1) - v2)/18), -1) <= max(((((v0 + v1) - v2) + 1)/18), 0))
(max((((v0 + v1) - v2)/19), -1) <= max(((((v0 + v1) - v2) + 1)/19), 0))
(max((((v0 + v1) - v2)/2), -1) <= max(((((v0 + v1) - v2) + 1)/2), 0))
(max((((v0 + v1) - v2)/20), -1) <= max(((((v0 + v1) - v2) + 1)/20), 0))
(max((((v0 + v1) - v2)/3), -1) <= max(((((v0 + v1) - v2) + 1)/3), 0))
(max((((v0 + v1) - v2)/32), -1) <= max(((((v0 + v1) - v2) + 1)/32), 0))
(max((((v0 + v1) - v2)/33), -1) <= max(((((v0 + v1) - v2) + 1)/33), 0))
(max((((v0 + v1) - v2)/34), -1) <= max(((((v0 + v1) - v2) + 1)/34), 0))
(max((((v0 + v1) - v2)/36), -1) <= max(((((v0 + v1) - v2) + 1)/36), 0))
(max((((v0 + v1) - v2)/4), -1) <= max(((((v0 + v1) - v2) + 1)/4), 0))
(max((((v0 + v1) - v2)/5), -1) <= max(((((v0 + v1) - v2) + 1)/5), 0))
(max((((v0 + v1) - v2)/6), -1) <= max(((((v0 + v1) - v2) + 1)/6), 0))
(max((((v0 + v1) - v2)/63), -1) <= max(((((v0 + v1) - v2) + 1)/63), 0))
(max((((v0 + v1) - v2)/64), -1) <= max(((((v0 + v1) - v2) + 1)/64), 0))
(max((((v0 + v1) - v2)/65), -1) <= max(((((v0 + v1) - v2) + 1)/65), 0))
(max((((v0 + v1) - v2)/66), -1) <= max(((((v0 + v1) - v2) + 1)/66), 0))
(max((((v0 + v1) - v2)/67), -1) <= max(((((v0 + v1) - v2) + 1)/67), 0))
(max((((v0 + v1) - v2)/68), -1) <= max(((((v0 + v1) - v2) + 1)/68), 0))
(max((((v0 + v1) - v2)/7), -1) <= max(((((v0 + v1) - v2) + 1)/7), 0))
(max((((v0 + v1) - v2)/8), -1) <= max(((((v0 + v1) - v2) + 1)/8), 0))
(max((((v0 + v1) - v2)/9), -1) <= max(((((v0 + v1) - v2) + 1)/9), 0))
(max((((v0 - v1) + 3)/18), -1) <= max((((v0 - v1) + 4)/18), 0))
(max((((v0 - v1) + 3)/9), -1) <= max((((v0 - v1) + 4)/9), 0))
(max((((v0 - v1) + 6)/35), -1) <= max((((v0 - v1) + 7)/35), 0))
(max((((v0 - v1)*v2)/17), -1) <= max(((((v0 - v1)*v2) + 1)/17), 0))
(max((((v0 - v1)*v2)/5), -1) <= max(((((v0 - v1)*v2) + 1)/5), 0))
(max((((v0 - v1)*v2)/65), -1) <= max(((((v0 - v1)*v2) + 1)/65), 0))
(max((((v0 - v1)*v2)/7), -1) <= max(((((v0 - v1)*v2) + 1)/7), 0))
(max((((v0 - v1)*v2)/9), -1) <= max(((((v0 - v1)*v2) + 1)/9), 0))
(max((((v0*v1) - v2)/10), -1) <= max(((((v0*v1) - v2) + 1)/10), 0))
(max((((v0*v1) - v2)/128), -1) <= max(((((v0*v1) - v2) + 1)/128), 0))
(max((((v0*v1) - v2)/130), -1) <= max(((((v0*v1) - v2) + 1)/130), 0))
(max((((v0*v1) - v2)/15), -1) <= max(((((v0*v1) - v2) + 1)/15), 0))
(max((((v0*v1) - v2)/17), -1) <= max(((((v0*v1) - v2) + 1)/17), 0))
(max((((v0*v1) - v2)/19), -1) <= max(((((v0*v1) - v2) + 1)/19), 0))
(max((((v0*v1) - v2)/21), -1) <= max(((((v0*v1) - v2) + 1)/21), 0))
(max((((v0*v1) - v2)/33), -1) <= max(((((v0*v1) - v2) + 1)/33), 0))
(max((((v0*v1) - v2)/4), -1) <= max(((((v0*v1) - v2) + 1)/4), 0))
(max((((v0*v1) - v2)/63), -1) <= max(((((v0*v1) - v2) + 1)/63), 0))
(max((((v0*v1) - v2)/65), -1) <= max(((((v0*v1) - v2) + 1)/65), 0))
(max((((v0*v1) - v2)/7), -1) <= max(((((v0*v1) - v2) + 1)/7), 0))
(max((((v0*v1) - v2)/8), -1) <= max(((((v0*v1) - v2) + 1)/8), 0))
(max((((v0*v1) - v2)/9), -1) <= max(((((v0*v1) - v2) + 1)/9), 0))
(max((((v0/4) - v1)/4), -1) <= max(((((v0/4) - v1) + 1)/4), 0))
(max(((max((((v0 + v1) + -1)/4), v2) - v3)/4), -1) <= max((((max((((v0 + v1) + -1)/4), v2) - v3) + 1)/4), 0))
(max(((max((((v0 + v1) + -1)/v2), v3) - v4)/16), -1) <= max((((max((((v0 + v1) + -1)/v2), v3) - v4) + 1)/16), 0))
(max(((max((((v0 + v1) + -1)/v2), v3) - v4)/2), -1) <= max((((max((((v0 + v1) + -1)/v2), v3) - v4) + 1)/2), 0))
(max(((max((((v0 + v1) + -1)/v2), v3) - v4)/32), -1) <= max((((max((((v0 + v1) + -1)/v2), v3) - v4) + 1)/32), 0))
(max(((max((((v0 + v1) + -1)/v2), v3) - v4)/8), -1) <= max((((max((((v0 + v1) + -1)/v2), v3) - v4) + 1)/8), 0))
(max(((max(((v0 + v1)*2), v2) - v3)/2), -1) <= max((((max(((v0 + v1)*2), v2) - v3) + 1)/2), 0))
(max(((max(((v0 + v1)*v2), v3) - v4)/16), -1) <= max((((max(((v0 + v1)*v2), v3) - v4) + 1)/16), 0))
(max(((max(((v0 + v1)*v2), v3) - v4)/4), -1) <= max((((max(((v0 + v1)*v2), v3) - v4) + 1)/4), 0))
(max(((max(((v0 + v1)*v2), v3) - v4)/8), -1) <= max((((max(((v0 + v1)*v2), v3) - v4) + 1)/8), 0))
(max(((max((v0 + v1), v2) - v3)/2), -1) <= max((((max((v0 + v1), v2) - v3) + 1)/2), 0))
(max(((v0 - v1)/10), -1) <= max((((v0 - v1) + 1)/10), 0))
(max(((v0 - v1)/11), -1) <= max((((v0 - v1) + 1)/11), 0))
(max(((v0 - v1)/12), -1) <= max((((v0 - v1) + 1)/12), 0))
(max(((v0 - v1)/126), -1) <= max((((v0 - v1) + 1)/126), 0))
(max(((v0 - v1)/16), -1) <= max((((v0 - v1) + 1)/16), 0))
(max(((v0 - v1)/17), -1) <= max((((v0 - v1) + 1)/17), 0))
(max(((v0 - v1)/18), -1) <= max((((v0 - v1) + 1)/18), 0))
(max(((v0 - v1)/2), -1) <= max((((v0 - v1) + 1)/2), 0))
(max(((v0 - v1)/3), -1) <= max((((v0 - v1) + 1)/3), 0))
(max(((v0 - v1)/32), -1) <= max((((v0 - v1) + 1)/32), 0))
(max(((v0 - v1)/35), -1) <= max((((v0 - v1) + 1)/35), 0))
(max(((v0 - v1)/4), -1) <= max((((v0 - v1) + 1)/4), 0))
(max(((v0 - v1)/5), -1) <= max((((v0 - v1) + 1)/5), 0))
(max(((v0 - v1)/6), -1) <= max((((v0 - v1) + 1)/6), 0))
(max(((v0 - v1)/63), -1) <= max((((v0 - v1) + 1)/63), 0))
(max(((v0 - v1)/8), -1) <= max((((v0 - v1) + 1)/8), 0))
(max(((v0 - v1)/9), -1) <= max((((v0 - v1) + 1)/9), 0))
(max(((v0*v1)/17), -1) <= max((((v0*v1) + 1)/17), 0))
(max(((v0*v1)/3), -1) <= max((((v0*v1) + 1)/3), 0))
(max(((v0*v1)/31), -1) <= max((((v0*v1) + 1)/31), 0))
(max(((v0*v1)/33), -1) <= max((((v0*v1) + 1)/33), 0))
(max(((v0*v1)/63), -1) <= max((((v0*v1) + 1)/63), 0))
(max(((v0*v1)/7), -1) <= max((((v0*v1) + 1)/7), 0))
(max(((v0*v1)/9), -1) <= max((((v0*v1) + 1)/9), 0))
(max((min((v0*2), 1) + 1), (min(((1 - v0)*2), 1) + (v0*2))) < ((v0*2) + 2))
(max((v0 + v1), v2) <= max((max((v3 + v4), v0) + v1), v2))
(max((v0 + v1), v2) <= max((max(min((((((min(v3, v4) + v5)/v6)*v6) + v7) + v8), (min(v9, v10) + v11)), v0) + v1), v2))
(max((v0/16), -1) <= max(((v0 + 1)/16), 0))
(max((v0/17), -1) <= max(((v0 + 1)/17), 0))
(max((v0/2), -1) <= max(((v0 + 1)/2), 0))
(max((v0/3), -1) <= max(((v0 + 1)/3), 0))
(max((v0/32), -1) <= max(((v0 + 1)/32), 0))
(max((v0/4), -1) <= max(((v0 + 1)/4), 0))
(max((v0/5), -1) <= max(((v0 + 1)/5), 0))
(max((v0/6), -1) <= max(((v0 + 1)/6), 0))
(max((v0/63), -1) <= max(((v0 + 1)/63), 0))
(max((v0/8), -1) <= max(((v0 + 1)/8), 0))
(max((v0/9), -1) <= max(((v0 + 1)/9), 0))
(min(((((((min((((v0 + v1)/v2)*v3), ((v4*2) + v5)) + -1)/4)*2) + ((((min((((v0 + v1)/v2)*v3), ((v4*2) + v5)) + -1)/v2)*v6) + ((v7*v8) + v9)))*2) + 4), (min((((v0 + v1)/v2)*v3), ((v4*2) + v5)) + (((v7*v8) + v9)*2))) <= min(((((((min((((v0 + v1)/v2)*v3), ((v4*2) + v5)) + -1)/4)*2) + ((v7*v8) + v9))*2) + 4), (min((((v0 + v1)/v2)*v3), ((v4*2) + v5)) + (((v7*v8) + v9)*2))))
(min(((((((v0 - v1) + 5)/v2)*v2) + v1)*v3), ((v1*v3) + 5)) <= (min((min(((((v0 - v1) + 5)/v2)*v3), 127)*v2), 5) + (v1*v3)))
(min(((((((v0 - v1) + v2)/4)*4) + (v1 + v3)) + 4), (v0 + v3)) <= min((((((v0 - v1) + 3)/4)*4) + (v1 + v3)), (v0 + v3)))
(min(((((((v0 - v1) + v2)/4)*4) + v1) + v3), v0) <= (((((v0 - v1) + 3)/4)*4) + v1))
(min(((((((v0*v1) + v2) + v3)/2) + v4)*2), (((((((v0*v1) + v2) + v3)/2) + ((v4/2)*2))*2) + v5)) <= min(((((((v0*v1) + v2) + v3)/2) + v4)*2), (((((v4/2)*2) + (((((v0*v1) + v2) + v3)/2) + (max((v6/4), 0)*4)))*2) + v5)))
(min(((((((v0*v1) + v2) + v3)/2) + v4)*2), (((((v4/2)*2) + (((((v0*v1) + v2) + v3)/2) + (max((v5/v6), v7)*v6)))*2) + 3)) <= min(((((((v0*v1) + v2) + v3)/2) + v4)*2), (((((((v0*v1) + v2) + v3)/2) + ((v4/2)*2))*2) + 3)))
(min((((((min(((min((v0*v1), v2) + (v3*v4)) + v1), v5) - ((v3*v4) + (v0*v1))) + -1)/4)*4) + (((((min(((min((v0*v1), v2) + (v3*v4)) + v1), v5) - ((v3*v4) + (v0*v1))) + -1)/v6)*v6) + (((v3*v4) + (v0*v1)) + v7))), (((min(((min((v0*v1), v2) + (v3*v4)) + v1), v5) - ((v3*v4) + (v0*v1))) + (((v3*v4) + (v0*v1)) + v7)) + -4)) <= min((((((min(((min((v0*v1), v2) + (v3*v4)) + v1), v5) - ((v3*v4) + (v0*v1))) + -1)/4)*4) + (((v3*v4) + (v0*v1)) + v7)), ((min(((min((v0*v1), v2) + (v3*v4)) + v1), v5) + v7) + -4)))
(min((((((min(((min((v0*v1), v2) + (v3*v4)) + v1), v5) - ((v3*v4) + (v0*v1))) + 2)/4)*4) + (((((min(((min((v0*v1), v2) + (v3*v4)) + v1), v5) - ((v3*v4) + (v0*v1))) + -1)/v6)*v6) + (((v3*v4) + (v0*v1)) + v7))), (((min(((min((v0*v1), v2) + (v3*v4)) + v1), v5) - ((v3*v4) + (v0*v1))) + (((v3*v4) + (v0*v1)) + v7)) + -1)) <= min((((((min(((min((v0*v1), v2) + (v3*v4)) + v1), v5) - ((v3*v4) + (v0*v1))) + 2)/4)*4) + (((v3*v4) + (v0*v1)) + v7)), ((min(((min((v0*v1), v2) + (v3*v4)) + v1), v5) + v7) + -1)))
(min((((((v0 + v1)/4)*2) + v2)*2), ((v2*2) + v3)) <= (min((((v0 + v1)/4)*4), v3) + (v2*2)))
(min((((((v0 - v1) + -1)/4)*4) + ((((((((v0 - v1) + 3)/4)*4) + -1)/v2)*v2) + v1)), ((((((v0 - v1) + 3)/4)*4) + v1) + -4)) <= (((((v0 - v1) + -1)/4)*4) + v1))
(min((((((v0 - v1) + v2)/4)*4) + v1), (v0 + v3)) <= min((((((v0 - v1) + v2)/4)*4) + v1), (min((((((v0 - v1) + 3)/4)*4) + v1), v0) + v3)))
(min((((((v0 - v1) + v2)/v3)*v3) + v1), (min((((((v0 - v1) + v4)/v3)*v3) + v1), v0) + v5)) <= min((((((v0 - v1) + v2)/v3)*v3) + v1), (v0 + v5)))
(min((((((v0*2) + v1)*16) + v2) + v3), v4) <= (min(min((v4 - ((((v0*2) + v1)*16) + v2)), (((((min((((((v0*2) + v1)*16) + v2) + v3), v4) - v2)/8) - (((v0*2) + v1)*2))*8) + 7)), v3) + ((((v0*2) + v1)*16) + v2)))
(min((((((v0*v1) + v2) + v3)/2)*2), (((min(((min((v4/4), v5)*4) + v6), v7) + ((((v0*v1) + v2) + v3)/2))*2) + v8)) <= min((((((v0*v1) + v2) + v3)/2)*2), (((min((((v4/4)*4) + v6), v7) + ((((v0*v1) + v2) + v3)/2))*2) + v8)))
(min(((((max(v0, 4) + -1)/4)*4) + ((((max(v0, 4) + -1)/v1)*v1) + (min(v0, 4) + v2))), ((max(v0, 4) + (min(v0, 4) + v2)) + -4)) <= min(((((max(v0, 4) + -1)/4)*4) + (min(v0, 4) + v2)), (v0 + v2)))
(min(((((min((((v0 + v1)/v2)*v2), v3) + -1)/4)*4) + ((((min((((v0 + v1)/v2)*v2), v3) + -1)/v4)*v4) + ((v5*v6) + v7))), ((min((((v0 + v1)/v2)*v2), v3) + ((v5*v6) + v7)) + -4)) <= (min((((min((((v0 + v1)/v2)*v2), v3) + -1)/4)*4), (min((((v0 + v1)/v2)*v2), v3) + -4)) + ((v5*v6) + v7)))
(min(((((v0 + -1)/4)*4) + (((((((v0 + 3)/4)*4) + -1)/v1)*v1) + ((v2*v3) + v4))), (((((v0 + 3)/4)*4) + ((v2*v3) + v4)) + -4)) <= ((((v0 + -1)/4)*4) + ((v2*v3) + v4)))
(min(((((v0 + -1)/4)*4) + ((((v0 + -1)/v1)*v1) + v2)), ((v0 + v2) + -4)) <= ((((v0 + -1)/4)*4) + v2))
(min(((((v0 + -1)/4)*4) + ((((v0 + -1)/v1)*v1) + v2)), ((v0 + v2) + -4)) <= (min((((v0 + -1)/4)*4), (v0 + -4)) + v2))
(min(((((v0 + -1)/63)*63) + 63), v1) <= min((((v0 + 62)/63)*63), v1))
(min(((((v0 + 11)/4)*4) + (((((((v0 + 3)/4)*4) + v1)/v2)*v2) + ((v3*v4) + v5))), (((((v0 + 3)/4)*4) + ((v3*v4) + v5)) + 5)) <= (min((((v0 + 11)/4)*4), ((((v0 + 3)/4)*4) + 5)) + ((v3*v4) + v5)))
(min(((((v0 + 11)/4)*4) + (((((((v0 + 3)/4)*4) + v1)/v2)*v2) + ((v3*v4) + v5))), (((((v0 + 3)/4)*4) + ((v3*v4) + v5)) + 7)) <= (min((((v0 + 11)/4)*4), ((((v0 + 3)/4)*4) + 7)) + ((v3*v4) + v5)))
(min(((((v0 + 15)/4)*4) + (((((((v0 + 3)/4)*4) + v1)/v2)*v2) + ((v3*v4) + v5))), (((((v0 + 3)/4)*4) + ((v3*v4) + v5)) + 9)) <= (min((((v0 + 15)/4)*4), ((((v0 + 3)/4)*4) + 9)) + ((v3*v4) + v5)))
(min(((((v0 + 18)/4)*4) + ((((v0 + v1)/v2)*v2) + v3)), ((v0 + v3) + 15)) <= (min((((v0 + 18)/4)*4), (v0 + 15)) + v3))
(min(((((v0 + 21)/4)*4) + (((((((v0 + 5)/4)*4) + v1)/v2)*v2) + ((v3*v4) + v5))), (((((v0 + 5)/4)*4) + ((v3*v4) + v5)) + 13)) <= (min((((v0 + 21)/4)*4), ((((v0 + 5)/4)*4) + 13)) + ((v3*v4) + v5)))
(min(((((v0 + 23)/4)*4) + (((((((v0 + 3)/4)*4) + v1)/v2)*v2) + ((v3*v4) + v5))), (((((v0 + 3)/4)*4) + ((v3*v4) + v5)) + 20)) <= ((((v0 + 23)/4)*4) + ((v3*v4) + v5)))
(min(((((v0 + 7)/4)*4) + (((((((v0 + 3)/4)*4) + v1)/v2)*v2) + ((v3*v4) + v5))), (((((v0 + 3)/4)*4) + ((v3*v4) + v5)) + 4)) <= ((((v0 + 7)/4)*4) + ((v3*v4) + v5)))
(min(((((v0*2) + v1)*16) + 16), v2) <= (min(min(((((min(((((v0*2) + v1)*16) + 16), v2) + 7)/8) - (((v0*2) + v1)*2))*8), (v2 - (((v0*2) + v1)*16))), 16) + (((v0*2) + v1)*16)))
(min(((((v0*2) + v1)*8) + 8), v2) <= (min(min(((((min(((((v0*2) + v1)*8) + 8), v2) + 3)/4) - (((v0*2) + v1)*2))*4), (v2 - (((v0*2) + v1)*8))), 8) + (((v0*2) + v1)*8)))
(min(((((v0*4) + ((v1*2) + v2))*8) + 8), v3) <= (min(min(((((min(((((v0*4) + ((v1*2) + v2))*8) + 8), v3) + 3)/4) - (((v0*4) + ((v1*2) + v2))*2))*4), (v3 - (((v0*4) + ((v1*2) + v2))*8))), 8) + (((v0*4) + ((v1*2) + v2))*8)))
(min(((((v0*4) + v1)*8) + 8), v2) <= (min(min(((((min(((((v0*4) + v1)*8) + 8), v2) + 3)/4) - (((v0*4) + v1)*2))*4), (v2 - (((v0*4) + v1)*8))), 8) + (((v0*4) + v1)*8)))
(min(((((v0/4) + ((v1/4) + (max((v2/v3), v4)*v3)))*4) + 3), (((v1/4)*4) + v0)) <= min(((((v1/4) + (v0/4))*4) + 3), (((v1/4)*4) + v0)))
(min(((((v0/4) + (v1/4))*4) + v2), (((v0/4)*4) + v1)) <= min(((((v1/4) + ((v0/4) + (max((v3/125), 0)*125)))*4) + v2), (((v0/4)*4) + v1)))
(min(((((v0/4)*4) + ((v1*v2) + v3)) + 3), (v4 + v3)) <= (((((min(((((v0/4)*4) + ((v1*v2) + v3)) + 3), (v4 + v3)) - (min(((v1*v2) + 3), v4) + v3)) + 3)/4)*4) + (min(((v1*v2) + 3), v4) + v3)))
(min((((max((((v0 - v1) + v2)/4), v3)*4) + ((min((((v0 - v1) + 3)/4), v4)*4) + v1)) + 3), (((((v0 - v1) + 3)/4)*4) + v1)) <= min((min(((max((((v0 - v1) + v2)/4), v3)*4) + ((min((((v0 - v1) + 3)/4), v4)*4) + v1)), ((((min((((max((((v0 - v1) + v2)/4), v3)*4) + ((min((((v0 - v1) + 3)/4), v4)*4) + v1)) + 3), (((((v0 - v1) + 3)/4)*4) + v1)) - (min((min((((v0 - v1) + 3)/4), v4)*4), (((((v0 - v1) + 3)/4)*4) + v5)) + v1))/4)*4) + (min((min((((v0 - v1) + 3)/4), v4)*4), (((((v0 - v1) + 3)/4)*4) + v5)) + v1))) + 3), (((((v0 - v1) + 3)/4)*4) + v1)))
(min((((v0 + 3)/4)*4), ((((v0 + -1)/v1)*v1) + v1)) <= min((((v0 + 3)/4)*4), ((((v0 + -1)/16)*16) + 16)))
(min((((v0 + v1) + v2)/4), ((((v3*v4) + v0)/4) + ((v5/4)*4))) <= (((min((v3*v4), (v1 + v2)) + v0)/4) + ((((min((((v0 + v1) + v2)/4), ((((v3*v4) + v0)/4) + ((v5/4)*4))) - ((min((v3*v4), (v1 + v2)) + v0)/4)) + 3)/4)*4)))
(min((((v0 + v1) + v2)/4), ((v1/4) + ((v3/4)*4))) <= ((((min(v0, v4) + v1) + v2)/4) + ((((min((((v0 + v1) + v2)/4), ((v1/4) + ((v3/4)*4))) - (((min(v0, v4) + v1) + v2)/4)) + 3)/4)*4)))
(min((((v0 + v1) + v2)/4), ((v1/4) + ((v3/4)*4))) <= ((((min(v0, v4) + v1) + v5)/4) + ((((min((((v0 + v1) + v2)/4), ((v1/4) + ((v3/4)*4))) - (((min(v0, v4) + v1) + v5)/4)) + 3)/4)*4)))
(min((((v0 + v1)*v2) + -4), v3) <= min(((v0 + v1)*v2), v3))
(min((((v0 + v1)/4)*4), (min(v0, -4) + 8)) <= min(min((((v0 + v1)/4)*4), (v0 + 8)), 4))
(min((((v0 + v1)/v2)*v2), (min(v3, -6) + 10)) <= min(min((((v0 + v1)/v2)*v2), (v3 + 10)), 4))
(min((((v0 + v1)/v2)*v2), (min(v3, 1) + 3)) <= min(min((((v0 + v1)/v2)*v2), (v3 + 3)), 4))
(min((((v0 + v1)/v2)*v2), -5) <= min((min(((v0 + v1)/v2), 15)*v2), -5))
(min((((v0*16) + v1) + 7), v2) <= (min(min((v2 - ((v0*16) + v1)), (((((min((((v0*16) + v1) + 7), v2) - v1)/8) - (v0*2))*8) + 7)), 7) + ((v0*16) + v1)))
(min((((v0*16) + v1) + v2), v3) <= (min(min((v3 - ((v0*16) + v1)), (((((min((((v0*16) + v1) + v2), v3) - v1)/8) - (v0*2))*8) + 7)), v2) + ((v0*16) + v1)))
(min((((v0*32) + v1) + v2), v3) <= (min(min((v3 - ((v0*32) + v1)), (((((min((((v0*32) + v1) + v2), v3) - v1)/16) - (v0*2))*16) + 15)), v2) + ((v0*32) + v1)))
(min((((v0*32) + v1) + v2), v3) <= (min(min((v3 - ((v0*32) + v1)), (((((min((((v0*32) + v1) + v2), v3) - v1)/8) - (v0*4))*8) + 7)), v2) + ((v0*32) + v1)))
(min((((v0*4) + ((((v1*v2) + v3)*v4) + v5)) + 3), (v6 + v5)) <= min((min(((v0*4) + ((((v1*v2) + v3)*v4) + v5)), ((((min((((v0*4) + ((((v1*v2) + v3)*v4) + v5)) + 3), (v6 + v5)) - (min((((v1*v2) + v3)*v4), (v6 + v7)) + v5))/4)*4) + (min((((v1*v2) + v3)*v4), (v6 + v7)) + v5))) + 3), (v6 + v5)))
(min((((v0*4) + ((v1*v2) + v3)) + v4), (v5 + v3)) <= (((((min((((v0*4) + ((v1*v2) + v3)) + v4), (v5 + v3)) - (min(((v1*v2) + v6), v5) + v3)) + 3)/4)*4) + (min(((v1*v2) + v6), v5) + v3)))
(min((((v0*4) + ((v1*v2) + v3)) + v4), (v5 + v3)) <= (((((min((((v0*4) + ((v1*v2) + v3)) + v4), (v5 + v3)) - (min((v1*v2), v5) + v3)) + 3)/4)*4) + (min((v1*v2), v5) + v3)))
(min((((v0*4) + ((v1*v2) + v3))*4), ((v4 - v5) + -4)) <= ((((min(((v4 - v5) - (((v0*4) + ((v1*v2) + v3))*4)), 4) + -1)/4) + ((v0*4) + ((v1*v2) + v3)))*4))
(min((((v0*4) + ((v1*v2) + v3))*4), (v4 + -4)) <= ((((min((v4 - (((v0*4) + ((v1*v2) + v3))*4)), 4) + -1)/4) + ((v0*4) + ((v1*v2) + v3)))*4))
(min((((v0*4) + v1)*4), ((v2 - v3) + -4)) <= ((((min(((v2 - v3) - (((v0*4) + v1)*4)), 4) + -1)/4) + ((v0*4) + v1))*4))
(min((((v0*4) + v1)*4), (v2 + -3)) <= (((min((v2 - (((v0*4) + v1)*4)), 3)/4) + ((v0*4) + v1))*4))
(min((((v0*4) + v1)*4), (v2 + -4)) <= ((((min((v2 - (((v0*4) + v1)*4)), 4) + -1)/4) + ((v0*4) + v1))*4))
(min((((v0*v1) + v2) + 4), v3) <= min(((((min((v3 - ((v0*v1) + v2)), 4) + 3)/4)*4) + ((v0*v1) + v2)), v3))
(min((((v0*v1) + v2) + v3), v4) <= min(((((min((v4 - ((v0*v1) + v2)), v3) + 3)/4)*4) + ((v0*v1) + v2)), v4))
(min((((v0*v1) + v2) + v3), v4) <= min((min((((min((v4 - ((v0*v1) + v2)), v3) + 3)/4)*4), v3) + ((v0*v1) + v2)), v4))
(min((((v0*v1) + v2)*2), (((min((min(((v3 + v4)/63), v5)*63), v6) + ((v0*v1) + v2))*2) + v7)) <= min((((v0*v1) + v2)*2), (((min((((v3 + v4)/63)*63), v6) + ((v0*v1) + v2))*2) + v7)))
(min((((v0*v1) + v2)*4), (v3 + -3)) <= (((min((v3 - (((v0*v1) + v2)*4)), 3)/4) + ((v0*v1) + v2))*4))
(min((((v0*v1) + v2)*4), (v3 + -4)) <= ((((min((v3 - (((v0*v1) + v2)*4)), 4) + -1)/4) + ((v0*v1) + v2))*4))
(min((((v0*v1) + v2)*v3), (((min((((v4 + v5)/63)*63), v6) + ((v0*v1) + v2))*v3) + -5)) <= min((((v0*v1) + v2)*v3), (((min((min(((v4 + v5)/63), 1)*63), v6) + ((v0*v1) + v2))*v3) + -5)))
(min(((min((((v0*v1) + v2)*v3), v4) + (v5*v6)) + v7), v8) <= min((((((v0*v1) + v2)*v3) + (v5*v6)) + v7), v8))
(min(((min((v0*v1), v2) + (v3*v4)) + v1), v5) <= min((((v0*v1) + (v3*v4)) + v1), v5))
(min(((min((v0*v1), v2) + (v3*v4)) + v5), v6) <= (((((min(((min((v0*v1), v2) + (v3*v4)) + v5), v6) - ((v3*v4) + (v0*v1))) + 3)/4)*4) + ((v3*v4) + (v0*v1))))
(min(((min(v0, v1) + (v2*v1))*2), (v3 + v4)) <= (((v2*v1) + v0)*2))
(min(((min(v0, v1) + (v2*v1))*4), v3) <= (((v2*v1) + v0)*4))
(min(((v0 + v1)/v2), (((v3 + v4)/v2) + ((v5/4)*4))) <= ((min((v3 + v4), (v0 + v1))/v2) + ((((min(((v0 + v1)/v2), (((v3 + v4)/v2) + ((v5/4)*4))) - (min((v3 + v4), (v0 + v1))/v2)) + 3)/4)*4)))
(min(((v0*1000) + 1000), v1) <= (min(min(((((min(((v0*1000) + 1000), v1) + 124)/125) - (v0*8))*125), (v1 - (v0*1000))), 1000) + (v0*1000)))
(min(((v0*1000) + 1000), v1) <= (min(min(((((min(((v0*1000) + 1000), v1) + 249)/250) - (v0*4))*250), (v1 - (v0*1000))), 1000) + (v0*1000)))
(min(((v0*1000) + 1000), v1) <= (min(min(((((min(((v0*1000) + 1000), v1) + 499)/500) - (v0*2))*500), (v1 - (v0*1000))), 1000) + (v0*1000)))
(min(((v0*125) + (min(((v1*63) + (((v2*32) + (((v3 + v4) + v5) + v6)) + v7)), v8) + v9)), v10) <= ((v0*125) + (((v1*63) + (((v2*32) + (((v3 + v4) + v5) + v6)) + v7)) + v9)))
(min(((v0*16) + 16), v1) <= (min(min(((((min(((v0*16) + 16), v1) + 3)/4) - (v0*4))*4), (v1 - (v0*16))), 16) + (v0*16)))
(min(((v0*16) + 16), v1) <= (min(min(((((min(((v0*16) + 16), v1) + 7)/8) - (v0*2))*8), (v1 - (v0*16))), 16) + (v0*16)))
(min(((v0*250) + 250), v1) <= (min(min(((((min(((v0*250) + 250), v1) + 124)/125) - (v0*2))*125), (v1 - (v0*250))), 250) + (v0*250)))
(min(((v0*32) + 32), v1) <= (min(min(((((min(((v0*32) + 32), v1) + 15)/16) - (v0*2))*16), (v1 - (v0*32))), 32) + (v0*32)))
(min(((v0*32) + 32), v1) <= (min(min(((((min(((v0*32) + 32), v1) + 7)/8) - (v0*4))*8), (v1 - (v0*32))), 32) + (v0*32)))
(min(((v0*500) + 500), v1) <= (min(min(((((min(((v0*500) + 500), v1) + 249)/250) - (v0*2))*250), (v1 - (v0*500))), 500) + (v0*500)))
(min(((v0*509) + (min(((v1*255) + (((v2*128) + (((v3 + v4) + v5) + v6)) + v7)), v8) + v9)), v10) <= ((v0*509) + (((v1*255) + (((v2*128) + (((v3 + v4) + v5) + v6)) + v7)) + v9)))
(min(((v0*8) + 8), v1) <= (min(min(((((min(((v0*8) + 8), v1) + 3)/4) - (v0*2))*4), (v1 - (v0*8))), 8) + (v0*8)))
(min(((v0*v1) + ((min(((v2*v3) + (((v4*v5) + v6) + v7)), v8) + v9) + v10)), v11) <= ((v0*v1) + ((((v2*v3) + (((v4*v5) + v6) + v7)) + v9) + v10)))
(min(((v0*v1) + ((v2*v3) + (((v4*v5) + v6)*v7))), v8) <= ((v0*v1) + ((((v4*v5) + v6)*v7) + (v2*v3))))
(min(((v0*v1) + ((v2*v3) + (v4*v5))), (v6 + v7)) <= ((v0*v1) + ((v4*v5) + (v2*v3))))
(min(((v0*v1) + ((v2*v3) + (v4*v5))), v6) <= ((v0*v1) + ((v4*v5) + (v2*v3))))
(min(((v0*v1) + (min(((v2*v3) + (((v4*v5) + ((v6 + v7) + v8)) + v9)), v10) + v11)), v12) <= ((v0*v1) + (((v2*v3) + (((v4*v5) + ((v6 + v7) + v8)) + v9)) + v11)))
(min(((v0*v1) + (min(((v2*v3) + (((v4*v5) + (v6 + v7)) + v8)), v9) + v10)), v11) <= ((v0*v1) + (((v2*v3) + (((v4*v5) + (v6 + v7)) + v8)) + v10)))
(min(((v0*v1) + (min(((v2*v3) + (((v4*v5) + v6) + v7)), v8) + v9)), v10) <= ((v0*v1) + (((v2*v3) + (((v4*v5) + v6) + v7)) + v9)))
(min(((v0*v1) + 20), v2) <= min(((v0*v1) + 21), v2))
(min(((v0*v1) + v2), (v3 + -4)) <= min((min(((((min((v3 - ((v0*v1) + v2)), 4) + 3)/4)*4) + ((v0*v1) + v2)), v3) + -4), ((v0*v1) + v2)))
(min(((v0/4)*8), ((((((v0/4)*4) + 17)/70)*v1) + v2)) <= min(((v0/4)*8), ((((((v0/4)*4) + 17)/35)*70) + 35)))
(min((min((((min((v0 - ((v1*v2) + v3)), v4) + v5)/v6)*v6), v4) + ((v1*v2) + v3)), v0) <= min((((v1*v2) + v3) + v4), v0))
(min((min((((v0*v1) + v2)*v3), v4) + (v5*v4)), (v6 + v7)) <= ((v5*v4) + (((v0*v1) + v2)*v3)))
(min((min((((v0*v1) + v2)*v3), v4) + (v5*v4)), v6) <= ((v5*v4) + (((v0*v1) + v2)*v3)))
(min((min(((v0*v1) + (((v2*v3) + v4)*v5)), v6) + (v7*v6)), v8) <= ((v7*v6) + ((v0*v1) + (((v2*v3) + v4)*v5))))
(min((min((v0*v1), (min(((v0*v1) + v1), v2) + v3)) + v4), v2) <= min(((v0*v1) + v4), v2))
(min((min((v0*v1), v2) + (v3*v2)), v4) <= ((v3*v2) + (v0*v1)))
(min((min(min((min(v0, 0) + (((v1 + v2)/4)*4)), (v3 + v4)), 4) + -4), v5) <= min(v5, 0))
(min((min(v0, -4) + 13), v1) <= min(min((v0 + 13), v1), 9))
(min((min(v0, 4) + -4), v1) <= min(min((v0 + -4), v1), 0))
(min((min(v0, v1) + (v2*v1)), (((v3 + v4) - v5) + v6)) <= ((v2*v1) + v0))
(min((min(v0, v1) + (v2*v1)), ((v3 - v4) + v5)) <= ((v2*v1) + v0))
(min((min(v0, v1) + (v2*v1)), (v3 + v4)) <= ((v2*v1) + v0))
(min((min(v0, v1) + (v2*v1)), v3) <= ((v2*v1) + v0))
(min((min(v0, v1) + v2), (v3 + 4)) <= min((v3 + 754), (min(v0, v1) + v2)))
(min((v0 + 3), v1) <= min((v0 + 753), v1))
(min((v0 + 4), v1) <= min((v0 + 129), v1))
(min((v0 + 4), v1) <= min((v0 + 254), v1))
(min((v0 + 4), v1) <= min((v0 + 379), v1))
(min((v0 + 4), v1) <= min((v0 + 504), v1))
(min((v0 + 4), v1) <= min((v0 + 60), v1))
(min((v0 + 4), v1) <= min((v0 + 754), v1))
(min((v0 + v1), ((v2*v3) + ((v4*v5) + (v6*v7)))) <= ((v2*v3) + ((v6*v7) + (v4*v5))))
(min((v0 + v1), (min(v2, v3) + (v4*v3))) <= ((v4*v3) + v2))
(min((v0 + v1), (v2 + v3)) <= max((v2 + v3), (v0 + v1)))
(min((v0 - ((v1*16) + v2)), v3) <= min(min((v0 - ((v1*16) + v2)), (((((min((((v1*16) + v2) + v3), v0) - v2)/4) - (v1*4))*4) + 3)), v3))
(min((v0 - v1), ((((v2*v3) + v4)*v5) + 13)) <= min((v0 - v1), ((((v2*v3) + v4)*v5) + 14)))
(min((v0 - v1), (min((v2*v3), v4) + (v5*v6))) <= min((v0 - v1), ((v2*v3) + (v5*v6))))
(min((v0*2), ((((v0 + -1)/66)*v1) + v2)) <= min((v0*2), ((((v0 + -1)/33)*66) + 67)))
(min((v0*4), (v1 + -1)) <= ((((min((v1 - (v0*4)), 1) + 2)/4) + v0)*4))
(min((v0*4), (v1 + -2)) <= ((((min((v1 - (v0*4)), 2) + 1)/4) + v0)*4))
(min((v0*4), (v1 + -3)) <= (((min((v1 - (v0*4)), 3)/4) + v0)*4))
(min((v0*8), (v1 + -3)) <= (((min((v1 - (v0*8)), 3)/4) + (v0*2))*4))
(min((v0*v1), (((((((v2 - v0) + v3)/v4)*v4) + v0)*v1) + -5)) <= min((v0*v1), (((min(((((v2 - v0) + v3)/v4)*v4), 125) + v0)*v1) + -5)))
(min((v0*v1), ((((((v2 - v0)/v3)*v3) + v0)*v1) + 19)) <= min((v0*v1), ((((min(((v2 - v0)/v3), 5)*v3) + v0)*v1) + 19)))
(min((v0*v1), (min(((v0*v1) + v1), v2) + -4)) <= min((v0*v1), (min(((v0*v1) + 125), v2) + -4)))
(min((v0*v1), (min(((v0*v1) + v1), v2) + -4)) <= min((v0*v1), (min(((v0*v1) + 250), v2) + -4)))
(min((v0*v1), (min(((v0*v1) + v1), v2) + -4)) <= min((v0*v1), (min(((v0*v1) + 500), v2) + -4)))
(min((v0*v1), (min(((v0*v1) + v1), v2) + -4)) <= min((v0*v1), (min(((v0*v1) + 8), v2) + -4)))
(min((v0*v1), (min(((v0*v1) + v2), v3) + -3)) <= min((v0*v1), (min(((v0*v1) + 249), v3) + -3)))
(min((v0*v1), (min(((v2/v3)*v1), v4) + v5)) <= min((v0*v1), (((v2/v3)*v1) + v5)))
(min((v0*v1), (min(((v2/v3)*v4), -496) + 499)) <= min(min((v0*v1), (((v2/v3)*v4) + 499)), 3))
(min((v0*v1), (v2 + -4)) <= min((v0*v1), (v2 + -2)))
(min((v0*v1), (v2 + -4)) <= min((v0*v1), (v2 + -3)))
(min((v0*v1), (v2 + -4)) <= min((v0*v1), v2))
(min(max((v0 + v1), 2000), (v2 + 3)) <= max((v0 + v1), (min(v2, 1997) + 3)))
(min(max(v0, v1), (((v2*1000) + v3) + v4)) <= (min(min((max(v0, v1) - ((v2*1000) + v3)), (((((min(max(v0, v1), (((v2*1000) + v3) + v4)) - v3)/125) - (v2*8))*125) + 124)), v4) + ((v2*1000) + v3)))
(min(max(v0, v1), (((v2*1000) + v3) + v4)) <= (min(min((max(v0, v1) - ((v2*1000) + v3)), (((((min(max(v0, v1), (((v2*1000) + v3) + v4)) - v3)/250) - (v2*4))*250) + 249)), v4) + ((v2*1000) + v3)))
(min(max(v0, v1), (((v2*1000) + v3) + v4)) <= (min(min((max(v0, v1) - ((v2*1000) + v3)), (((((min(max(v0, v1), (((v2*1000) + v3) + v4)) - v3)/500) - (v2*2))*500) + 499)), v4) + ((v2*1000) + v3)))
(min(max(v0, v1), (((v2*250) + v3) + v4)) <= (min(min((max(v0, v1) - ((v2*250) + v3)), (((((min(max(v0, v1), (((v2*250) + v3) + v4)) - v3)/125) - (v2*2))*125) + 124)), v4) + ((v2*250) + v3)))
(min(min(((((min((v0 - (v1*v2)), v3) + v4)/v5)*v5) + ((v1*v2) + v6)), ((v6 + v7) + v8)), (min(min((v1*v2), (v7 + v8)), v9) + v6)) <= (v6 + v9))
(min(min((((v0 + v1)/4)*4), (v0 + 8)), 4) <= min((((v0 + v1)/4)*4), (min(v0, -4) + 8)))
(min(min((((v0 + v1)/v2)*v2), (v3 + 10)), 4) <= min((((v0 + v1)/v2)*v2), (min(v3, -6) + 10)))
(min(min((((v0 + v1)/v2)*v2), (v3 + 3)), 4) <= min((((v0 + v1)/v2)*v2), (min(v3, 1) + 3)))
(min(min(((min(((min((v0/500), v1)*500) + v2), v3) + v4) + v5), v6), v1) <= min(min(((min((((v0/500)*500) + v2), v3) + v4) + v5), v6), v1))
(min(min(((min((min(((v0 + v1)/500), v2)*500), v3) + v4) + v5), v6), v7) <= min(min(((min((((v0 + v1)/500)*500), v3) + v4) + v5), v6), v7))
(min(min(((min(v0, v1) + ((v2*v3) + v4))*v5), v6), ((((v2*v3) + v4)*v5) + v7)) <= v6)
(min(min(((min(v0, v1) + v2) + v3), v4), v5) <= min(min(((v2 + v0) + v3), v4), v5))
(min(min((min((min(v0, v1) + min(v2, v3)), v4) + v5), v0), v1) <= min(min((v4 + v5), v0), v1))
(min(min((min((v0*v1), v2) + v3), v4), v5) <= min(v4, v5))
(min(min((min(v0, v1) + v2), v3), v1) <= min(v3, v1))
(min(min((min(v0, v1) + v2), v3), v4) <= min(v3, v4))
(min(min((v0 + -4), v1), 0) <= min((min(v0, 4) + -4), v1))
(min(min((v0 + 13), v1), 9) <= min((min(v0, -4) + 13), v1))
(min(min((v0 + v1), v2), v3) <= min(v2, v3))
(min(min((v0*v1), (((v2/v3)*v4) + 499)), 3) <= min((v0*v1), (min(((v2/v3)*v4), -496) + 499)))
(min(min(min(((min((((v0 - v1) + v2)/v3), v4)*v3) + v1), v5), v6), (v0 + v7)) <= v6)
(min(min(min((min((min(v0, v1) + v2), v3) + v4), v0), v5), v1) <= min(v5, v1))
(min(min(min((min(v0, v1) + v2), v3), ((min(min((((v4 + v5)/v6)*v6), (v0 + 4)), 4) + v2) + -4)), v7) <= v2)
(min(min(min((v0 + v1), v2), v3), v4) <= min(v3, v4))
(min(min(select((v0 < ((v0 + v1) + v2)), max(v0, v3), v4), v4), v0) <= v4)
(min(min(select((v0 < ((v0 + v1) + v2)), v3, v0), v0), v4) <= v0)
(min(min(select((v0 < v1), (min(v1, v2) + v3), v3), v3), v2) <= min(v3, v2))
(min(min(v0, v1), ((v2 + v3) + v4)) <= v1)
(min(min(v0, v1), (min((v2 + v3), v0) + v4)) <= v1)
(min(min(v0, v1), v2) <= min(v1, v2))
(min(v0, 0) <= min(min(select((2 < v1), (min(v1, 0) + v0), v0), v0), 0))
(min(v0, v1) <= select((v0 < ((v0 + v2) + v3)), max(v0, v4), min(v0, v1)))
(select((v0 < v1), (((((min(((v2*v3) + ((v4*v5) + (v1*v6))), v7) + v8) + v9)/4)*4) + 13), (((((((v4*v5) + (v2*v3)) + v8)/4) + (v1*2))*4) + -20)) <= (select((v0 < v1), (((((min(((v2*v3) + ((v4*v5) + (v1*v6))), v7) + v8) + v9)/4)*2) + 7), (((((((v4*v5) + (v2*v3)) + v8)/4) + (v1*2))*2) + -10))*2))
(select((v0 < v1), (((((min(((v2*v3) + (v1*v4)), v5) + v6) + 35)/4)*2) + 1), ((((((v2*v3) + v6)/4) + (v1*4))*2) + -10)) <= (select((v0 < v1), (((min(((v2*v3) + (v1*v4)), v5) + v6) + 39)/4), (((((v2*v3) + v6)/4) + (v1*4)) + -5))*2))
(select((v0 < v1), (((min((((v2*2) + v1)*2), (((v3 + v4) - v5) + v6)) + v5)*2) + -1), (((((v2*2) + v1)*2) + v5)*2)) <= (((((v2*2) + v1)*2) + v5)*2))
(select((v0 < v1), (((min((((v2*2) + v1)*2), ((v3 - v4) + v5)) + v4)*2) + -1), (((((v2*2) + v1)*2) + v4)*2)) <= (((((v2*2) + v1)*2) + v4)*2))
(select((v0 < v1), (((min((((v2*2) + v1)*v3), (((v4 + v5) - v6) + v7)) + v6)*2) + -1), (((((v2*2) + v1)*v3) + v6)*2)) <= (((((v2*2) + v1)*v3) + v6)*2))
(select((v0 < v1), (((min((((v2*2) + v1)*v3), ((v4 - v5) + v6)) + v5)*2) + -1), (((((v2*2) + v1)*v3) + v5)*2)) <= (((((v2*2) + v1)*v3) + v5)*2))
(select((v0 < v1), (((min((((v2*2) + v1)*v3), (v4 + v5)) + v6)*2) + -1), (((((v2*2) + v1)*v3) + v6)*2)) <= (((((v2*2) + v1)*v3) + v6)*2))
(select((v0 < v1), (((min((((v2*2) + v1)*v3), v4) + v5)*2) + -1), (((((v2*2) + v1)*v3) + v5)*2)) <= (((((v2*2) + v1)*v3) + v5)*2))
(select((v0 < v1), (((min((((v2*v3) + ((v4*2) + v1))*2), ((v5 - v6) + v7)) + v6)*2) + -1), (((((v2*v3) + ((v4*2) + v1))*2) + v6)*2)) <= (((((v2*v3) + ((v4*2) + v1))*2) + v6)*2))
(select((v0 < v1), (((min((((v2*v3) + ((v4*2) + v1))*v5), (v6 + v5)) + ((v7*v8) + v9))*2) + -3), ((((((v2*v3) + ((v4*2) + v1))*v5) + ((v7*v8) + v9))*2) + -24)) <= (select((v0 < v1), ((min((((v2*v3) + ((v4*2) + v1))*v5), (v6 + v5)) + ((v7*v8) + v9)) + -1), (((((v2*v3) + ((v4*2) + v1))*v5) + ((v7*v8) + v9)) + -12))*2))
(select((v0 < v1), (((min((((v2*v3) + ((v4*v5) + v1))*2), v6) + ((v7*v8) + v9))*2) + 5), ((((((v2*v3) + ((v4*v5) + v1))*2) + ((v7*v8) + v9))*2) + -6)) <= (select((v0 < v1), ((min((((v2*v3) + ((v4*v5) + v1))*2), v6) + ((v7*v8) + v9)) + 3), (((((v2*v3) + ((v4*v5) + v1))*2) + ((v7*v8) + v9)) + -3))*2))
(select((v0 < v1), (((min((((v2*v3) + v1)*2), (((v4 + v5) - v6) + v7)) + v6)*2) + -1), (((((v2*v3) + v1)*2) + v6)*2)) <= (((((v2*v3) + v1)*2) + v6)*2))
(select((v0 < v1), (((min((((v2*v3) + v1)*2), ((v4*2) + v5)) + ((((v6*v7) + v8)/4)*2))*2) + -1), ((((((v6*v7) + v8)/4) + ((v2*v3) + v1))*4) + -12)) <= (select((v0 < v1), (min((((v2*v3) + v1)*2), ((v4*2) + v5)) + ((((v6*v7) + v8)/4)*2)), ((((((v6*v7) + v8)/4) + ((v2*v3) + v1))*2) + -6))*2))
(select((v0 < v1), (((min((((v2*v3) + v1)*2), v4) + ((v5*v6) + v7))*2) + -1), ((((((v2*v3) + v1)*2) + ((v5*v6) + v7))*2) + -2)) <= (select((v0 < v1), (min((((v2*v3) + v1)*2), v4) + ((v5*v6) + v7)), (((((v2*v3) + v1)*2) + ((v5*v6) + v7)) + -1))*2))
(select((v0 < v1), (((min((((v2*v3) + v1)*2), v4) + ((v5*v6) + v7))*2) + 5), ((((((v2*v3) + v1)*2) + ((v5*v6) + v7))*2) + -6)) <= (select((v0 < v1), ((min((((v2*v3) + v1)*2), v4) + ((v5*v6) + v7)) + 3), (((((v2*v3) + v1)*2) + ((v5*v6) + v7)) + -3))*2))
(select((v0 < v1), (((min((((v2*v3) + v1)*2), v4) + v5)*2) + -1), (((((v2*v3) + v1)*2) + v5)*2)) <= (((((v2*v3) + v1)*2) + v5)*2))
(select((v0 < v1), (((min((((v2*v3) + v1)*v3), (((v4 + v5) - v6) + v7)) + v6)*2) + 5), ((((((v2*v3) + v1)*v3) + v6)*2) + -4)) <= (select((v0 < v1), ((min((((v2*v3) + v1)*v3), (((v4 + v5) - v6) + v7)) + v6) + 3), (((((v2*v3) + v1)*v3) + v6) + -2))*2))
(select((v0 < v1), (((min((((v2*v3) + v1)*v3), ((v4 - v5) + v6)) + v5)*2) + -1), (((((v2*v3) + v1)*v3) + v5)*2)) <= (((((v2*v3) + v1)*v3) + v5)*2))
(select((v0 < v1), (((min((((v2*v3) + v1)*v3), v4) + v5)*2) + -1), (((((v2*v3) + v1)*v3) + v5)*2)) <= (((((v2*v3) + v1)*v3) + v5)*2))
(select((v0 < v1), (((min((((v2*v3) + v1)*v4), (((v5 + v6) - v7) + v8)) + v7)*v4) + -1), (((((v2*v3) + v1)*v4) + v7)*v4)) <= ((select((v0 < v1), min((((v2*v3) + v1)*v4), (((v5 + v6) - v7) + v8)), (((v2*v3) + v1)*v4)) + v7)*v4))
(select((v0 < v1), (((min((((v2*v3) + v1)*v4), ((v5 - v6) + v7)) + v6)*2) + -1), (((((v2*v3) + v1)*v4) + v6)*2)) <= (((((v2*v3) + v1)*v4) + v6)*2))
(select((v0 < v1), (((min((((v2*v3) + v1)*v4), ((v5 - v6) + v7)) + v6)*v4) + -1), (((((v2*v3) + v1)*v4) + v6)*v4)) <= ((select((v0 < v1), min((((v2*v3) + v1)*v4), ((v5 - v6) + v7)), (((v2*v3) + v1)*v4)) + v6)*v4))
(select((v0 < v1), (((min((((v2*v3) + v1)*v4), ((v5 - v6) + v7)) + v6)*v8) + -1), (((((v2*v3) + v1)*v4) + v6)*v8)) <= ((select((v0 < v1), min((((v2*v3) + v1)*v4), ((v5 - v6) + v7)), (((v2*v3) + v1)*v4)) + v6)*v8))
(select((v0 < v1), (((min((((v2*v3) + v1)*v4), (v5 + v6)) + ((v7*v8) + v9))*v10) + -1), (((((v2*v3) + v1)*v4) + ((v7*v8) + v9))*v10)) <= ((select((v0 < v1), min((((v2*v3) + v1)*v4), (v5 + v6)), (((v2*v3) + v1)*v4)) + ((v7*v8) + v9))*v10))
(select((v0 < v1), (((min((((v2*v3) + v1)*v4), v5) + v6)*2) + -1), (((((v2*v3) + v1)*v4) + v6)*2)) <= (((((v2*v3) + v1)*v4) + v6)*2))
(select((v0 < v1), (((min(((v2 - v3) + v4), v5) + v3)*2) + -1), ((v3 + v5)*2)) <= ((v3 + v5)*2))
(select((v0 < v1), (((min(((v2*v3) + (((v4*2) + v1)*2)), ((v5 - v6) + v7)) + v6)*2) + -1), ((((v2*v3) + (((v4*2) + v1)*2)) + v6)*2)) <= ((((v2*v3) + (((v4*2) + v1)*2)) + v6)*2))
(select((v0 < v1), (((min(((v2*v3) + (((v4*2) + v1)*v5)), (((v6 + v7) - v8) + v9)) + v8)*2) + -1), ((((v2*v3) + (((v4*2) + v1)*v5)) + v8)*2)) <= ((((v2*v3) + (((v4*2) + v1)*v5)) + v8)*2))
(select((v0 < v1), (((min(((v2*v3) + (((v4*2) + v1)*v5)), v6) + ((v7*v8) + v9))*2) + -1), ((((v2*v3) + (((v4*2) + v1)*v5)) + ((v7*v8) + v9))*2)) <= ((((v2*v3) + (((v4*2) + v1)*v5)) + ((v7*v8) + v9))*2))
(select((v0 < v1), (((min(((v2*v3) + (((v4*v5) + ((v6*v7) + v1))*2)), v8) + ((v9*v10) + v11))*2) + -1), ((((v2*v3) + (((v4*v5) + ((v6*v7) + v1))*2)) + ((v9*v10) + v11))*2)) <= ((((v2*v3) + (((v4*v5) + ((v6*v7) + v1))*2)) + ((v9*v10) + v11))*2))
(select((v0 < v1), (((min(((v2*v3) + (((v4*v5) + v1)*2)), ((v6 - v7) + v8)) + v7)*2) + -1), ((((v2*v3) + (((v4*v5) + v1)*2)) + v7)*2)) <= ((((v2*v3) + (((v4*v5) + v1)*2)) + v7)*2))
(select((v0 < v1), (((min(((v2*v3) + (((v4*v5) + v1)*2)), v6) + ((v7*v8) + v9))*2) + 5), (((((v2*v3) + (((v4*v5) + v1)*2)) + ((v7*v8) + v9))*2) + -6)) <= (select((v0 < v1), ((min(((v2*v3) + (((v4*v5) + v1)*2)), v6) + ((v7*v8) + v9)) + 3), ((((v2*v3) + (((v4*v5) + v1)*2)) + ((v7*v8) + v9)) + -3))*2))
(select((v0 < v1), (((min(((v2*v3) + (((v4*v5) + v1)*v5)), v6) + v7)*2) + -1), ((((v2*v3) + (((v4*v5) + v1)*v5)) + v7)*2)) <= ((((v2*v3) + (((v4*v5) + v1)*v5)) + v7)*2))
(select((v0 < v1), (((min(((v2*v3) + (((v4*v5) + v1)*v6)), v7) + v8)*2) + -1), ((((v2*v3) + (((v4*v5) + v1)*v6)) + v8)*2)) <= ((((v2*v3) + (((v4*v5) + v1)*v6)) + v8)*2))
(select((v0 < v1), (((min(((v2*v3) + (v1*2)), (((v4 + v5) - v6) + v7)) + v6)*2) + -1), ((((v2*v3) + (v1*2)) + v6)*2)) <= ((((v2*v3) + (v1*2)) + v6)*2))
(select((v0 < v1), (((min(((v2*v3) + (v1*2)), ((v4 - v5) + v6)) + v5)*2) + -1), ((((v2*v3) + (v1*2)) + v5)*2)) <= ((((v2*v3) + (v1*2)) + v5)*2))
(select((v0 < v1), (((min(((v2*v3) + (v1*2)), (v4 + v5)) + ((v6*v7) + v8))*2) + -1), ((((v2*v3) + (v1*2)) + ((v6*v7) + v8))*2)) <= ((((v2*v3) + (v1*2)) + ((v6*v7) + v8))*2))
(select((v0 < v1), (((min(((v2*v3) + (v1*v4)), (((v5 + v6) - v7) + v8)) + v7)*2) + -1), ((((v2*v3) + (v1*v4)) + v7)*2)) <= ((((v2*v3) + (v1*v4)) + v7)*2))
(select((v0 < v1), (((min(((v2*v3) + (v1*v4)), (((v5 + v6) - v7) + v8)) + v7)*2) + 5), (((((v2*v3) + (v1*v4)) + v7)*2) + -4)) <= (select((v0 < v1), ((min(((v2*v3) + (v1*v4)), (((v5 + v6) - v7) + v8)) + v7) + 3), ((((v2*v3) + (v1*v4)) + v7) + -2))*2))
(select((v0 < v1), (((min(((v2*v3) + (v1*v4)), ((v5 - v6) + v7)) + v6)*2) + -1), ((((v2*v3) + (v1*v4)) + v6)*2)) <= ((((v2*v3) + (v1*v4)) + v6)*2))
(select((v0 < v1), (((min(((v2*v3) + (v1*v4)), (v5 + v6)) + ((v7*v8) + v9))*2) + -1), ((((v2*v3) + (v1*v4)) + ((v7*v8) + v9))*2)) <= ((((v2*v3) + (v1*v4)) + ((v7*v8) + v9))*2))
(select((v0 < v1), (((min(((v2*v3) + (v1*v4)), v5) + ((v6*v7) + v8))*2) + -1), ((((v2*v3) + (v1*v4)) + ((v6*v7) + v8))*2)) <= ((((v2*v3) + (v1*v4)) + ((v6*v7) + v8))*2))
(select((v0 < v1), (((min(((v2*v3) + (v1*v4)), v5) + (v6/v4))*2) + 17), ((((v6/v4) + ((v2*v3) + (v1*v4)))*2) + -10)) <= (select((v0 < v1), ((min(((v2*v3) + (v1*v4)), v5) + (v6/v4)) + 9), (((v6/v4) + ((v2*v3) + (v1*v4))) + -5))*2))
(select((v0 < v1), (((min(((v2*v3) + (v1*v4)), v5) + v6)*2) + -1), ((((v2*v3) + (v1*v4)) + v6)*2)) <= ((((v2*v3) + (v1*v4)) + v6)*2))
(select((v0 < v1), (((min(((v2*v3) + (v1*v4)), v5) + v6)*v4) + -1), ((((v2*v3) + (v1*v4)) + v6)*v4)) <= ((select((v0 < v1), min(((v2*v3) + (v1*v4)), v5), ((v2*v3) + (v1*v4))) + v6)*v4))
(select((v0 < v1), (((min((v1*2), (((v2 + v3) - v4) + v5)) + v4)*2) + -1), (((v1*2) + v4)*2)) <= (((v1*2) + v4)*2))
(select((v0 < v1), (((min((v1*2), ((v2 - v3) + v4)) + v3)*2) + -1), (((v1*2) + v3)*2)) <= (((v1*2) + v3)*2))
(select((v0 < v1), (((min((v1*2), ((v2*2) + v3)) + ((((v4*v5) + v6)/4)*2))*2) + -1), ((((((v4*v5) + v6)/4) + v1)*4) + -12)) <= (select((v0 < v1), (min((v1*2), ((v2*2) + v3)) + ((((v4*v5) + v6)/4)*2)), ((((((v4*v5) + v6)/4) + v1)*2) + -6))*2))
(select((v0 < v1), (((min((v1*2), (v2 - v3)) + (v3 + v4))*2) + -1), ((((v1*2) + (v3 + v4))*2) + -18)) <= (select((v0 < v1), (min((v1*2), (v2 - v3)) + (v3 + v4)), (((v1*2) + (v3 + v4)) + -9))*2))
(select((v0 < v1), (((min((v1*2), v2) + ((v3*v4) + v5))*2) + -1), ((((v1*2) + ((v3*v4) + v5))*2) + -18)) <= (select((v0 < v1), (min((v1*2), v2) + ((v3*v4) + v5)), (((v1*2) + ((v3*v4) + v5)) + -9))*2))
(select((v0 < v1), (((min((v1*2), v2) + ((v3*v4) + v5))*2) + 3), ((((v1*2) + ((v3*v4) + v5))*2) + -6)) <= (select((v0 < v1), ((min((v1*2), v2) + ((v3*v4) + v5)) + 2), (((v1*2) + ((v3*v4) + v5)) + -3))*2))
(select((v0 < v1), (((min((v1*8), (((v2 - v3)*2) + -1)) + (v3*2))*2) + -1), (((v1*4) + v3)*4)) <= (((v1*4) + v3)*4))
(select((v0 < v1), (((min((v1*v2), (((v3 + v4) - v5) + v6)) + v5)*2) + -1), (((v1*v2) + v5)*2)) <= (((v1*v2) + v5)*2))
(select((v0 < v1), (((min((v1*v2), ((v3 - v4) + 2)) + v4)*2) + -1), (((v1*v2) + v4)*2)) <= (((v1*v2) + v4)*2))
(select((v0 < v1), (((min((v1*v2), ((v3 - v4) + v5)) + v4)*2) + -1), (((v1*v2) + v4)*2)) <= (((v1*v2) + v4)*2))
(select((v0 < v1), (((min((v1*v2), ((v3 - v4) + v5)) + v4)*4) + -3), (((v1*v2) + v4)*4)) <= (((v1*v2) + v4)*4))
(select((v0 < v1), (((min((v1*v2), ((v3 - v4) + v5)) + v4)*v6) + -1), (((v1*v2) + v4)*v6)) <= ((select((v0 < v1), min((v1*v2), ((v3 - v4) + v5)), (v1*v2)) + v4)*v6))
(select((v0 < v1), (((min((v1*v2), v3) + v4)*2) + -1), (((v1*v2) + v4)*2)) <= (((v1*v2) + v4)*2))
(select((v0 < v1), (((min((v2 + v3), v4) + v5)*2) + -1), ((v5 + v4)*2)) <= ((v5 + v4)*2))
(select((v0 < v1), (((min(v2, v3) + v4)*2) + -1), ((v4 + v3)*2)) <= ((v4 + v3)*2))
(select((v0 < v1), ((min(((((v2*2) + v1)*2) + v3), (v4 + v5))*2) + -1), (((((v2*2) + v1)*2) + v3)*2)) <= (((((v2*2) + v1)*2) + v3)*2))
(select((v0 < v1), ((min(((((v2*2) + v1)*2) + v3), v4)*2) + -1), (((((v2*2) + v1)*2) + v3)*2)) <= (((((v2*2) + v1)*2) + v3)*2))
(select((v0 < v1), ((min(((((v2*2) + v1)*v3) + v4), (v5 + v6))*2) + -1), (((((v2*2) + v1)*v3) + v4)*2)) <= (((((v2*2) + v1)*v3) + v4)*2))
(select((v0 < v1), ((min(((((v2*2) + v1)*v3) + v4), v5)*2) + -1), (((((v2*2) + v1)*v3) + v4)*2)) <= (((((v2*2) + v1)*v3) + v4)*2))
(select((v0 < v1), ((min(((((v2*v3) + ((v4*2) + v1))*2) + v5), (v6 + v7))*2) + -1), (((((v2*v3) + ((v4*2) + v1))*2) + v5)*2)) <= (((((v2*v3) + ((v4*2) + v1))*2) + v5)*2))
(select((v0 < v1), ((min(((((v2*v3) + v1)*2) + v4), (v5 + v6))*2) + -1), (((((v2*v3) + v1)*2) + v4)*2)) <= (((((v2*v3) + v1)*2) + v4)*2))
(select((v0 < v1), ((min(((((v2*v3) + v1)*2) + v4), v5)*2) + -1), (((((v2*v3) + v1)*2) + v4)*2)) <= (((((v2*v3) + v1)*2) + v4)*2))
(select((v0 < v1), ((min(((((v2*v3) + v1)*v3) + v4), (v5 + v6))*2) + -1), (((((v2*v3) + v1)*v3) + v4)*2)) <= (((((v2*v3) + v1)*v3) + v4)*2))
(select((v0 < v1), ((min(((((v2*v3) + v1)*v3) + v4), v5)*2) + -1), (((((v2*v3) + v1)*v3) + v4)*2)) <= (((((v2*v3) + v1)*v3) + v4)*2))
(select((v0 < v1), ((min(((((v2*v3) + v1)*v4) + v5), (v6 + v7))*2) + -1), (((((v2*v3) + v1)*v4) + v5)*2)) <= (((((v2*v3) + v1)*v4) + v5)*2))
(select((v0 < v1), ((min(((((v2*v3) + v1)*v4) + v5), v6)*2) + -1), (((((v2*v3) + v1)*v4) + v5)*2)) <= (((((v2*v3) + v1)*v4) + v5)*2))
(select((v0 < v1), ((min((((v2*v3) + (((v4*2) + v1)*2)) + v5), v6)*2) + -1), ((((v2*v3) + (((v4*2) + v1)*2)) + v5)*2)) <= ((((v2*v3) + (((v4*2) + v1)*2)) + v5)*2))
(select((v0 < v1), ((min((((v2*v3) + (((v4*2) + v1)*v5)) + v6), v7)*2) + -1), ((((v2*v3) + (((v4*2) + v1)*v5)) + v6)*2)) <= ((((v2*v3) + (((v4*2) + v1)*v5)) + v6)*2))
(select((v0 < v1), ((min((((v2*v3) + (((v4*v5) + v1)*2)) + v6), v7)*2) + -1), ((((v2*v3) + (((v4*v5) + v1)*2)) + v6)*2)) <= ((((v2*v3) + (((v4*v5) + v1)*2)) + v6)*2))
(select((v0 < v1), ((min((((v2*v3) + (v1*v4)) + 1), v5) + (min(v6, v0)*v7)) + -1), ((min(v6, v0)*v7) + ((v2*v3) + (v1*v4)))) <= ((min(v6, v0)*v7) + ((v2*v3) + (v1*v4))))
(select((v0 < v1), ((min(((v1*2) + v2), (v3 + v4))*2) + -1), (((v1*2) + v2)*2)) <= (((v1*2) + v2)*2))
(select((v0 < v1), ((min(((v1*2) + v2), (v3 + v4))*2) + 1), (((v1*2) + v2)*2)) <= (select((v0 < v1), (min(((v1*2) + v2), (v3 + v4)) + 1), ((v1*2) + v2))*2))
(select((v0 < v1), ((min(((v1*2) + v2), v3)*2) + -1), (((v1*2) + v2)*2)) <= (((v1*2) + v2)*2))
(select((v0 < v1), ((min(((v1*v2) + v3), (v4 + v5))*2) + -1), (((v1*v2) + v3)*2)) <= (((v1*v2) + v3)*2))
(select((v0 < v1), ((min(((v1*v2) + v3), (v4 + v5))*v2) + -1), (((v1*v2) + v3)*v2)) <= (select((v0 < v1), min(((v1*v2) + v3), (v4 + v5)), ((v1*v2) + v3))*v2))
(select((v0 < v1), ((min(((v1*v2) + v3), v4)*2) + -1), (((v1*v2) + v3)*2)) <= (((v1*v2) + v3)*2))
(select((v0 < v1), ((min(((v2 + v3)/2), ((((v4*v5) + v1)*2) + v6))*2) + -1), (((((v4*v5) + v1)*2) + v6)*2)) <= (((((v4*v5) + v1)*2) + v6)*2))
(select((v0 < v1), ((min(((v2 + v3)/2), ((((v4*v5) + v1)*v5) + v6))*2) + -1), (((((v4*v5) + v1)*v5) + v6)*2)) <= (((((v4*v5) + v1)*v5) + v6)*2))
(select((v0 < v1), ((min((v2 + v3), (((v4*v5) + (v1*2)) + v6))*2) + -1), ((((v4*v5) + (v1*2)) + v6)*2)) <= ((((v4*v5) + (v1*2)) + v6)*2))
(select((v0 < v1), ((min(v2, v3)*2) + -1), (v3*2)) <= (v3*2))
(select((v0 < v1), (min((((v2*2) + v1)*16), (v3 + v4)) + (v5*2)), (((((v2*2) + v1)*8) + v5)*2)) <= (((((v2*2) + v1)*8) + v5)*2))
(select((v0 < v1), (min((((v2*2) + v1)*32), (v3 + v4)) + (v5*2)), (((((v2*2) + v1)*16) + v5)*2)) <= (((((v2*2) + v1)*16) + v5)*2))
(select((v0 < v1), (min((((v2*2) + v1)*4), (((v3 - v4)*2) + v5)) + (v4*2)), (((((v2*2) + v1)*2) + v4)*2)) <= (((((v2*2) + v1)*2) + v4)*2))
(select((v0 < v1), (min((((v2*2) + v1)*4), ((v3*2) + v4)) + (v5*2)), (((((v2*2) + v1)*2) + v5)*2)) <= (((((v2*2) + v1)*2) + v5)*2))
(select((v0 < v1), (min((((v2*2) + v1)*4), (v3 + v4)) + (v5*2)), (((((v2*2) + v1)*2) + v5)*2)) <= (((((v2*2) + v1)*2) + v5)*2))
(select((v0 < v1), (min((((v2*2) + v1)*8), ((((v3 + v4) - v5)*2) + v6)) + (v5*2)), (((((v2*2) + v1)*4) + v5)*2)) <= (((((v2*2) + v1)*4) + v5)*2))
(select((v0 < v1), (min((((v2*2) + v1)*8), (((v3 - v4)*2) + v5)) + (v4*2)), (((((v2*2) + v1)*4) + v4)*2)) <= (((((v2*2) + v1)*4) + v4)*2))
(select((v0 < v1), (min((((v2*v3) + ((v4*v5) + ((v6*v7) + v1)))*2), (v8 + v9)) + (min(v10, v0)*2)), ((min(v10, v0) + ((v2*v3) + ((v4*v5) + ((v6*v7) + v1))))*2)) <= ((min(v10, v0) + ((v2*v3) + ((v4*v5) + ((v6*v7) + v1))))*2))
(select((v0 < v1), (min((((v2*v3) + ((v4*v5) + ((v6*v7) + v1)))*v8), ((v9*v8) + v10)) + (v11*v8)), ((((v2*v3) + ((v4*v5) + ((v6*v7) + v1))) + v11)*v8)) <= ((((v2*v3) + ((v4*v5) + ((v6*v7) + v1))) + v11)*v8))
(select((v0 < v1), (min((((v2*v3) + ((v4*v5) + v1))*v6), (((v7 - v8)*v6) + v9)) + (v8*v6)), ((((v2*v3) + ((v4*v5) + v1)) + v8)*v6)) <= ((((v2*v3) + ((v4*v5) + v1)) + v8)*v6))
(select((v0 < v1), (min((((v2*v3) + ((v4*v5) + v1))*v6), (v7 + v8)) + (min(v9, v0)*v6)), ((min(v9, v0) + ((v2*v3) + ((v4*v5) + v1)))*v6)) <= ((min(v9, v0) + ((v2*v3) + ((v4*v5) + v1)))*v6))
(select((v0 < v1), (min((((v2*v3) + v1)*4), (((v4 - v5)*2) + v6)) + (v5*2)), (((((v2*v3) + v1)*2) + v5)*2)) <= (((((v2*v3) + v1)*2) + v5)*2))
(select((v0 < v1), (min((((v2*v3) + v1)*4), ((v4*2) + v5)) + (v6*2)), (((((v2*v3) + v1)*2) + v6)*2)) <= (((((v2*v3) + v1)*2) + v6)*2))
(select((v0 < v1), (min((((v2*v3) + v1)*4), (v4 + v5)) + (v6*2)), (((((v2*v3) + v1)*2) + v6)*2)) <= (((((v2*v3) + v1)*2) + v6)*2))
(select((v0 < v1), (min((((v2*v3) + v1)*v3), (((v4 - v5)*v3) + v6)) + (v5*v3)), ((((v2*v3) + v1) + v5)*v3)) <= ((((v2*v3) + v1) + v5)*v3))
(select((v0 < v1), (min((((v2*v3) + v1)*v3), (v4 + v5)) + (v6*v3)), ((((v2*v3) + v1) + v6)*v3)) <= ((((v2*v3) + v1) + v6)*v3))
(select((v0 < v1), (min((((v2*v3) + v1)*v4), ((((v5 + v6) - v7)*v4) + v8)) + (v7*v4)), ((((v2*v3) + v1) + v7)*v4)) <= ((((v2*v3) + v1) + v7)*v4))
(select((v0 < v1), (min((((v2*v3) + v1)*v4), (((v5 - v6)*v4) + v7)) + (v6*v4)), ((((v2*v3) + v1) + v6)*v4)) <= ((((v2*v3) + v1) + v6)*v4))
(select((v0 < v1), (min((((v2*v3) + v1)*v4), ((v5*v4) + v6)) + (v7*v4)), ((((v2*v3) + v1) + v7)*v4)) <= ((((v2*v3) + v1) + v7)*v4))
(select((v0 < v1), (min((((v2*v3) + v1)*v4), (v5 + v6)) + (v7*v4)), ((((v2*v3) + v1) + v7)*v4)) <= ((((v2*v3) + v1) + v7)*v4))
(select((v0 < v1), (min((v1*16), ((((v2 + v3) - v4)*2) + v5)) + (v4*2)), (((v1*8) + v4)*2)) <= (((v1*8) + v4)*2))
(select((v0 < v1), (min((v1*16), (((v2 - v3)*2) + v4)) + (v3*2)), (((v1*8) + v3)*2)) <= (((v1*8) + v3)*2))
(select((v0 < v1), (min((v1*2), ((v2*2) + v3)) + (v4*4)), (((v4*2) + v1)*2)) <= (((v4*2) + v1)*2))
(select((v0 < v1), (min((v1*250), (((v2 - v3)*2) + v4)) + (v3*2)), (((v1*125) + v3)*2)) <= (((v1*125) + v3)*2))
(select((v0 < v1), (min((v1*34), (((v2 - v3)*2) + v4)) + (v3*2)), (((v1*17) + v3)*2)) <= (((v1*17) + v3)*2))
(select((v0 < v1), (min((v1*36), (((v2 - v3)*2) + v4)) + (v3*2)), (((v1*18) + v3)*2)) <= (((v1*18) + v3)*2))
(select((v0 < v1), (min((v1*4), ((((v2 + v3) - v4)*2) + v5)) + (v4*2)), (((v1*2) + v4)*2)) <= (((v1*2) + v4)*2))
(select((v0 < v1), (min((v1*4), (((v2 - v3)*2) + v4)) + (v3*2)), (((v1*2) + v3)*2)) <= (((v1*2) + v3)*2))
(select((v0 < v1), (min((v1*4), (v2 + v3)) + (v4*2)), (((v1*2) + v4)*2)) <= (((v1*2) + v4)*2))
(select((v0 < v1), (min((v1*8), (((v2 - v3)*2) + v4)) + (v3*2)), (((v1*4) + v3)*2)) <= (((v1*4) + v3)*2))
(select((v0 < v1), (min((v1*8), (v2 + v3)) + (v4*2)), (((v1*4) + v4)*2)) <= (((v1*4) + v4)*2))
(select((v0 < v1), (min((v1*v2), ((((v3 + v4) - v5)*v2) + v6)) + (v5*v2)), ((v5 + v1)*v2)) <= ((v5 + v1)*v2))
(select((v0 < v1), (min((v1*v2), (((v3 - v4)*v2) + v5)) + ((v6 + v4)*v2)), (((v6 + v4) + v1)*v2)) <= (((v6 + v4) + v1)*v2))
(select((v0 < v1), (min((v1*v2), (((v3 - v4)*v2) + v5)) + (v4*v2)), ((v1 + v4)*v2)) <= ((v1 + v4)*v2))
(select((v0 < v1), (min((v1*v2), (((v3 - v4)*v2) + v5)) + (v4*v2)), ((v4 + v1)*v2)) <= ((v4 + v1)*v2))
(select((v0 < v1), (min((v1*v2), ((v3*v2) + v4)) + (((((v5*v2) + v6)*v7) + v8)*v2)), ((((((v5*v2) + v6)*v7) + v8) + v1)*v2)) <= ((((((v5*v2) + v6)*v7) + v8) + v1)*v2))
(select((v0 < v1), (min((v1*v2), ((v3*v2) + v4)) + (((v5*v2) + v6)*v2)), ((((v5*v2) + v6) + v1)*v2)) <= ((((v5*v2) + v6) + v1)*v2))
(select((v0 < v1), (min((v1*v2), ((v3*v2) + v4)) + (((v5*v6) + v7)*v2)), ((((v5*v6) + v7) + v1)*v2)) <= ((((v5*v6) + v7) + v1)*v2))
(select((v0 < v1), (min((v1*v2), (v3 + v4)) + (((v5*v2) + v6)*v2)), ((((v5*v2) + v6) + v1)*v2)) <= ((((v5*v2) + v6) + v1)*v2))
(select((v0 < v1), (min((v1*v2), (v3 + v4)) + (((v5*v6) + v7)*v2)), ((((v5*v6) + v7) + v1)*v2)) <= ((((v5*v6) + v7) + v1)*v2))
(select((v0 < v1), (min((v1*v2), (v3 + v4)) + (v5*v2)), ((v1 + v5)*v2)) <= ((v1 + v5)*v2))
(select((v0 < v1), (min((v1*v2), (v3 + v4)) + (v5*v2)), ((v5 + v1)*v2)) <= ((v5 + v1)*v2))
(select((v0 < v1), min((((((v2*v3) + v4)*v5) + v1)*v6), (v7 + v8)), (((((v2*v3) + v4)*v5) + v1)*v6)) <= (((((v2*v3) + v4)*v5) + v1)*v6))
(select((v0 < v1), min(((((v2 + v3)*v4) + ((v5*v6) + v1))*v6), (v7 + v8)), ((((v2 + v3)*v4) + ((v5*v6) + v1))*v6)) <= ((((v2 + v3)*v4) + ((v5*v6) + v1))*v6))
(select((v0 < v1), min(((((v2 + v3)*v4) + v1)*v4), (v5 + v6)), ((((v2 + v3)*v4) + v1)*v4)) <= ((((v2 + v3)*v4) + v1)*v4))
(select((v0 < v1), min(((((v2 + v3)*v4) + v1)*v4), v5), ((((v2 + v3)*v4) + v1)*v4)) <= ((((v2 + v3)*v4) + v1)*v4))
(select((v0 < v1), min(((((v2 + v3)*v4) + v1)*v5), (v6 + v7)), ((((v2 + v3)*v4) + v1)*v5)) <= ((((v2 + v3)*v4) + v1)*v5))
(select((v0 < v1), min(((((v2 + v3)*v4) + v1)*v5), v6), ((((v2 + v3)*v4) + v1)*v5)) <= ((((v2 + v3)*v4) + v1)*v5))
(select((v0 < v1), min(((((v2*v3) + ((v4*v5) + v1))*v3) + v6), (v7 + v8)), ((((v2*v3) + ((v4*v5) + v1))*v3) + v6)) <= ((((v2*v3) + ((v4*v5) + v1))*v3) + v6))
(select((v0 < v1), min(((((v2*v3) + ((v4*v5) + v1))*v5) + v6), (v7 + v8)), ((((v2*v3) + ((v4*v5) + v1))*v5) + v6)) <= ((((v2*v3) + ((v4*v5) + v1))*v5) + v6))
(select((v0 < v1), min(((((v2*v3) + ((v4*v5) + v1))*v6) + v7), v8), ((((v2*v3) + ((v4*v5) + v1))*v6) + v7)) <= ((((v2*v3) + ((v4*v5) + v1))*v6) + v7))
(select((v0 < v1), min(((((v2*v3) + v1)*v3) + v4), (v5 + v6)), ((((v2*v3) + v1)*v3) + v4)) <= ((((v2*v3) + v1)*v3) + v4))
(select((v0 < v1), min(((((v2*v3) + v1)*v3) + v4), v5), ((((v2*v3) + v1)*v3) + v4)) <= ((((v2*v3) + v1)*v3) + v4))
(select((v0 < v1), min(((((v2*v3) + v1)*v4) + v5), (v6 + v7)), ((((v2*v3) + v1)*v4) + v5)) <= ((((v2*v3) + v1)*v4) + v5))
(select((v0 < v1), min(((((v2*v3) + v1)*v4) + v5), v6), ((((v2*v3) + v1)*v4) + v5)) <= ((((v2*v3) + v1)*v4) + v5))
(select((v0 < v1), min((((v2 + v3)*v4) + v5), ((((v6*v4) + v1)*v7) + v8)), ((((v6*v4) + v1)*v7) + v8)) <= ((((v6*v4) + v1)*v7) + v8))
(select((v0 < v1), min((((v2 + v3)*v4) + v5), ((((v6*v7) + v1)*v7) + v8)), ((((v6*v7) + v1)*v7) + v8)) <= ((((v6*v7) + v1)*v7) + v8))
(select((v0 < v1), min((((v2 + v3)*v4) + v5), ((v1*v6) + v7)), ((v1*v6) + v7)) <= ((v1*v6) + v7))
(select((v0 < v1), min((((v2*v3) + ((v4*v5) + ((v6*v7) + v1)))*v5), v8), (((v2*v3) + ((v4*v5) + ((v6*v7) + v1)))*v5)) <= (((v2*v3) + ((v4*v5) + ((v6*v7) + v1)))*v5))
(select((v0 < v1), min((((v2*v3) + ((v4*v5) + ((v6*v7) + v1)))*v7), v8), (((v2*v3) + ((v4*v5) + ((v6*v7) + v1)))*v7)) <= (((v2*v3) + ((v4*v5) + ((v6*v7) + v1)))*v7))
(select((v0 < v1), min((((v2*v3) + ((v4*v5) + ((v6*v7) + v1)))*v8), v9), (((v2*v3) + ((v4*v5) + ((v6*v7) + v1)))*v8)) <= (((v2*v3) + ((v4*v5) + ((v6*v7) + v1)))*v8))
(select((v0 < v1), min((((v2*v3) + ((v4*v5) + v1))*v3), (v6 + v7)), (((v2*v3) + ((v4*v5) + v1))*v3)) <= (((v2*v3) + ((v4*v5) + v1))*v3))
(select((v0 < v1), min((((v2*v3) + ((v4*v5) + v1))*v3), v6), (((v2*v3) + ((v4*v5) + v1))*v3)) <= (((v2*v3) + ((v4*v5) + v1))*v3))
(select((v0 < v1), min((((v2*v3) + ((v4*v5) + v1))*v5), ((((v6 + v7)*v5) - v8) + v9)), (((v2*v3) + ((v4*v5) + v1))*v5)) <= (((v2*v3) + ((v4*v5) + v1))*v5))
(select((v0 < v1), min((((v2*v3) + ((v4*v5) + v1))*v5), (((v6 + v7) - v8) + v5)), (((v2*v3) + ((v4*v5) + v1))*v5)) <= (((v2*v3) + ((v4*v5) + v1))*v5))
(select((v0 < v1), min((((v2*v3) + ((v4*v5) + v1))*v5), (((v6 + v7) - v8) + v9)), (((v2*v3) + ((v4*v5) + v1))*v5)) <= (((v2*v3) + ((v4*v5) + v1))*v5))
(select((v0 < v1), min((((v2*v3) + ((v4*v5) + v1))*v5), v6), (((v2*v3) + ((v4*v5) + v1))*v5)) <= (((v2*v3) + ((v4*v5) + v1))*v5))
(select((v0 < v1), min((((v2*v3) + ((v4*v5) + v1))*v6), ((((v7 + v8)*v6) - v9) + v10)), (((v2*v3) + ((v4*v5) + v1))*v6)) <= (((v2*v3) + ((v4*v5) + v1))*v6))
(select((v0 < v1), min((((v2*v3) + ((v4*v5) + v1))*v6), (((v7 + v8) - v9) + v10)), (((v2*v3) + ((v4*v5) + v1))*v6)) <= (((v2*v3) + ((v4*v5) + v1))*v6))
(select((v0 < v1), min((((v2*v3) + ((v4*v5) + v1))*v6), v7), (((v2*v3) + ((v4*v5) + v1))*v6)) <= (((v2*v3) + ((v4*v5) + v1))*v6))
(select((v0 < v1), min((((v2*v3) + (v1*v4)) + v5), v6), (((v2*v3) + (v1*v4)) + v5)) <= (((v2*v3) + (v1*v4)) + v5))
(select((v0 < v1), min((((v2*v3) + v1)*v3), ((((v4 + v5)*v3) - v6) + v7)), (((v2*v3) + v1)*v3)) <= (((v2*v3) + v1)*v3))
(select((v0 < v1), min((((v2*v3) + v1)*v3), ((((v4 + v5)*v6) - v7) + v8)), (((v2*v3) + v1)*v3)) <= (((v2*v3) + v1)*v3))
(select((v0 < v1), min((((v2*v3) + v1)*v3), (((v4 + v5) - v6) + v7)), (((v2*v3) + v1)*v3)) <= (((v2*v3) + v1)*v3))
(select((v0 < v1), min((((v2*v3) + v1)*v3), ((max((v4 + v5), v6) - v7) + v8)), (((v2*v3) + v1)*v3)) <= (((v2*v3) + v1)*v3))
(select((v0 < v1), min((((v2*v3) + v1)*v3), ((max(v4, v5) - v6) + v7)), (((v2*v3) + v1)*v3)) <= (((v2*v3) + v1)*v3))
(select((v0 < v1), min((((v2*v3) + v1)*v3), ((v4 - v5) + v3)), (((v2*v3) + v1)*v3)) <= (((v2*v3) + v1)*v3))
(select((v0 < v1), min((((v2*v3) + v1)*v3), ((v4 - v5) + v6)), (((v2*v3) + v1)*v3)) <= (((v2*v3) + v1)*v3))
(select((v0 < v1), min((((v2*v3) + v1)*v3), (v4 + v3)), (((v2*v3) + v1)*v3)) <= (((v2*v3) + v1)*v3))
(select((v0 < v1), min((((v2*v3) + v1)*v3), (v4 + v5)), (((v2*v3) + v1)*v3)) <= (((v2*v3) + v1)*v3))
(select((v0 < v1), min((((v2*v3) + v1)*v3), v4), (((v2*v3) + v1)*v3)) <= (((v2*v3) + v1)*v3))
(select((v0 < v1), min((((v2*v3) + v1)*v4), ((((v5 + v6)*v3) - v7) + v8)), (((v2*v3) + v1)*v4)) <= (((v2*v3) + v1)*v4))
(select((v0 < v1), min((((v2*v3) + v1)*v4), ((((v5 + v6)*v4) - v7) + v8)), (((v2*v3) + v1)*v4)) <= (((v2*v3) + v1)*v4))
(select((v0 < v1), min((((v2*v3) + v1)*v4), ((((v5 + v6)*v7) - v8) + v9)), (((v2*v3) + v1)*v4)) <= (((v2*v3) + v1)*v4))
(select((v0 < v1), min((((v2*v3) + v1)*v4), (((v5 + v6) - v7) + v3)), (((v2*v3) + v1)*v4)) <= (((v2*v3) + v1)*v4))
(select((v0 < v1), min((((v2*v3) + v1)*v4), (((v5 + v6) - v7) + v4)), (((v2*v3) + v1)*v4)) <= (((v2*v3) + v1)*v4))
(select((v0 < v1), min((((v2*v3) + v1)*v4), (((v5 + v6) - v7) + v8)), (((v2*v3) + v1)*v4)) <= (((v2*v3) + v1)*v4))
(select((v0 < v1), min((((v2*v3) + v1)*v4), (((v5*v3) - v6) + v7)), (((v2*v3) + v1)*v4)) <= (((v2*v3) + v1)*v4))
(select((v0 < v1), min((((v2*v3) + v1)*v4), (((v5*v4) - v6) + v7)), (((v2*v3) + v1)*v4)) <= (((v2*v3) + v1)*v4))
(select((v0 < v1), min((((v2*v3) + v1)*v4), (((v5*v6) - v7) + v8)), (((v2*v3) + v1)*v4)) <= (((v2*v3) + v1)*v4))
(select((v0 < v1), min((((v2*v3) + v1)*v4), ((max((v5 + v6), v7) - v8) + v9)), (((v2*v3) + v1)*v4)) <= (((v2*v3) + v1)*v4))
(select((v0 < v1), min((((v2*v3) + v1)*v4), ((max(v5, v6) - v7) + v8)), (((v2*v3) + v1)*v4)) <= (((v2*v3) + v1)*v4))
(select((v0 < v1), min((((v2*v3) + v1)*v4), ((v5 - v6) + v3)), (((v2*v3) + v1)*v4)) <= (((v2*v3) + v1)*v4))
(select((v0 < v1), min((((v2*v3) + v1)*v4), ((v5 - v6) + v4)), (((v2*v3) + v1)*v4)) <= (((v2*v3) + v1)*v4))
(select((v0 < v1), min((((v2*v3) + v1)*v4), ((v5 - v6) + v7)), (((v2*v3) + v1)*v4)) <= (((v2*v3) + v1)*v4))
(select((v0 < v1), min((((v2*v3) + v1)*v4), (v5 + v3)), (((v2*v3) + v1)*v4)) <= (((v2*v3) + v1)*v4))
(select((v0 < v1), min((((v2*v3) + v1)*v4), (v5 + v6)), (((v2*v3) + v1)*v4)) <= (((v2*v3) + v1)*v4))
(select((v0 < v1), min((((v2*v3) + v1)*v4), v5), (((v2*v3) + v1)*v4)) <= (((v2*v3) + v1)*v4))
(select((v0 < v1), min((((v2*v3) - v4) + v5), ((v6*v7) + (v1*v8))), ((v6*v7) + (v1*v8))) <= ((v6*v7) + (v1*v8)))
(select((v0 < v1), min((((v2*v3) - v4) + v5), v6), v6) <= v6)
(select((v0 < v1), min(((v1 + v2)*v3), (v4 + v3)), ((v1 + v2)*v3)) <= ((v1 + v2)*v3))
(select((v0 < v1), min(((v1 + v2)*v3), (v4 + v5)), ((v1 + v2)*v3)) <= ((v1 + v2)*v3))
(select((v0 < v1), min(((v1*v2) + v3), (v4 + v5)), ((v1*v2) + v3)) <= ((v1*v2) + v3))
(select((v0 < v1), min(((v1*v2) + v3), v4), ((v1*v2) + v3)) <= ((v1*v2) + v3))
(select((v0 < v1), min(((v2 - v3) + v4), ((v5*v6) + (v1*v7))), ((v5*v6) + (v1*v7))) <= ((v5*v6) + (v1*v7)))
(select((v0 < v1), min(((v2 - v3) + v4), v5), v5) <= v5)
(select((v0 < v1), min(((v2*v3) + ((((v4*v5) + v1)*v6) + (v7*v8))), v9), ((v2*v3) + ((((v4*v5) + v1)*v6) + (v7*v8)))) <= ((v2*v3) + ((((v4*v5) + v1)*v6) + (v7*v8))))
(select((v0 < v1), min(((v2*v3) + (((v4*v5) + ((v6*v7) + ((v8*v9) + v1)))*v10)), v11), ((v2*v3) + (((v4*v5) + ((v6*v7) + ((v8*v9) + v1)))*v10))) <= ((v2*v3) + (((v4*v5) + ((v6*v7) + ((v8*v9) + v1)))*v10)))
(select((v0 < v1), min(((v2*v3) + (((v4*v5) + ((v6*v7) + ((v8*v9) + v1)))*v7)), v10), ((v2*v3) + (((v4*v5) + ((v6*v7) + ((v8*v9) + v1)))*v7))) <= ((v2*v3) + (((v4*v5) + ((v6*v7) + ((v8*v9) + v1)))*v7)))
(select((v0 < v1), min(((v2*v3) + (((v4*v5) + ((v6*v7) + ((v8*v9) + v1)))*v9)), v10), ((v2*v3) + (((v4*v5) + ((v6*v7) + ((v8*v9) + v1)))*v9))) <= ((v2*v3) + (((v4*v5) + ((v6*v7) + ((v8*v9) + v1)))*v9)))
(select((v0 < v1), min(((v2*v3) + (((v4*v5) + ((v6*v7) + v1))*v5)), v8), ((v2*v3) + (((v4*v5) + ((v6*v7) + v1))*v5))) <= ((v2*v3) + (((v4*v5) + ((v6*v7) + v1))*v5)))
(select((v0 < v1), min(((v2*v3) + (((v4*v5) + ((v6*v7) + v1))*v7)), v8), ((v2*v3) + (((v4*v5) + ((v6*v7) + v1))*v7))) <= ((v2*v3) + (((v4*v5) + ((v6*v7) + v1))*v7)))
(select((v0 < v1), min(((v2*v3) + (((v4*v5) + ((v6*v7) + v1))*v8)), v9), ((v2*v3) + (((v4*v5) + ((v6*v7) + v1))*v8))) <= ((v2*v3) + (((v4*v5) + ((v6*v7) + v1))*v8)))
(select((v0 < v1), min(((v2*v3) + (((v4*v5) + v1)*v5)), (((v6 + v7) - v8) + v5)), ((v2*v3) + (((v4*v5) + v1)*v5))) <= ((v2*v3) + (((v4*v5) + v1)*v5)))
(select((v0 < v1), min(((v2*v3) + (((v4*v5) + v1)*v5)), (v6 + v7)), ((v2*v3) + (((v4*v5) + v1)*v5))) <= ((v2*v3) + (((v4*v5) + v1)*v5)))
(select((v0 < v1), min(((v2*v3) + (((v4*v5) + v1)*v5)), v6), ((v2*v3) + (((v4*v5) + v1)*v5))) <= ((v2*v3) + (((v4*v5) + v1)*v5)))
(select((v0 < v1), min(((v2*v3) + (((v4*v5) + v1)*v6)), ((v7 - v8) + v9)), ((v2*v3) + (((v4*v5) + v1)*v6))) <= ((v2*v3) + (((v4*v5) + v1)*v6)))
(select((v0 < v1), min(((v2*v3) + (((v4*v5) + v1)*v6)), (v7 + v8)), ((v2*v3) + (((v4*v5) + v1)*v6))) <= ((v2*v3) + (((v4*v5) + v1)*v6)))
(select((v0 < v1), min(((v2*v3) + (((v4*v5) + v1)*v6)), v7), ((v2*v3) + (((v4*v5) + v1)*v6))) <= ((v2*v3) + (((v4*v5) + v1)*v6)))
(select((v0 < v1), min(((v2*v3) + ((v1*v4) + (v5*v6))), (((v7 + v8) - v9) + v10)), ((v2*v3) + ((v1*v4) + (v5*v6)))) <= ((v2*v3) + ((v1*v4) + (v5*v6))))
(select((v0 < v1), min(((v2*v3) + ((v1*v4) + (v5*v6))), (v7 + v8)), ((v2*v3) + ((v1*v4) + (v5*v6)))) <= ((v2*v3) + ((v1*v4) + (v5*v6))))
(select((v0 < v1), min(((v2*v3) + ((v1*v4) + (v5*v6))), v7), ((v2*v3) + ((v1*v4) + (v5*v6)))) <= ((v2*v3) + ((v1*v4) + (v5*v6))))
(select((v0 < v1), min(((v2*v3) + ((v4*v5) + (((v6*v7) + ((v8*v9) + ((v10*v11) + v1)))*v12))), v13), ((v2*v3) + ((v4*v5) + (((v6*v7) + ((v8*v9) + ((v10*v11) + v1)))*v12)))) <= ((v2*v3) + ((v4*v5) + (((v6*v7) + ((v8*v9) + ((v10*v11) + v1)))*v12))))
(select((v0 < v1), min(((v2*v3) + ((v4*v5) + (((v6*v7) + ((v8*v9) + v1))*v10))), v11), ((v2*v3) + ((v4*v5) + (((v6*v7) + ((v8*v9) + v1))*v10)))) <= ((v2*v3) + ((v4*v5) + (((v6*v7) + ((v8*v9) + v1))*v10))))
(select((v0 < v1), min(((v2*v3) + ((v4*v5) + (((v6*v7) + ((v8*v9) + v1))*v9))), v10), ((v2*v3) + ((v4*v5) + (((v6*v7) + ((v8*v9) + v1))*v9)))) <= ((v2*v3) + ((v4*v5) + (((v6*v7) + ((v8*v9) + v1))*v9))))
(select((v0 < v1), min(((v2*v3) + ((v4*v5) + (((v6*v7) + v1)*v7))), v8), ((v2*v3) + ((v4*v5) + (((v6*v7) + v1)*v7)))) <= ((v2*v3) + ((v4*v5) + (((v6*v7) + v1)*v7))))
(select((v0 < v1), min(((v2*v3) + ((v4*v5) + (((v6*v7) + v1)*v8))), v9), ((v2*v3) + ((v4*v5) + (((v6*v7) + v1)*v8)))) <= ((v2*v3) + ((v4*v5) + (((v6*v7) + v1)*v8))))
(select((v0 < v1), min(((v2*v3) + ((v4*v5) + ((v1*v6) + (v7*v8)))), (v9 + v10)), ((v2*v3) + ((v4*v5) + ((v1*v6) + (v7*v8))))) <= ((v2*v3) + ((v4*v5) + ((v1*v6) + (v7*v8)))))
(select((v0 < v1), min(((v2*v3) + ((v4*v5) + ((v1*v6) + (v7*v8)))), v9), ((v2*v3) + ((v4*v5) + ((v1*v6) + (v7*v8))))) <= ((v2*v3) + ((v4*v5) + ((v1*v6) + (v7*v8)))))
(select((v0 < v1), min(((v2*v3) + ((v4*v5) + ((v6*v7) + (((v8*v9) + v1)*v10)))), v11), ((v2*v3) + ((v4*v5) + ((v6*v7) + (((v8*v9) + v1)*v10))))) <= ((v2*v3) + ((v4*v5) + ((v6*v7) + (((v8*v9) + v1)*v10)))))
(select((v0 < v1), min(((v2*v3) + ((v4*v5) + ((v6*v7) + ((v1*v8) + (v9*v10))))), v11), ((v2*v3) + ((v4*v5) + ((v6*v7) + ((v1*v8) + (v9*v10)))))) <= ((v2*v3) + ((v4*v5) + ((v6*v7) + ((v1*v8) + (v9*v10))))))
(select((v0 < v1), min(((v2*v3) + ((v4*v5) + ((v6*v7) + (v1*v8)))), v9), ((v2*v3) + ((v4*v5) + ((v6*v7) + (v1*v8))))) <= ((v2*v3) + ((v4*v5) + ((v6*v7) + (v1*v8)))))
(select((v0 < v1), min(((v2*v3) + ((v4*v5) + (v1*v6))), (((v7 + v8) - v9) + v6)), ((v2*v3) + ((v4*v5) + (v1*v6)))) <= ((v2*v3) + ((v4*v5) + (v1*v6))))
(select((v0 < v1), min(((v2*v3) + ((v4*v5) + (v1*v6))), ((v7*v8) + v9)), ((v2*v3) + ((v4*v5) + (v1*v6)))) <= ((v2*v3) + ((v4*v5) + (v1*v6))))
(select((v0 < v1), min(((v2*v3) + ((v4*v5) + (v1*v6))), (v7 + v6)), ((v2*v3) + ((v4*v5) + (v1*v6)))) <= ((v2*v3) + ((v4*v5) + (v1*v6))))
(select((v0 < v1), min(((v2*v3) + ((v4*v5) + (v1*v6))), (v7 + v8)), ((v2*v3) + ((v4*v5) + (v1*v6)))) <= ((v2*v3) + ((v4*v5) + (v1*v6))))
(select((v0 < v1), min(((v2*v3) + ((v4*v5) + (v1*v6))), v7), ((v2*v3) + ((v4*v5) + (v1*v6)))) <= ((v2*v3) + ((v4*v5) + (v1*v6))))
(select((v0 < v1), min(((v2*v3) + (v1*v4)), ((((v5 + v6)*v4) - v7) + v8)), ((v2*v3) + (v1*v4))) <= ((v2*v3) + (v1*v4)))
(select((v0 < v1), min(((v2*v3) + (v1*v4)), ((((v5 + v6)*v7) - v8) + v9)), ((v2*v3) + (v1*v4))) <= ((v2*v3) + (v1*v4)))
(select((v0 < v1), min(((v2*v3) + (v1*v4)), (((v5 + v6) - v7) + v4)), ((v2*v3) + (v1*v4))) <= ((v2*v3) + (v1*v4)))
(select((v0 < v1), min(((v2*v3) + (v1*v4)), (((v5 + v6) - v7) + v8)), ((v2*v3) + (v1*v4))) <= ((v2*v3) + (v1*v4)))
(select((v0 < v1), min(((v2*v3) + (v1*v4)), (((v5 - v6)*v7) + v3)), ((v2*v3) + (v1*v4))) <= ((v2*v3) + (v1*v4)))
(select((v0 < v1), min(((v2*v3) + (v1*v4)), (((v5 - v6)*v7) + v8)), ((v2*v3) + (v1*v4))) <= ((v2*v3) + (v1*v4)))
(select((v0 < v1), min(((v2*v3) + (v1*v4)), (((v5*v4) - v6) + v7)), ((v2*v3) + (v1*v4))) <= ((v2*v3) + (v1*v4)))
(select((v0 < v1), min(((v2*v3) + (v1*v4)), (((v5*v6) - v7) + v8)), ((v2*v3) + (v1*v4))) <= ((v2*v3) + (v1*v4)))
(select((v0 < v1), min(((v2*v3) + (v1*v4)), ((max(v5, v6) - v7) + v8)), ((v2*v3) + (v1*v4))) <= ((v2*v3) + (v1*v4)))
(select((v0 < v1), min(((v2*v3) + (v1*v4)), ((v5 - v6) + v3)), ((v2*v3) + (v1*v4))) <= ((v2*v3) + (v1*v4)))
(select((v0 < v1), min(((v2*v3) + (v1*v4)), ((v5 - v6) + v4)), ((v2*v3) + (v1*v4))) <= ((v2*v3) + (v1*v4)))
(select((v0 < v1), min(((v2*v3) + (v1*v4)), ((v5 - v6) + v7)), ((v2*v3) + (v1*v4))) <= ((v2*v3) + (v1*v4)))
(select((v0 < v1), min(((v2*v3) + (v1*v4)), ((v5*v4) + v6)), ((v2*v3) + (v1*v4))) <= ((v2*v3) + (v1*v4)))
(select((v0 < v1), min(((v2*v3) + (v1*v4)), ((v5*v6) + v7)), ((v2*v3) + (v1*v4))) <= ((v2*v3) + (v1*v4)))
(select((v0 < v1), min(((v2*v3) + (v1*v4)), (v5 + v3)), ((v2*v3) + (v1*v4))) <= ((v2*v3) + (v1*v4)))
(select((v0 < v1), min(((v2*v3) + (v1*v4)), (v5 + v4)), ((v2*v3) + (v1*v4))) <= ((v2*v3) + (v1*v4)))
(select((v0 < v1), min(((v2*v3) + (v1*v4)), (v5 + v6)), ((v2*v3) + (v1*v4))) <= ((v2*v3) + (v1*v4)))
(select((v0 < v1), min(((v2*v3) + (v1*v4)), v5), ((v2*v3) + (v1*v4))) <= ((v2*v3) + (v1*v4)))
(select((v0 < v1), min((min(((v2*v3) + ((v4*v5) + ((v6*v7) + v1))), v8) + (v9*v8)), v10), ((v9*v8) + ((v2*v3) + ((v4*v5) + ((v6*v7) + v1))))) <= ((v9*v8) + ((v2*v3) + ((v4*v5) + ((v6*v7) + v1)))))
(select((v0 < v1), min((min(((v2*v3) + ((v4*v5) + v1)), v6) + (v7*v6)), ((v8 - v9) + v10)), ((v7*v6) + ((v2*v3) + ((v4*v5) + v1)))) <= ((v7*v6) + ((v2*v3) + ((v4*v5) + v1))))
(select((v0 < v1), min((min(((v2*v3) + ((v4*v5) + v1)), v6) + (v7*v6)), v8), ((v7*v6) + ((v2*v3) + ((v4*v5) + v1)))) <= ((v7*v6) + ((v2*v3) + ((v4*v5) + v1))))
(select((v0 < v1), min((v1*v2), ((((v3 + v4)*v2) - v5) + v6)), (v1*v2)) <= (v1*v2))
(select((v0 < v1), min((v1*v2), ((((v3 + v4)*v5) - v6) + v7)), (v1*v2)) <= (v1*v2))
(select((v0 < v1), min((v1*v2), (((v3 + v4) - v5) + v2)), (v1*v2)) <= (v1*v2))
(select((v0 < v1), min((v1*v2), (((v3 + v4) - v5) + v6)), (v1*v2)) <= (v1*v2))
(select((v0 < v1), min((v1*v2), (((v3*v2) - v4) + v5)), (v1*v2)) <= (v1*v2))
(select((v0 < v1), min((v1*v2), ((max((v3 + v4), v5) - v6) + v7)), (v1*v2)) <= (v1*v2))
(select((v0 < v1), min((v1*v2), ((max(v3, v4) - v5) + v6)), (v1*v2)) <= (v1*v2))
(select((v0 < v1), min((v1*v2), ((v3 - v4) + v2)), (v1*v2)) <= (v1*v2))
(select((v0 < v1), min((v1*v2), ((v3 - v4) + v5)), (v1*v2)) <= (v1*v2))
(select((v0 < v1), min((v1*v2), (v3 + v4)), (v1*v2)) <= (v1*v2))
(select((v0 < v1), min((v1*v2), v3), (v1*v2)) <= (v1*v2))
(select((v0 < v1), min((v2 + v3), (((v4*v5) + (v1*v6)) + v7)), (((v4*v5) + (v1*v6)) + v7)) <= (((v4*v5) + (v1*v6)) + v7))
(select((v0 < v1), min((v2 + v3), ((v4*v5) + (v1*v6))), ((v4*v5) + (v1*v6))) <= ((v4*v5) + (v1*v6)))
(select((v0 < v1), min((v2 + v3), v4), v4) <= v4)
(select((v0 < v1), min((v2*v3), (v4 + v5)), (v2*v3)) <= (v2*v3))
(select((v0 < v1), min((v2*v3), v4), (v2*v3)) <= (v2*v3))
(select((v0 < v1), min(max((v2 + v3), v4), ((((v5*v6) + v1)*v6) + v7)), ((((v5*v6) + v1)*v6) + v7)) <= ((((v5*v6) + v1)*v6) + v7))
(select((v0 < v1), min(max((v2 + v3), v4), ((((v5*v6) + v1)*v7) + v8)), ((((v5*v6) + v1)*v7) + v8)) <= ((((v5*v6) + v1)*v7) + v8))
(select((v0 < v1), min(max((v2 + v3), v4), (((v5*v6) + (v1*v7)) + v8)), (((v5*v6) + (v1*v7)) + v8)) <= (((v5*v6) + (v1*v7)) + v8))
(select((v0 < v1), min(v2, v3), v2) <= v2)
(select((v0 < v1), min(v2, v3), v3) <= v3)
(uint1)1
(v0 <= ((((min(((((v0 - v1) + 21)/18)*18), ((v0 - v1) + 4)) + -1)/4)*4) + v1))
(v0 <= (min(v0, 2) + (((max(v0, 2) + 1)/4)*4)))
(v0 <= (min(v0, 4) + (((max(v0, 4) + -1)/4)*4)))
(v0 <= max(max(v1, v0), min(((((v2 + v3)/v4)*v4) + ((v5*v6) + v7)), ((v7 + v8) + v9))))
(v0 <= select((2 < v1), (min(v1, 0) + v0), v0))
(v0 <= select((v0 < (((v1 + v2)*v3) + -5)), min((((v1 + v2)*v3) + -1), v0), v0))
(v0 <= select((v0 < ((v1 + v2) + -2)), min((v1 + v2), v0), v0))
(v0 <= select((v0 < ((v1 + v2) + -4)), min((v1 + v2), v0), v0))
(v0 <= select((v0 < ((v1 + v2) + -8)), min((v1 + v2), v0), v0))
(v0 <= select((v0 < ((v1*v2) + -3)), min(((v1*v2) + 1), v0), v0))
(v0 <= select((v0 < (v1 + -1)), min((v1 + 1), v0), v0))
(v0 <= select((v0 < (v1 + -2)), min(v0, v1), v0))
(v0 <= select((v0 < (v1 + -4)), min(v0, v1), v0))
(v0 <= select((v0 < (v1 + -7)), min((v1 + 1), v0), v0))
(v0 <= select((v0 < (v1 + 2)), min((v1 + 10), v0), v0))
(v0 <= select((v0 < (v1 + 2)), min((v1 + 12), v0), v0))
